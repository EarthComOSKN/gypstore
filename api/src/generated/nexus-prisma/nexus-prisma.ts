/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      ShoppingCart: ShoppingCartObject
      ShoppingCartItem: ShoppingCartItemObject
      ProductItem: ProductItemObject
      Category: CategoryObject
      Order: OrderObject
      OrderItem: OrderItemObject
      Salesman: SalesmanObject
      Payment: PaymentObject
      Invoice: InvoiceObject
      Address: AddressObject
      Shipping: ShippingObject
      Quotation: QuotationObject
      QuotationItem: QuotationItemObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      QuotationConnection: QuotationConnectionObject
      QuotationEdge: QuotationEdgeObject
      AggregateQuotation: AggregateQuotationObject
      QuotationItemConnection: QuotationItemConnectionObject
      QuotationItemEdge: QuotationItemEdgeObject
      AggregateQuotationItem: AggregateQuotationItemObject
      AddressConnection: AddressConnectionObject
      AddressEdge: AddressEdgeObject
      AggregateAddress: AggregateAddressObject
      PaymentConnection: PaymentConnectionObject
      PaymentEdge: PaymentEdgeObject
      AggregatePayment: AggregatePaymentObject
      SalesmanConnection: SalesmanConnectionObject
      SalesmanEdge: SalesmanEdgeObject
      AggregateSalesman: AggregateSalesmanObject
      InvoiceConnection: InvoiceConnectionObject
      InvoiceEdge: InvoiceEdgeObject
      AggregateInvoice: AggregateInvoiceObject
      ShippingConnection: ShippingConnectionObject
      ShippingEdge: ShippingEdgeObject
      AggregateShipping: AggregateShippingObject
      CategoryConnection: CategoryConnectionObject
      CategoryEdge: CategoryEdgeObject
      AggregateCategory: AggregateCategoryObject
      ProductItemConnection: ProductItemConnectionObject
      ProductItemEdge: ProductItemEdgeObject
      AggregateProductItem: AggregateProductItemObject
      ShoppingCartItemConnection: ShoppingCartItemConnectionObject
      ShoppingCartItemEdge: ShoppingCartItemEdgeObject
      AggregateShoppingCartItem: AggregateShoppingCartItemObject
      ShoppingCartConnection: ShoppingCartConnectionObject
      ShoppingCartEdge: ShoppingCartEdgeObject
      AggregateShoppingCart: AggregateShoppingCartObject
      OrderItemConnection: OrderItemConnectionObject
      OrderItemEdge: OrderItemEdgeObject
      AggregateOrderItem: AggregateOrderItemObject
      OrderConnection: OrderConnectionObject
      OrderEdge: OrderEdgeObject
      AggregateOrder: AggregateOrderObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      QuotationSubscriptionPayload: QuotationSubscriptionPayloadObject
      QuotationPreviousValues: QuotationPreviousValuesObject
      QuotationItemSubscriptionPayload: QuotationItemSubscriptionPayloadObject
      QuotationItemPreviousValues: QuotationItemPreviousValuesObject
      AddressSubscriptionPayload: AddressSubscriptionPayloadObject
      AddressPreviousValues: AddressPreviousValuesObject
      PaymentSubscriptionPayload: PaymentSubscriptionPayloadObject
      PaymentPreviousValues: PaymentPreviousValuesObject
      SalesmanSubscriptionPayload: SalesmanSubscriptionPayloadObject
      SalesmanPreviousValues: SalesmanPreviousValuesObject
      InvoiceSubscriptionPayload: InvoiceSubscriptionPayloadObject
      InvoicePreviousValues: InvoicePreviousValuesObject
      ShippingSubscriptionPayload: ShippingSubscriptionPayloadObject
      ShippingPreviousValues: ShippingPreviousValuesObject
      CategorySubscriptionPayload: CategorySubscriptionPayloadObject
      CategoryPreviousValues: CategoryPreviousValuesObject
      ProductItemSubscriptionPayload: ProductItemSubscriptionPayloadObject
      ProductItemPreviousValues: ProductItemPreviousValuesObject
      ShoppingCartItemSubscriptionPayload: ShoppingCartItemSubscriptionPayloadObject
      ShoppingCartItemPreviousValues: ShoppingCartItemPreviousValuesObject
      ShoppingCartSubscriptionPayload: ShoppingCartSubscriptionPayloadObject
      ShoppingCartPreviousValues: ShoppingCartPreviousValuesObject
      OrderItemSubscriptionPayload: OrderItemSubscriptionPayloadObject
      OrderItemPreviousValues: OrderItemPreviousValuesObject
      OrderSubscriptionPayload: OrderSubscriptionPayloadObject
      OrderPreviousValues: OrderPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      ShoppingCart: ShoppingCartFieldDetails
      ShoppingCartItem: ShoppingCartItemFieldDetails
      ProductItem: ProductItemFieldDetails
      Category: CategoryFieldDetails
      Order: OrderFieldDetails
      OrderItem: OrderItemFieldDetails
      Salesman: SalesmanFieldDetails
      Payment: PaymentFieldDetails
      Invoice: InvoiceFieldDetails
      Address: AddressFieldDetails
      Shipping: ShippingFieldDetails
      Quotation: QuotationFieldDetails
      QuotationItem: QuotationItemFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      QuotationConnection: QuotationConnectionFieldDetails
      QuotationEdge: QuotationEdgeFieldDetails
      AggregateQuotation: AggregateQuotationFieldDetails
      QuotationItemConnection: QuotationItemConnectionFieldDetails
      QuotationItemEdge: QuotationItemEdgeFieldDetails
      AggregateQuotationItem: AggregateQuotationItemFieldDetails
      AddressConnection: AddressConnectionFieldDetails
      AddressEdge: AddressEdgeFieldDetails
      AggregateAddress: AggregateAddressFieldDetails
      PaymentConnection: PaymentConnectionFieldDetails
      PaymentEdge: PaymentEdgeFieldDetails
      AggregatePayment: AggregatePaymentFieldDetails
      SalesmanConnection: SalesmanConnectionFieldDetails
      SalesmanEdge: SalesmanEdgeFieldDetails
      AggregateSalesman: AggregateSalesmanFieldDetails
      InvoiceConnection: InvoiceConnectionFieldDetails
      InvoiceEdge: InvoiceEdgeFieldDetails
      AggregateInvoice: AggregateInvoiceFieldDetails
      ShippingConnection: ShippingConnectionFieldDetails
      ShippingEdge: ShippingEdgeFieldDetails
      AggregateShipping: AggregateShippingFieldDetails
      CategoryConnection: CategoryConnectionFieldDetails
      CategoryEdge: CategoryEdgeFieldDetails
      AggregateCategory: AggregateCategoryFieldDetails
      ProductItemConnection: ProductItemConnectionFieldDetails
      ProductItemEdge: ProductItemEdgeFieldDetails
      AggregateProductItem: AggregateProductItemFieldDetails
      ShoppingCartItemConnection: ShoppingCartItemConnectionFieldDetails
      ShoppingCartItemEdge: ShoppingCartItemEdgeFieldDetails
      AggregateShoppingCartItem: AggregateShoppingCartItemFieldDetails
      ShoppingCartConnection: ShoppingCartConnectionFieldDetails
      ShoppingCartEdge: ShoppingCartEdgeFieldDetails
      AggregateShoppingCart: AggregateShoppingCartFieldDetails
      OrderItemConnection: OrderItemConnectionFieldDetails
      OrderItemEdge: OrderItemEdgeFieldDetails
      AggregateOrderItem: AggregateOrderItemFieldDetails
      OrderConnection: OrderConnectionFieldDetails
      OrderEdge: OrderEdgeFieldDetails
      AggregateOrder: AggregateOrderFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      QuotationSubscriptionPayload: QuotationSubscriptionPayloadFieldDetails
      QuotationPreviousValues: QuotationPreviousValuesFieldDetails
      QuotationItemSubscriptionPayload: QuotationItemSubscriptionPayloadFieldDetails
      QuotationItemPreviousValues: QuotationItemPreviousValuesFieldDetails
      AddressSubscriptionPayload: AddressSubscriptionPayloadFieldDetails
      AddressPreviousValues: AddressPreviousValuesFieldDetails
      PaymentSubscriptionPayload: PaymentSubscriptionPayloadFieldDetails
      PaymentPreviousValues: PaymentPreviousValuesFieldDetails
      SalesmanSubscriptionPayload: SalesmanSubscriptionPayloadFieldDetails
      SalesmanPreviousValues: SalesmanPreviousValuesFieldDetails
      InvoiceSubscriptionPayload: InvoiceSubscriptionPayloadFieldDetails
      InvoicePreviousValues: InvoicePreviousValuesFieldDetails
      ShippingSubscriptionPayload: ShippingSubscriptionPayloadFieldDetails
      ShippingPreviousValues: ShippingPreviousValuesFieldDetails
      CategorySubscriptionPayload: CategorySubscriptionPayloadFieldDetails
      CategoryPreviousValues: CategoryPreviousValuesFieldDetails
      ProductItemSubscriptionPayload: ProductItemSubscriptionPayloadFieldDetails
      ProductItemPreviousValues: ProductItemPreviousValuesFieldDetails
      ShoppingCartItemSubscriptionPayload: ShoppingCartItemSubscriptionPayloadFieldDetails
      ShoppingCartItemPreviousValues: ShoppingCartItemPreviousValuesFieldDetails
      ShoppingCartSubscriptionPayload: ShoppingCartSubscriptionPayloadFieldDetails
      ShoppingCartPreviousValues: ShoppingCartPreviousValuesFieldDetails
      OrderItemSubscriptionPayload: OrderItemSubscriptionPayloadFieldDetails
      OrderItemPreviousValues: OrderItemPreviousValuesFieldDetails
      OrderSubscriptionPayload: OrderSubscriptionPayloadFieldDetails
      OrderPreviousValues: OrderPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      ShoppingCartItemWhereInput: ShoppingCartItemWhereInputInputObject
      ProductItemWhereInput: ProductItemWhereInputInputObject
      CategoryWhereInput: CategoryWhereInputInputObject
      ShoppingCartWhereInput: ShoppingCartWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      OrderWhereInput: OrderWhereInputInputObject
      OrderItemWhereInput: OrderItemWhereInputInputObject
      SalesmanWhereInput: SalesmanWhereInputInputObject
      PaymentWhereInput: PaymentWhereInputInputObject
      InvoiceWhereInput: InvoiceWhereInputInputObject
      AddressWhereInput: AddressWhereInputInputObject
      ShippingWhereInput: ShippingWhereInputInputObject
      QuotationWhereInput: QuotationWhereInputInputObject
      QuotationItemWhereInput: QuotationItemWhereInputInputObject
      QuotationWhereUniqueInput: QuotationWhereUniqueInputInputObject
      QuotationItemWhereUniqueInput: QuotationItemWhereUniqueInputInputObject
      AddressWhereUniqueInput: AddressWhereUniqueInputInputObject
      PaymentWhereUniqueInput: PaymentWhereUniqueInputInputObject
      SalesmanWhereUniqueInput: SalesmanWhereUniqueInputInputObject
      InvoiceWhereUniqueInput: InvoiceWhereUniqueInputInputObject
      ShippingWhereUniqueInput: ShippingWhereUniqueInputInputObject
      CategoryWhereUniqueInput: CategoryWhereUniqueInputInputObject
      ProductItemWhereUniqueInput: ProductItemWhereUniqueInputInputObject
      ShoppingCartItemWhereUniqueInput: ShoppingCartItemWhereUniqueInputInputObject
      ShoppingCartWhereUniqueInput: ShoppingCartWhereUniqueInputInputObject
      OrderItemWhereUniqueInput: OrderItemWhereUniqueInputInputObject
      OrderWhereUniqueInput: OrderWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      ShoppingCartCreateOneWithoutCustomerInput: ShoppingCartCreateOneWithoutCustomerInputInputObject
      ShoppingCartCreateWithoutCustomerInput: ShoppingCartCreateWithoutCustomerInputInputObject
      ShoppingCartItemCreateManyWithoutShoppingCartInput: ShoppingCartItemCreateManyWithoutShoppingCartInputInputObject
      ShoppingCartItemCreateWithoutShoppingCartInput: ShoppingCartItemCreateWithoutShoppingCartInputInputObject
      ProductItemCreateOneInput: ProductItemCreateOneInputInputObject
      ProductItemCreateInput: ProductItemCreateInputInputObject
      CategoryCreateOneWithoutProductItemInput: CategoryCreateOneWithoutProductItemInputInputObject
      CategoryCreateWithoutProductItemInput: CategoryCreateWithoutProductItemInputInputObject
      CategoryCreateOneInput: CategoryCreateOneInputInputObject
      CategoryCreateInput: CategoryCreateInputInputObject
      ProductItemCreateManyWithoutCategoryInput: ProductItemCreateManyWithoutCategoryInputInputObject
      ProductItemCreateWithoutCategoryInput: ProductItemCreateWithoutCategoryInputInputObject
      ShoppingCartCreateOneInput: ShoppingCartCreateOneInputInputObject
      ShoppingCartCreateInput: ShoppingCartCreateInputInputObject
      UserCreateOneWithoutShoppingCartInput: UserCreateOneWithoutShoppingCartInputInputObject
      UserCreateWithoutShoppingCartInput: UserCreateWithoutShoppingCartInputInputObject
      OrderCreateManyWithoutCustomerInput: OrderCreateManyWithoutCustomerInputInputObject
      OrderCreateWithoutCustomerInput: OrderCreateWithoutCustomerInputInputObject
      OrderItemCreateManyWithoutOrderInput: OrderItemCreateManyWithoutOrderInputInputObject
      OrderItemCreateWithoutOrderInput: OrderItemCreateWithoutOrderInputInputObject
      SalesmanCreateOneWithoutOrdersInput: SalesmanCreateOneWithoutOrdersInputInputObject
      SalesmanCreateWithoutOrdersInput: SalesmanCreateWithoutOrdersInputInputObject
      PaymentCreateManyWithoutSalesmanInput: PaymentCreateManyWithoutSalesmanInputInputObject
      PaymentCreateWithoutSalesmanInput: PaymentCreateWithoutSalesmanInputInputObject
      UserCreateOneWithoutPaymentsInput: UserCreateOneWithoutPaymentsInputInputObject
      UserCreateWithoutPaymentsInput: UserCreateWithoutPaymentsInputInputObject
      QuotationCreateManyWithoutCustomerInput: QuotationCreateManyWithoutCustomerInputInputObject
      QuotationCreateWithoutCustomerInput: QuotationCreateWithoutCustomerInputInputObject
      QuotationItemCreateManyWithoutQuotationInput: QuotationItemCreateManyWithoutQuotationInputInputObject
      QuotationItemCreateWithoutQuotationInput: QuotationItemCreateWithoutQuotationInputInputObject
      AddressCreateManyWithoutCustomerInput: AddressCreateManyWithoutCustomerInputInputObject
      AddressCreateWithoutCustomerInput: AddressCreateWithoutCustomerInputInputObject
      InvoiceCreateManyWithoutAddressInput: InvoiceCreateManyWithoutAddressInputInputObject
      InvoiceCreateWithoutAddressInput: InvoiceCreateWithoutAddressInputInputObject
      UserCreateOneInput: UserCreateOneInputInputObject
      OrderCreateOneInput: OrderCreateOneInputInputObject
      OrderCreateInput: OrderCreateInputInputObject
      PaymentCreateOneWithoutOrderInput: PaymentCreateOneWithoutOrderInputInputObject
      PaymentCreateWithoutOrderInput: PaymentCreateWithoutOrderInputInputObject
      SalesmanCreateOneWithoutPaymentsInput: SalesmanCreateOneWithoutPaymentsInputInputObject
      SalesmanCreateWithoutPaymentsInput: SalesmanCreateWithoutPaymentsInputInputObject
      InvoiceCreateManyWithoutSalesmanInput: InvoiceCreateManyWithoutSalesmanInputInputObject
      InvoiceCreateWithoutSalesmanInput: InvoiceCreateWithoutSalesmanInputInputObject
      AddressCreateOneWithoutInvoicesInput: AddressCreateOneWithoutInvoicesInputInputObject
      AddressCreateWithoutInvoicesInput: AddressCreateWithoutInvoicesInputInputObject
      UserCreateOneWithoutAddressesInput: UserCreateOneWithoutAddressesInputInputObject
      UserCreateWithoutAddressesInput: UserCreateWithoutAddressesInputInputObject
      PaymentCreateManyWithoutCustomerInput: PaymentCreateManyWithoutCustomerInputInputObject
      PaymentCreateWithoutCustomerInput: PaymentCreateWithoutCustomerInputInputObject
      OrderCreateOneWithoutPaymentInput: OrderCreateOneWithoutPaymentInputInputObject
      OrderCreateWithoutPaymentInput: OrderCreateWithoutPaymentInputInputObject
      ShippingCreateOneWithoutOrderInput: ShippingCreateOneWithoutOrderInputInputObject
      ShippingCreateWithoutOrderInput: ShippingCreateWithoutOrderInputInputObject
      InvoiceCreateOneInput: InvoiceCreateOneInputInputObject
      InvoiceCreateInput: InvoiceCreateInputInputObject
      SalesmanCreateOneWithoutInvoicesInput: SalesmanCreateOneWithoutInvoicesInputInputObject
      SalesmanCreateWithoutInvoicesInput: SalesmanCreateWithoutInvoicesInputInputObject
      OrderCreateManyWithoutSalesmanInput: OrderCreateManyWithoutSalesmanInputInputObject
      OrderCreateWithoutSalesmanInput: OrderCreateWithoutSalesmanInputInputObject
      UserCreateOneWithoutOrdersInput: UserCreateOneWithoutOrdersInputInputObject
      UserCreateWithoutOrdersInput: UserCreateWithoutOrdersInputInputObject
      QuotationCreateOneInput: QuotationCreateOneInputInputObject
      QuotationCreateInput: QuotationCreateInputInputObject
      UserCreateOneWithoutQuotationsInput: UserCreateOneWithoutQuotationsInputInputObject
      UserCreateWithoutQuotationsInput: UserCreateWithoutQuotationsInputInputObject
      PaymentCreateOneWithoutInvoiceInput: PaymentCreateOneWithoutInvoiceInputInputObject
      PaymentCreateWithoutInvoiceInput: PaymentCreateWithoutInvoiceInputInputObject
      AddressCreateOneWithoutShippingInput: AddressCreateOneWithoutShippingInputInputObject
      AddressCreateWithoutShippingInput: AddressCreateWithoutShippingInputInputObject
      InvoiceCreateOneWithoutPaymentInput: InvoiceCreateOneWithoutPaymentInputInputObject
      InvoiceCreateWithoutPaymentInput: InvoiceCreateWithoutPaymentInputInputObject
      ShippingCreateManyWithoutAddressInput: ShippingCreateManyWithoutAddressInputInputObject
      ShippingCreateWithoutAddressInput: ShippingCreateWithoutAddressInputInputObject
      OrderCreateOneWithoutShippingInput: OrderCreateOneWithoutShippingInputInputObject
      OrderCreateWithoutShippingInput: OrderCreateWithoutShippingInputInputObject
      ProductItemCreateManyInput: ProductItemCreateManyInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      ShoppingCartUpdateOneRequiredWithoutCustomerInput: ShoppingCartUpdateOneRequiredWithoutCustomerInputInputObject
      ShoppingCartUpdateWithoutCustomerDataInput: ShoppingCartUpdateWithoutCustomerDataInputInputObject
      ShoppingCartItemUpdateManyWithoutShoppingCartInput: ShoppingCartItemUpdateManyWithoutShoppingCartInputInputObject
      ShoppingCartItemUpdateWithWhereUniqueWithoutShoppingCartInput: ShoppingCartItemUpdateWithWhereUniqueWithoutShoppingCartInputInputObject
      ShoppingCartItemUpdateWithoutShoppingCartDataInput: ShoppingCartItemUpdateWithoutShoppingCartDataInputInputObject
      ProductItemUpdateOneRequiredInput: ProductItemUpdateOneRequiredInputInputObject
      ProductItemUpdateDataInput: ProductItemUpdateDataInputInputObject
      CategoryUpdateOneRequiredWithoutProductItemInput: CategoryUpdateOneRequiredWithoutProductItemInputInputObject
      CategoryUpdateWithoutProductItemDataInput: CategoryUpdateWithoutProductItemDataInputInputObject
      CategoryUpdateOneInput: CategoryUpdateOneInputInputObject
      CategoryUpdateDataInput: CategoryUpdateDataInputInputObject
      ProductItemUpdateManyWithoutCategoryInput: ProductItemUpdateManyWithoutCategoryInputInputObject
      ProductItemUpdateWithWhereUniqueWithoutCategoryInput: ProductItemUpdateWithWhereUniqueWithoutCategoryInputInputObject
      ProductItemUpdateWithoutCategoryDataInput: ProductItemUpdateWithoutCategoryDataInputInputObject
      ShoppingCartUpdateOneInput: ShoppingCartUpdateOneInputInputObject
      ShoppingCartUpdateDataInput: ShoppingCartUpdateDataInputInputObject
      UserUpdateOneRequiredWithoutShoppingCartInput: UserUpdateOneRequiredWithoutShoppingCartInputInputObject
      UserUpdateWithoutShoppingCartDataInput: UserUpdateWithoutShoppingCartDataInputInputObject
      OrderUpdateManyWithoutCustomerInput: OrderUpdateManyWithoutCustomerInputInputObject
      OrderUpdateWithWhereUniqueWithoutCustomerInput: OrderUpdateWithWhereUniqueWithoutCustomerInputInputObject
      OrderUpdateWithoutCustomerDataInput: OrderUpdateWithoutCustomerDataInputInputObject
      OrderItemUpdateManyWithoutOrderInput: OrderItemUpdateManyWithoutOrderInputInputObject
      OrderItemUpdateWithWhereUniqueWithoutOrderInput: OrderItemUpdateWithWhereUniqueWithoutOrderInputInputObject
      OrderItemUpdateWithoutOrderDataInput: OrderItemUpdateWithoutOrderDataInputInputObject
      OrderItemUpsertWithWhereUniqueWithoutOrderInput: OrderItemUpsertWithWhereUniqueWithoutOrderInputInputObject
      OrderItemScalarWhereInput: OrderItemScalarWhereInputInputObject
      OrderItemUpdateManyWithWhereNestedInput: OrderItemUpdateManyWithWhereNestedInputInputObject
      OrderItemUpdateManyDataInput: OrderItemUpdateManyDataInputInputObject
      SalesmanUpdateOneWithoutOrdersInput: SalesmanUpdateOneWithoutOrdersInputInputObject
      SalesmanUpdateWithoutOrdersDataInput: SalesmanUpdateWithoutOrdersDataInputInputObject
      PaymentUpdateManyWithoutSalesmanInput: PaymentUpdateManyWithoutSalesmanInputInputObject
      PaymentUpdateWithWhereUniqueWithoutSalesmanInput: PaymentUpdateWithWhereUniqueWithoutSalesmanInputInputObject
      PaymentUpdateWithoutSalesmanDataInput: PaymentUpdateWithoutSalesmanDataInputInputObject
      UserUpdateOneRequiredWithoutPaymentsInput: UserUpdateOneRequiredWithoutPaymentsInputInputObject
      UserUpdateWithoutPaymentsDataInput: UserUpdateWithoutPaymentsDataInputInputObject
      QuotationUpdateManyWithoutCustomerInput: QuotationUpdateManyWithoutCustomerInputInputObject
      QuotationUpdateWithWhereUniqueWithoutCustomerInput: QuotationUpdateWithWhereUniqueWithoutCustomerInputInputObject
      QuotationUpdateWithoutCustomerDataInput: QuotationUpdateWithoutCustomerDataInputInputObject
      QuotationItemUpdateManyWithoutQuotationInput: QuotationItemUpdateManyWithoutQuotationInputInputObject
      QuotationItemUpdateWithWhereUniqueWithoutQuotationInput: QuotationItemUpdateWithWhereUniqueWithoutQuotationInputInputObject
      QuotationItemUpdateWithoutQuotationDataInput: QuotationItemUpdateWithoutQuotationDataInputInputObject
      QuotationItemUpsertWithWhereUniqueWithoutQuotationInput: QuotationItemUpsertWithWhereUniqueWithoutQuotationInputInputObject
      QuotationItemScalarWhereInput: QuotationItemScalarWhereInputInputObject
      QuotationItemUpdateManyWithWhereNestedInput: QuotationItemUpdateManyWithWhereNestedInputInputObject
      QuotationItemUpdateManyDataInput: QuotationItemUpdateManyDataInputInputObject
      QuotationUpsertWithWhereUniqueWithoutCustomerInput: QuotationUpsertWithWhereUniqueWithoutCustomerInputInputObject
      QuotationScalarWhereInput: QuotationScalarWhereInputInputObject
      QuotationUpdateManyWithWhereNestedInput: QuotationUpdateManyWithWhereNestedInputInputObject
      QuotationUpdateManyDataInput: QuotationUpdateManyDataInputInputObject
      AddressUpdateManyWithoutCustomerInput: AddressUpdateManyWithoutCustomerInputInputObject
      AddressUpdateWithWhereUniqueWithoutCustomerInput: AddressUpdateWithWhereUniqueWithoutCustomerInputInputObject
      AddressUpdateWithoutCustomerDataInput: AddressUpdateWithoutCustomerDataInputInputObject
      InvoiceUpdateManyWithoutAddressInput: InvoiceUpdateManyWithoutAddressInputInputObject
      InvoiceUpdateWithWhereUniqueWithoutAddressInput: InvoiceUpdateWithWhereUniqueWithoutAddressInputInputObject
      InvoiceUpdateWithoutAddressDataInput: InvoiceUpdateWithoutAddressDataInputInputObject
      UserUpdateOneRequiredInput: UserUpdateOneRequiredInputInputObject
      UserUpdateDataInput: UserUpdateDataInputInputObject
      PaymentUpdateManyWithoutCustomerInput: PaymentUpdateManyWithoutCustomerInputInputObject
      PaymentUpdateWithWhereUniqueWithoutCustomerInput: PaymentUpdateWithWhereUniqueWithoutCustomerInputInputObject
      PaymentUpdateWithoutCustomerDataInput: PaymentUpdateWithoutCustomerDataInputInputObject
      SalesmanUpdateOneWithoutPaymentsInput: SalesmanUpdateOneWithoutPaymentsInputInputObject
      SalesmanUpdateWithoutPaymentsDataInput: SalesmanUpdateWithoutPaymentsDataInputInputObject
      InvoiceUpdateManyWithoutSalesmanInput: InvoiceUpdateManyWithoutSalesmanInputInputObject
      InvoiceUpdateWithWhereUniqueWithoutSalesmanInput: InvoiceUpdateWithWhereUniqueWithoutSalesmanInputInputObject
      InvoiceUpdateWithoutSalesmanDataInput: InvoiceUpdateWithoutSalesmanDataInputInputObject
      OrderUpdateOneRequiredInput: OrderUpdateOneRequiredInputInputObject
      OrderUpdateDataInput: OrderUpdateDataInputInputObject
      PaymentUpdateOneWithoutOrderInput: PaymentUpdateOneWithoutOrderInputInputObject
      PaymentUpdateWithoutOrderDataInput: PaymentUpdateWithoutOrderDataInputInputObject
      InvoiceUpdateOneWithoutPaymentInput: InvoiceUpdateOneWithoutPaymentInputInputObject
      InvoiceUpdateWithoutPaymentDataInput: InvoiceUpdateWithoutPaymentDataInputInputObject
      SalesmanUpdateOneRequiredWithoutInvoicesInput: SalesmanUpdateOneRequiredWithoutInvoicesInputInputObject
      SalesmanUpdateWithoutInvoicesDataInput: SalesmanUpdateWithoutInvoicesDataInputInputObject
      OrderUpdateManyWithoutSalesmanInput: OrderUpdateManyWithoutSalesmanInputInputObject
      OrderUpdateWithWhereUniqueWithoutSalesmanInput: OrderUpdateWithWhereUniqueWithoutSalesmanInputInputObject
      OrderUpdateWithoutSalesmanDataInput: OrderUpdateWithoutSalesmanDataInputInputObject
      ShippingUpdateOneWithoutOrderInput: ShippingUpdateOneWithoutOrderInputInputObject
      ShippingUpdateWithoutOrderDataInput: ShippingUpdateWithoutOrderDataInputInputObject
      InvoiceUpdateOneRequiredInput: InvoiceUpdateOneRequiredInputInputObject
      InvoiceUpdateDataInput: InvoiceUpdateDataInputInputObject
      AddressUpdateOneWithoutInvoicesInput: AddressUpdateOneWithoutInvoicesInputInputObject
      AddressUpdateWithoutInvoicesDataInput: AddressUpdateWithoutInvoicesDataInputInputObject
      UserUpdateOneRequiredWithoutAddressesInput: UserUpdateOneRequiredWithoutAddressesInputInputObject
      UserUpdateWithoutAddressesDataInput: UserUpdateWithoutAddressesDataInputInputObject
      UserUpsertWithoutAddressesInput: UserUpsertWithoutAddressesInputInputObject
      ShippingUpdateManyWithoutAddressInput: ShippingUpdateManyWithoutAddressInputInputObject
      ShippingUpdateWithWhereUniqueWithoutAddressInput: ShippingUpdateWithWhereUniqueWithoutAddressInputInputObject
      ShippingUpdateWithoutAddressDataInput: ShippingUpdateWithoutAddressDataInputInputObject
      OrderUpdateOneRequiredWithoutShippingInput: OrderUpdateOneRequiredWithoutShippingInputInputObject
      OrderUpdateWithoutShippingDataInput: OrderUpdateWithoutShippingDataInputInputObject
      UserUpdateOneRequiredWithoutOrdersInput: UserUpdateOneRequiredWithoutOrdersInputInputObject
      UserUpdateWithoutOrdersDataInput: UserUpdateWithoutOrdersDataInputInputObject
      UserUpsertWithoutOrdersInput: UserUpsertWithoutOrdersInputInputObject
      QuotationUpdateOneInput: QuotationUpdateOneInputInputObject
      QuotationUpdateDataInput: QuotationUpdateDataInputInputObject
      UserUpdateOneRequiredWithoutQuotationsInput: UserUpdateOneRequiredWithoutQuotationsInputInputObject
      UserUpdateWithoutQuotationsDataInput: UserUpdateWithoutQuotationsDataInputInputObject
      UserUpsertWithoutQuotationsInput: UserUpsertWithoutQuotationsInputInputObject
      QuotationUpsertNestedInput: QuotationUpsertNestedInputInputObject
      OrderUpsertWithoutShippingInput: OrderUpsertWithoutShippingInputInputObject
      ShippingUpsertWithWhereUniqueWithoutAddressInput: ShippingUpsertWithWhereUniqueWithoutAddressInputInputObject
      ShippingScalarWhereInput: ShippingScalarWhereInputInputObject
      ShippingUpdateManyWithWhereNestedInput: ShippingUpdateManyWithWhereNestedInputInputObject
      ShippingUpdateManyDataInput: ShippingUpdateManyDataInputInputObject
      AddressUpsertWithoutInvoicesInput: AddressUpsertWithoutInvoicesInputInputObject
      PaymentUpdateOneWithoutInvoiceInput: PaymentUpdateOneWithoutInvoiceInputInputObject
      PaymentUpdateWithoutInvoiceDataInput: PaymentUpdateWithoutInvoiceDataInputInputObject
      OrderUpdateOneRequiredWithoutPaymentInput: OrderUpdateOneRequiredWithoutPaymentInputInputObject
      OrderUpdateWithoutPaymentDataInput: OrderUpdateWithoutPaymentDataInputInputObject
      OrderUpsertWithoutPaymentInput: OrderUpsertWithoutPaymentInputInputObject
      PaymentUpsertWithoutInvoiceInput: PaymentUpsertWithoutInvoiceInputInputObject
      InvoiceUpsertNestedInput: InvoiceUpsertNestedInputInputObject
      AddressUpdateOneRequiredWithoutShippingInput: AddressUpdateOneRequiredWithoutShippingInputInputObject
      AddressUpdateWithoutShippingDataInput: AddressUpdateWithoutShippingDataInputInputObject
      AddressUpsertWithoutShippingInput: AddressUpsertWithoutShippingInputInputObject
      ShippingUpsertWithoutOrderInput: ShippingUpsertWithoutOrderInputInputObject
      OrderUpsertWithWhereUniqueWithoutSalesmanInput: OrderUpsertWithWhereUniqueWithoutSalesmanInputInputObject
      OrderScalarWhereInput: OrderScalarWhereInputInputObject
      OrderUpdateManyWithWhereNestedInput: OrderUpdateManyWithWhereNestedInputInputObject
      OrderUpdateManyDataInput: OrderUpdateManyDataInputInputObject
      SalesmanUpsertWithoutInvoicesInput: SalesmanUpsertWithoutInvoicesInputInputObject
      InvoiceUpsertWithoutPaymentInput: InvoiceUpsertWithoutPaymentInputInputObject
      PaymentUpsertWithoutOrderInput: PaymentUpsertWithoutOrderInputInputObject
      OrderUpsertNestedInput: OrderUpsertNestedInputInputObject
      InvoiceUpsertWithWhereUniqueWithoutSalesmanInput: InvoiceUpsertWithWhereUniqueWithoutSalesmanInputInputObject
      InvoiceScalarWhereInput: InvoiceScalarWhereInputInputObject
      InvoiceUpdateManyWithWhereNestedInput: InvoiceUpdateManyWithWhereNestedInputInputObject
      InvoiceUpdateManyDataInput: InvoiceUpdateManyDataInputInputObject
      SalesmanUpsertWithoutPaymentsInput: SalesmanUpsertWithoutPaymentsInputInputObject
      PaymentUpsertWithWhereUniqueWithoutCustomerInput: PaymentUpsertWithWhereUniqueWithoutCustomerInputInputObject
      PaymentScalarWhereInput: PaymentScalarWhereInputInputObject
      PaymentUpdateManyWithWhereNestedInput: PaymentUpdateManyWithWhereNestedInputInputObject
      PaymentUpdateManyDataInput: PaymentUpdateManyDataInputInputObject
      UserUpsertNestedInput: UserUpsertNestedInputInputObject
      InvoiceUpsertWithWhereUniqueWithoutAddressInput: InvoiceUpsertWithWhereUniqueWithoutAddressInputInputObject
      AddressUpsertWithWhereUniqueWithoutCustomerInput: AddressUpsertWithWhereUniqueWithoutCustomerInputInputObject
      AddressScalarWhereInput: AddressScalarWhereInputInputObject
      AddressUpdateManyWithWhereNestedInput: AddressUpdateManyWithWhereNestedInputInputObject
      AddressUpdateManyDataInput: AddressUpdateManyDataInputInputObject
      UserUpsertWithoutPaymentsInput: UserUpsertWithoutPaymentsInputInputObject
      PaymentUpsertWithWhereUniqueWithoutSalesmanInput: PaymentUpsertWithWhereUniqueWithoutSalesmanInputInputObject
      SalesmanUpsertWithoutOrdersInput: SalesmanUpsertWithoutOrdersInputInputObject
      OrderUpsertWithWhereUniqueWithoutCustomerInput: OrderUpsertWithWhereUniqueWithoutCustomerInputInputObject
      UserUpsertWithoutShoppingCartInput: UserUpsertWithoutShoppingCartInputInputObject
      ShoppingCartUpsertNestedInput: ShoppingCartUpsertNestedInputInputObject
      OrderUpdateOneInput: OrderUpdateOneInputInputObject
      ProductItemUpdateManyInput: ProductItemUpdateManyInputInputObject
      ProductItemUpdateWithWhereUniqueNestedInput: ProductItemUpdateWithWhereUniqueNestedInputInputObject
      ProductItemUpsertWithWhereUniqueNestedInput: ProductItemUpsertWithWhereUniqueNestedInputInputObject
      ProductItemScalarWhereInput: ProductItemScalarWhereInputInputObject
      ProductItemUpdateManyWithWhereNestedInput: ProductItemUpdateManyWithWhereNestedInputInputObject
      ProductItemUpdateManyDataInput: ProductItemUpdateManyDataInputInputObject
      ProductItemUpsertWithWhereUniqueWithoutCategoryInput: ProductItemUpsertWithWhereUniqueWithoutCategoryInputInputObject
      CategoryUpsertNestedInput: CategoryUpsertNestedInputInputObject
      CategoryUpsertWithoutProductItemInput: CategoryUpsertWithoutProductItemInputInputObject
      ProductItemUpsertNestedInput: ProductItemUpsertNestedInputInputObject
      ShoppingCartItemUpsertWithWhereUniqueWithoutShoppingCartInput: ShoppingCartItemUpsertWithWhereUniqueWithoutShoppingCartInputInputObject
      ShoppingCartItemScalarWhereInput: ShoppingCartItemScalarWhereInputInputObject
      ShoppingCartItemUpdateManyWithWhereNestedInput: ShoppingCartItemUpdateManyWithWhereNestedInputInputObject
      ShoppingCartItemUpdateManyDataInput: ShoppingCartItemUpdateManyDataInputInputObject
      ShoppingCartUpsertWithoutCustomerInput: ShoppingCartUpsertWithoutCustomerInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      QuotationUpdateInput: QuotationUpdateInputInputObject
      QuotationUpdateManyMutationInput: QuotationUpdateManyMutationInputInputObject
      QuotationItemCreateInput: QuotationItemCreateInputInputObject
      QuotationCreateOneWithoutQuotationItemsInput: QuotationCreateOneWithoutQuotationItemsInputInputObject
      QuotationCreateWithoutQuotationItemsInput: QuotationCreateWithoutQuotationItemsInputInputObject
      QuotationItemUpdateInput: QuotationItemUpdateInputInputObject
      QuotationUpdateOneRequiredWithoutQuotationItemsInput: QuotationUpdateOneRequiredWithoutQuotationItemsInputInputObject
      QuotationUpdateWithoutQuotationItemsDataInput: QuotationUpdateWithoutQuotationItemsDataInputInputObject
      QuotationUpsertWithoutQuotationItemsInput: QuotationUpsertWithoutQuotationItemsInputInputObject
      QuotationItemUpdateManyMutationInput: QuotationItemUpdateManyMutationInputInputObject
      AddressCreateInput: AddressCreateInputInputObject
      AddressUpdateInput: AddressUpdateInputInputObject
      AddressUpdateManyMutationInput: AddressUpdateManyMutationInputInputObject
      PaymentCreateInput: PaymentCreateInputInputObject
      PaymentUpdateInput: PaymentUpdateInputInputObject
      PaymentUpdateManyMutationInput: PaymentUpdateManyMutationInputInputObject
      SalesmanCreateInput: SalesmanCreateInputInputObject
      SalesmanUpdateInput: SalesmanUpdateInputInputObject
      SalesmanUpdateManyMutationInput: SalesmanUpdateManyMutationInputInputObject
      InvoiceUpdateInput: InvoiceUpdateInputInputObject
      InvoiceUpdateManyMutationInput: InvoiceUpdateManyMutationInputInputObject
      ShippingCreateInput: ShippingCreateInputInputObject
      ShippingUpdateInput: ShippingUpdateInputInputObject
      ShippingUpdateManyMutationInput: ShippingUpdateManyMutationInputInputObject
      CategoryUpdateInput: CategoryUpdateInputInputObject
      CategoryUpdateManyMutationInput: CategoryUpdateManyMutationInputInputObject
      ProductItemUpdateInput: ProductItemUpdateInputInputObject
      ProductItemUpdateManyMutationInput: ProductItemUpdateManyMutationInputInputObject
      ShoppingCartItemCreateInput: ShoppingCartItemCreateInputInputObject
      ShoppingCartCreateOneWithoutProductItemsInput: ShoppingCartCreateOneWithoutProductItemsInputInputObject
      ShoppingCartCreateWithoutProductItemsInput: ShoppingCartCreateWithoutProductItemsInputInputObject
      ShoppingCartItemUpdateInput: ShoppingCartItemUpdateInputInputObject
      ShoppingCartUpdateOneWithoutProductItemsInput: ShoppingCartUpdateOneWithoutProductItemsInputInputObject
      ShoppingCartUpdateWithoutProductItemsDataInput: ShoppingCartUpdateWithoutProductItemsDataInputInputObject
      ShoppingCartUpsertWithoutProductItemsInput: ShoppingCartUpsertWithoutProductItemsInputInputObject
      ShoppingCartItemUpdateManyMutationInput: ShoppingCartItemUpdateManyMutationInputInputObject
      ShoppingCartUpdateInput: ShoppingCartUpdateInputInputObject
      ShoppingCartUpdateManyMutationInput: ShoppingCartUpdateManyMutationInputInputObject
      OrderItemCreateInput: OrderItemCreateInputInputObject
      OrderCreateOneWithoutOrderItemInput: OrderCreateOneWithoutOrderItemInputInputObject
      OrderCreateWithoutOrderItemInput: OrderCreateWithoutOrderItemInputInputObject
      OrderItemUpdateInput: OrderItemUpdateInputInputObject
      OrderUpdateOneRequiredWithoutOrderItemInput: OrderUpdateOneRequiredWithoutOrderItemInputInputObject
      OrderUpdateWithoutOrderItemDataInput: OrderUpdateWithoutOrderItemDataInputInputObject
      OrderUpsertWithoutOrderItemInput: OrderUpsertWithoutOrderItemInputInputObject
      OrderItemUpdateManyMutationInput: OrderItemUpdateManyMutationInputInputObject
      OrderUpdateInput: OrderUpdateInputInputObject
      OrderUpdateManyMutationInput: OrderUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      QuotationSubscriptionWhereInput: QuotationSubscriptionWhereInputInputObject
      QuotationItemSubscriptionWhereInput: QuotationItemSubscriptionWhereInputInputObject
      AddressSubscriptionWhereInput: AddressSubscriptionWhereInputInputObject
      PaymentSubscriptionWhereInput: PaymentSubscriptionWhereInputInputObject
      SalesmanSubscriptionWhereInput: SalesmanSubscriptionWhereInputInputObject
      InvoiceSubscriptionWhereInput: InvoiceSubscriptionWhereInputInputObject
      ShippingSubscriptionWhereInput: ShippingSubscriptionWhereInputInputObject
      CategorySubscriptionWhereInput: CategorySubscriptionWhereInputInputObject
      ProductItemSubscriptionWhereInput: ProductItemSubscriptionWhereInputInputObject
      ShoppingCartItemSubscriptionWhereInput: ShoppingCartItemSubscriptionWhereInputInputObject
      ShoppingCartSubscriptionWhereInput: ShoppingCartSubscriptionWhereInputInputObject
      OrderItemSubscriptionWhereInput: OrderItemSubscriptionWhereInputInputObject
      OrderSubscriptionWhereInput: OrderSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    ShoppingCartItemOrderByInput: ShoppingCartItemOrderByInputValues,
    ProductItemOrderByInput: ProductItemOrderByInputValues,
    OrderItemOrderByInput: OrderItemOrderByInputValues,
    PaymentOrderByInput: PaymentOrderByInputValues,
    InvoiceOrderByInput: InvoiceOrderByInputValues,
    ShippingOrderByInput: ShippingOrderByInputValues,
    OrderOrderByInput: OrderOrderByInputValues,
    QuotationItemOrderByInput: QuotationItemOrderByInputValues,
    QuotationOrderByInput: QuotationOrderByInputValues,
    AddressOrderByInput: AddressOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    SalesmanOrderByInput: SalesmanOrderByInputValues,
    CategoryOrderByInput: CategoryOrderByInputValues,
    ShoppingCartOrderByInput: ShoppingCartOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'quotation', args?: QueryQuotationArgs[] | false, alias?: string  } 
  | { name: 'quotations', args?: QueryQuotationsArgs[] | false, alias?: string  } 
  | { name: 'quotationsConnection', args?: QueryQuotationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'quotationItem', args?: QueryQuotationItemArgs[] | false, alias?: string  } 
  | { name: 'quotationItems', args?: QueryQuotationItemsArgs[] | false, alias?: string  } 
  | { name: 'quotationItemsConnection', args?: QueryQuotationItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'address', args?: QueryAddressArgs[] | false, alias?: string  } 
  | { name: 'addresses', args?: QueryAddressesArgs[] | false, alias?: string  } 
  | { name: 'addressesConnection', args?: QueryAddressesConnectionArgs[] | false, alias?: string  } 
  | { name: 'payment', args?: QueryPaymentArgs[] | false, alias?: string  } 
  | { name: 'payments', args?: QueryPaymentsArgs[] | false, alias?: string  } 
  | { name: 'paymentsConnection', args?: QueryPaymentsConnectionArgs[] | false, alias?: string  } 
  | { name: 'salesman', args?: QuerySalesmanArgs[] | false, alias?: string  } 
  | { name: 'salesmen', args?: QuerySalesmenArgs[] | false, alias?: string  } 
  | { name: 'salesmenConnection', args?: QuerySalesmenConnectionArgs[] | false, alias?: string  } 
  | { name: 'invoice', args?: QueryInvoiceArgs[] | false, alias?: string  } 
  | { name: 'invoices', args?: QueryInvoicesArgs[] | false, alias?: string  } 
  | { name: 'invoicesConnection', args?: QueryInvoicesConnectionArgs[] | false, alias?: string  } 
  | { name: 'shipping', args?: QueryShippingArgs[] | false, alias?: string  } 
  | { name: 'shippings', args?: QueryShippingsArgs[] | false, alias?: string  } 
  | { name: 'shippingsConnection', args?: QueryShippingsConnectionArgs[] | false, alias?: string  } 
  | { name: 'category', args?: QueryCategoryArgs[] | false, alias?: string  } 
  | { name: 'categories', args?: QueryCategoriesArgs[] | false, alias?: string  } 
  | { name: 'categoriesConnection', args?: QueryCategoriesConnectionArgs[] | false, alias?: string  } 
  | { name: 'productItem', args?: QueryProductItemArgs[] | false, alias?: string  } 
  | { name: 'productItems', args?: QueryProductItemsArgs[] | false, alias?: string  } 
  | { name: 'productItemsConnection', args?: QueryProductItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'shoppingCartItem', args?: QueryShoppingCartItemArgs[] | false, alias?: string  } 
  | { name: 'shoppingCartItems', args?: QueryShoppingCartItemsArgs[] | false, alias?: string  } 
  | { name: 'shoppingCartItemsConnection', args?: QueryShoppingCartItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'shoppingCart', args?: QueryShoppingCartArgs[] | false, alias?: string  } 
  | { name: 'shoppingCarts', args?: QueryShoppingCartsArgs[] | false, alias?: string  } 
  | { name: 'shoppingCartsConnection', args?: QueryShoppingCartsConnectionArgs[] | false, alias?: string  } 
  | { name: 'orderItem', args?: QueryOrderItemArgs[] | false, alias?: string  } 
  | { name: 'orderItems', args?: QueryOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'orderItemsConnection', args?: QueryOrderItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'order', args?: QueryOrderArgs[] | false, alias?: string  } 
  | { name: 'orders', args?: QueryOrdersArgs[] | false, alias?: string  } 
  | { name: 'ordersConnection', args?: QueryOrdersConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'quotation'
  | 'quotations'
  | 'quotationsConnection'
  | 'quotationItem'
  | 'quotationItems'
  | 'quotationItemsConnection'
  | 'address'
  | 'addresses'
  | 'addressesConnection'
  | 'payment'
  | 'payments'
  | 'paymentsConnection'
  | 'salesman'
  | 'salesmen'
  | 'salesmenConnection'
  | 'invoice'
  | 'invoices'
  | 'invoicesConnection'
  | 'shipping'
  | 'shippings'
  | 'shippingsConnection'
  | 'category'
  | 'categories'
  | 'categoriesConnection'
  | 'productItem'
  | 'productItems'
  | 'productItemsConnection'
  | 'shoppingCartItem'
  | 'shoppingCartItems'
  | 'shoppingCartItemsConnection'
  | 'shoppingCart'
  | 'shoppingCarts'
  | 'shoppingCartsConnection'
  | 'orderItem'
  | 'orderItems'
  | 'orderItemsConnection'
  | 'order'
  | 'orders'
  | 'ordersConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryQuotationArgs =
  | 'where'
type QueryQuotationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryQuotationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryQuotationItemArgs =
  | 'where'
type QueryQuotationItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryQuotationItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAddressArgs =
  | 'where'
type QueryAddressesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAddressesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentArgs =
  | 'where'
type QueryPaymentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySalesmanArgs =
  | 'where'
type QuerySalesmenArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySalesmenConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryInvoiceArgs =
  | 'where'
type QueryInvoicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryInvoicesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryShippingArgs =
  | 'where'
type QueryShippingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryShippingsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCategoryArgs =
  | 'where'
type QueryCategoriesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCategoriesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProductItemArgs =
  | 'where'
type QueryProductItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProductItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryShoppingCartItemArgs =
  | 'where'
type QueryShoppingCartItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryShoppingCartItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryShoppingCartArgs =
  | 'where'
type QueryShoppingCartsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryShoppingCartsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemArgs =
  | 'where'
type QueryOrderItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderArgs =
  | 'where'
type QueryOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrdersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  quotation: {
    type: 'Quotation'
    args: Record<QueryQuotationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: QuotationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation | null> | prisma.Quotation | null
  }
  quotations: {
    type: 'Quotation'
    args: Record<QueryQuotationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: QuotationWhereInput | null, orderBy?: prisma.QuotationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation[]> | prisma.Quotation[]
  }
  quotationsConnection: {
    type: 'QuotationConnection'
    args: Record<QueryQuotationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: QuotationWhereInput | null, orderBy?: prisma.QuotationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationConnection> | prisma.QuotationConnection
  }
  quotationItem: {
    type: 'QuotationItem'
    args: Record<QueryQuotationItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: QuotationItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem | null> | prisma.QuotationItem | null
  }
  quotationItems: {
    type: 'QuotationItem'
    args: Record<QueryQuotationItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: QuotationItemWhereInput | null, orderBy?: prisma.QuotationItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem[]> | prisma.QuotationItem[]
  }
  quotationItemsConnection: {
    type: 'QuotationItemConnection'
    args: Record<QueryQuotationItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: QuotationItemWhereInput | null, orderBy?: prisma.QuotationItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItemConnection> | prisma.QuotationItemConnection
  }
  address: {
    type: 'Address'
    args: Record<QueryAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AddressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  addresses: {
    type: 'Address'
    args: Record<QueryAddressesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AddressWhereInput | null, orderBy?: prisma.AddressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address[]> | prisma.Address[]
  }
  addressesConnection: {
    type: 'AddressConnection'
    args: Record<QueryAddressesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AddressWhereInput | null, orderBy?: prisma.AddressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressConnection> | prisma.AddressConnection
  }
  payment: {
    type: 'Payment'
    args: Record<QueryPaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PaymentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  payments: {
    type: 'Payment'
    args: Record<QueryPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentWhereInput | null, orderBy?: prisma.PaymentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment[]> | prisma.Payment[]
  }
  paymentsConnection: {
    type: 'PaymentConnection'
    args: Record<QueryPaymentsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentWhereInput | null, orderBy?: prisma.PaymentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentConnection> | prisma.PaymentConnection
  }
  salesman: {
    type: 'Salesman'
    args: Record<QuerySalesmanArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SalesmanWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman | null> | prisma.Salesman | null
  }
  salesmen: {
    type: 'Salesman'
    args: Record<QuerySalesmenArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SalesmanWhereInput | null, orderBy?: prisma.SalesmanOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman[]> | prisma.Salesman[]
  }
  salesmenConnection: {
    type: 'SalesmanConnection'
    args: Record<QuerySalesmenConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SalesmanWhereInput | null, orderBy?: prisma.SalesmanOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SalesmanConnection> | prisma.SalesmanConnection
  }
  invoice: {
    type: 'Invoice'
    args: Record<QueryInvoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: InvoiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice | null> | prisma.Invoice | null
  }
  invoices: {
    type: 'Invoice'
    args: Record<QueryInvoicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: InvoiceWhereInput | null, orderBy?: prisma.InvoiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice[]> | prisma.Invoice[]
  }
  invoicesConnection: {
    type: 'InvoiceConnection'
    args: Record<QueryInvoicesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: InvoiceWhereInput | null, orderBy?: prisma.InvoiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InvoiceConnection> | prisma.InvoiceConnection
  }
  shipping: {
    type: 'Shipping'
    args: Record<QueryShippingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ShippingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping | null> | prisma.Shipping | null
  }
  shippings: {
    type: 'Shipping'
    args: Record<QueryShippingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ShippingWhereInput | null, orderBy?: prisma.ShippingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping[]> | prisma.Shipping[]
  }
  shippingsConnection: {
    type: 'ShippingConnection'
    args: Record<QueryShippingsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ShippingWhereInput | null, orderBy?: prisma.ShippingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShippingConnection> | prisma.ShippingConnection
  }
  category: {
    type: 'Category'
    args: Record<QueryCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  categories: {
    type: 'Category'
    args: Record<QueryCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CategoryWhereInput | null, orderBy?: prisma.CategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category[]> | prisma.Category[]
  }
  categoriesConnection: {
    type: 'CategoryConnection'
    args: Record<QueryCategoriesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CategoryWhereInput | null, orderBy?: prisma.CategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CategoryConnection> | prisma.CategoryConnection
  }
  productItem: {
    type: 'ProductItem'
    args: Record<QueryProductItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProductItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem | null> | prisma.ProductItem | null
  }
  productItems: {
    type: 'ProductItem'
    args: Record<QueryProductItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductItemWhereInput | null, orderBy?: prisma.ProductItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem[]> | prisma.ProductItem[]
  }
  productItemsConnection: {
    type: 'ProductItemConnection'
    args: Record<QueryProductItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductItemWhereInput | null, orderBy?: prisma.ProductItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItemConnection> | prisma.ProductItemConnection
  }
  shoppingCartItem: {
    type: 'ShoppingCartItem'
    args: Record<QueryShoppingCartItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ShoppingCartItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem | null> | prisma.ShoppingCartItem | null
  }
  shoppingCartItems: {
    type: 'ShoppingCartItem'
    args: Record<QueryShoppingCartItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ShoppingCartItemWhereInput | null, orderBy?: prisma.ShoppingCartItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem[]> | prisma.ShoppingCartItem[]
  }
  shoppingCartItemsConnection: {
    type: 'ShoppingCartItemConnection'
    args: Record<QueryShoppingCartItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ShoppingCartItemWhereInput | null, orderBy?: prisma.ShoppingCartItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItemConnection> | prisma.ShoppingCartItemConnection
  }
  shoppingCart: {
    type: 'ShoppingCart'
    args: Record<QueryShoppingCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ShoppingCartWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart | null> | prisma.ShoppingCart | null
  }
  shoppingCarts: {
    type: 'ShoppingCart'
    args: Record<QueryShoppingCartsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ShoppingCartWhereInput | null, orderBy?: prisma.ShoppingCartOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart[]> | prisma.ShoppingCart[]
  }
  shoppingCartsConnection: {
    type: 'ShoppingCartConnection'
    args: Record<QueryShoppingCartsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ShoppingCartWhereInput | null, orderBy?: prisma.ShoppingCartOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartConnection> | prisma.ShoppingCartConnection
  }
  orderItem: {
    type: 'OrderItem'
    args: Record<QueryOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  orderItems: {
    type: 'OrderItem'
    args: Record<QueryOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem[]> | prisma.OrderItem[]
  }
  orderItemsConnection: {
    type: 'OrderItemConnection'
    args: Record<QueryOrderItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemConnection> | prisma.OrderItemConnection
  }
  order: {
    type: 'Order'
    args: Record<QueryOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  orders: {
    type: 'Order'
    args: Record<QueryOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
  ordersConnection: {
    type: 'OrderConnection'
    args: Record<QueryOrdersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderConnection> | prisma.OrderConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'runningId', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'avatar', args?: [] | false, alias?: string  } 
  | { name: 'activated', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'shoppingCart', args?: [] | false, alias?: string  } 
  | { name: 'orders', args?: UserOrdersArgs[] | false, alias?: string  } 
  | { name: 'quotations', args?: UserQuotationsArgs[] | false, alias?: string  } 
  | { name: 'payments', args?: UserPaymentsArgs[] | false, alias?: string  } 
  | { name: 'addresses', args?: UserAddressesArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'runningId'
  | 'type'
  | 'name'
  | 'email'
  | 'password'
  | 'phone'
  | 'avatar'
  | 'activated'
  | 'createdAt'
  | 'updatedAt'
  | 'shoppingCart'
  | 'orders'
  | 'quotations'
  | 'payments'
  | 'addresses'


type UserOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserQuotationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserPaymentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserAddressesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  runningId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  avatar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  activated: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  shoppingCart: {
    type: 'ShoppingCart'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart> | prisma.ShoppingCart
  }
  orders: {
    type: 'Order'
    args: Record<UserOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
  quotations: {
    type: 'Quotation'
    args: Record<UserQuotationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: QuotationWhereInput | null, orderBy?: prisma.QuotationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation[]> | prisma.Quotation[]
  }
  payments: {
    type: 'Payment'
    args: Record<UserPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: PaymentWhereInput | null, orderBy?: prisma.PaymentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment[]> | prisma.Payment[]
  }
  addresses: {
    type: 'Address'
    args: Record<UserAddressesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: AddressWhereInput | null, orderBy?: prisma.AddressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address[]> | prisma.Address[]
  }
}
  

// Types for ShoppingCart

type ShoppingCartObject =
  | ShoppingCartFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'total_cost', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'productItems', args?: ShoppingCartProductItemsArgs[] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 

type ShoppingCartFields =
  | 'id'
  | 'total_cost'
  | 'createdAt'
  | 'updatedAt'
  | 'productItems'
  | 'customer'


type ShoppingCartProductItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ShoppingCartFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  total_cost: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  productItems: {
    type: 'ShoppingCartItem'
    args: Record<ShoppingCartProductItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCart">,
      args: { where?: ShoppingCartItemWhereInput | null, orderBy?: prisma.ShoppingCartItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem[]> | prisma.ShoppingCartItem[]
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCart">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
}
  

// Types for ShoppingCartItem

type ShoppingCartItemObject =
  | ShoppingCartItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'product', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'ShoppingCart', args?: [] | false, alias?: string  } 

type ShoppingCartItemFields =
  | 'id'
  | 'key'
  | 'product'
  | 'amount'
  | 'ShoppingCart'



  

export interface ShoppingCartItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  product: {
    type: 'ProductItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem> | prisma.ProductItem
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  ShoppingCart: {
    type: 'ShoppingCart'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ShoppingCartItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart | null> | prisma.ShoppingCart | null
  }
}
  

// Types for ProductItem

type ProductItemObject =
  | ProductItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'salePrice', args?: [] | false, alias?: string  } 
  | { name: 'brand', args?: [] | false, alias?: string  } 
  | { name: 'unitType', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'MenuDetail', args?: [] | false, alias?: string  } 
  | { name: 'TermDetail', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'isPublished', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 
  | { name: 'shoppingCart', args?: [] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'relatedProduct', args?: ProductItemRelatedProductArgs[] | false, alias?: string  } 

type ProductItemFields =
  | 'id'
  | 'name'
  | 'price'
  | 'salePrice'
  | 'brand'
  | 'unitType'
  | 'description'
  | 'MenuDetail'
  | 'TermDetail'
  | 'amount'
  | 'isPublished'
  | 'createdAt'
  | 'updatedAt'
  | 'category'
  | 'shoppingCart'
  | 'order'
  | 'image'
  | 'relatedProduct'


type ProductItemRelatedProductArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ProductItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  salePrice: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  brand: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  unitType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  MenuDetail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  TermDetail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isPublished: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  category: {
    type: 'Category'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category> | prisma.Category
  }
  shoppingCart: {
    type: 'ShoppingCart'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart | null> | prisma.ShoppingCart | null
  }
  order: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  relatedProduct: {
    type: 'ProductItem'
    args: Record<ProductItemRelatedProductArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProductItem">,
      args: { where?: ProductItemWhereInput | null, orderBy?: prisma.ProductItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem[]> | prisma.ProductItem[]
  }
}
  

// Types for Category

type CategoryObject =
  | CategoryFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'productItem', args?: CategoryProductItemArgs[] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 

type CategoryFields =
  | 'id'
  | 'name'
  | 'createdAt'
  | 'updatedAt'
  | 'productItem'
  | 'category'


type CategoryProductItemArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface CategoryFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  productItem: {
    type: 'ProductItem'
    args: Record<CategoryProductItemArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Category">,
      args: { where?: ProductItemWhereInput | null, orderBy?: prisma.ProductItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem[]> | prisma.ProductItem[]
  }
  category: {
    type: 'Category'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Category">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
}
  

// Types for Order

type OrderObject =
  | OrderFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'orderItem', args?: OrderOrderItemArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'salesman', args?: [] | false, alias?: string  } 
  | { name: 'payment', args?: [] | false, alias?: string  } 
  | { name: 'shipping', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'quotation', args?: [] | false, alias?: string  } 

type OrderFields =
  | 'id'
  | 'docId'
  | 'orderItem'
  | 'createdAt'
  | 'updatedAt'
  | 'salesman'
  | 'payment'
  | 'shipping'
  | 'customer'
  | 'status'
  | 'quotation'


type OrderOrderItemArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrderFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  orderItem: {
    type: 'OrderItem'
    args: Record<OrderOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Order">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem[]> | prisma.OrderItem[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  salesman: {
    type: 'Salesman'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman | null> | prisma.Salesman | null
  }
  payment: {
    type: 'Payment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  shipping: {
    type: 'Shipping'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping | null> | prisma.Shipping | null
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  quotation: {
    type: 'Quotation'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation | null> | prisma.Quotation | null
  }
}
  

// Types for OrderItem

type OrderItemObject =
  | OrderItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'product', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'realPrice', args?: [] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 

type OrderItemFields =
  | 'id'
  | 'key'
  | 'product'
  | 'amount'
  | 'realPrice'
  | 'order'



  

export interface OrderItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  product: {
    type: 'ProductItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem> | prisma.ProductItem
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  realPrice: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  order: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
}
  

// Types for Salesman

type SalesmanObject =
  | SalesmanFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'payments', args?: SalesmanPaymentsArgs[] | false, alias?: string  } 
  | { name: 'invoices', args?: SalesmanInvoicesArgs[] | false, alias?: string  } 
  | { name: 'orders', args?: SalesmanOrdersArgs[] | false, alias?: string  } 

type SalesmanFields =
  | 'id'
  | 'name'
  | 'email'
  | 'phone'
  | 'createdAt'
  | 'updatedAt'
  | 'payments'
  | 'invoices'
  | 'orders'


type SalesmanPaymentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type SalesmanInvoicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type SalesmanOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface SalesmanFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  payments: {
    type: 'Payment'
    args: Record<SalesmanPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Salesman">,
      args: { where?: PaymentWhereInput | null, orderBy?: prisma.PaymentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment[]> | prisma.Payment[]
  }
  invoices: {
    type: 'Invoice'
    args: Record<SalesmanInvoicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Salesman">,
      args: { where?: InvoiceWhereInput | null, orderBy?: prisma.InvoiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice[]> | prisma.Invoice[]
  }
  orders: {
    type: 'Order'
    args: Record<SalesmanOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Salesman">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
}
  

// Types for Payment

type PaymentObject =
  | PaymentFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 
  | { name: 'salesman', args?: [] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 
  | { name: 'Invoice', args?: [] | false, alias?: string  } 
  | { name: 'rawEvent', args?: [] | false, alias?: string  } 

type PaymentFields =
  | 'id'
  | 'docId'
  | 'amount'
  | 'createdAt'
  | 'updatedAt'
  | 'customer'
  | 'salesman'
  | 'order'
  | 'Invoice'
  | 'rawEvent'



  

export interface PaymentFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Payment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  salesman: {
    type: 'Salesman'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Payment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman | null> | prisma.Salesman | null
  }
  order: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Payment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  Invoice: {
    type: 'Invoice'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Payment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice | null> | prisma.Invoice | null
  }
  rawEvent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Invoice

type InvoiceObject =
  | InvoiceFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'creditTerm', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 
  | { name: 'salesman', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'payment', args?: [] | false, alias?: string  } 

type InvoiceFields =
  | 'id'
  | 'docId'
  | 'creditTerm'
  | 'createdAt'
  | 'updatedAt'
  | 'user'
  | 'order'
  | 'salesman'
  | 'address'
  | 'payment'



  

export interface InvoiceFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  creditTerm: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Invoice">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  order: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Invoice">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  salesman: {
    type: 'Salesman'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Invoice">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman> | prisma.Salesman
  }
  address: {
    type: 'Address'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Invoice">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  payment: {
    type: 'Payment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Invoice">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
}
  

// Types for Address

type AddressObject =
  | AddressFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'Address', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 
  | { name: 'invoices', args?: AddressInvoicesArgs[] | false, alias?: string  } 
  | { name: 'shipping', args?: AddressShippingArgs[] | false, alias?: string  } 

type AddressFields =
  | 'id'
  | 'name'
  | 'Address'
  | 'createdAt'
  | 'updatedAt'
  | 'customer'
  | 'invoices'
  | 'shipping'


type AddressInvoicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type AddressShippingArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface AddressFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  Address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Address">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  invoices: {
    type: 'Invoice'
    args: Record<AddressInvoicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Address">,
      args: { where?: InvoiceWhereInput | null, orderBy?: prisma.InvoiceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice[]> | prisma.Invoice[]
  }
  shipping: {
    type: 'Shipping'
    args: Record<AddressShippingArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Address">,
      args: { where?: ShippingWhereInput | null, orderBy?: prisma.ShippingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping[]> | prisma.Shipping[]
  }
}
  

// Types for Shipping

type ShippingObject =
  | ShippingFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'dueDate', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'invoce', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 

type ShippingFields =
  | 'id'
  | 'docId'
  | 'dueDate'
  | 'status'
  | 'createdAt'
  | 'updatedAt'
  | 'invoce'
  | 'address'
  | 'order'



  

export interface ShippingFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dueDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  invoce: {
    type: 'Invoice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Shipping">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice> | prisma.Invoice
  }
  address: {
    type: 'Address'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Shipping">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  order: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Shipping">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
}
  

// Types for Quotation

type QuotationObject =
  | QuotationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'quotationItems', args?: QuotationQuotationItemsArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 
  | { name: 'fileUrl', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type QuotationFields =
  | 'id'
  | 'docId'
  | 'quotationItems'
  | 'createdAt'
  | 'updatedAt'
  | 'customer'
  | 'fileUrl'
  | 'status'


type QuotationQuotationItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QuotationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  quotationItems: {
    type: 'QuotationItem'
    args: Record<QuotationQuotationItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Quotation">,
      args: { where?: QuotationItemWhereInput | null, orderBy?: prisma.QuotationItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem[]> | prisma.QuotationItem[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customer: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Quotation">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  fileUrl: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for QuotationItem

type QuotationItemObject =
  | QuotationItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'product', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'realPrice', args?: [] | false, alias?: string  } 
  | { name: 'quotation', args?: [] | false, alias?: string  } 

type QuotationItemFields =
  | 'id'
  | 'key'
  | 'product'
  | 'amount'
  | 'realPrice'
  | 'quotation'



  

export interface QuotationItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  product: {
    type: 'ProductItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem> | prisma.ProductItem
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  realPrice: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  quotation: {
    type: 'Quotation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation> | prisma.Quotation
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for QuotationConnection

type QuotationConnectionObject =
  | QuotationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type QuotationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface QuotationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'QuotationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationEdge[]> | prisma.QuotationEdge[]
  }
  aggregate: {
    type: 'AggregateQuotation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateQuotation> | prisma.AggregateQuotation
  }
}
  

// Types for QuotationEdge

type QuotationEdgeObject =
  | QuotationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type QuotationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface QuotationEdgeFieldDetails {
  node: {
    type: 'Quotation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation> | prisma.Quotation
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateQuotation

type AggregateQuotationObject =
  | AggregateQuotationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateQuotationFields =
  | 'count'



  

export interface AggregateQuotationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for QuotationItemConnection

type QuotationItemConnectionObject =
  | QuotationItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type QuotationItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface QuotationItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'QuotationItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItemEdge[]> | prisma.QuotationItemEdge[]
  }
  aggregate: {
    type: 'AggregateQuotationItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateQuotationItem> | prisma.AggregateQuotationItem
  }
}
  

// Types for QuotationItemEdge

type QuotationItemEdgeObject =
  | QuotationItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type QuotationItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface QuotationItemEdgeFieldDetails {
  node: {
    type: 'QuotationItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem> | prisma.QuotationItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateQuotationItem

type AggregateQuotationItemObject =
  | AggregateQuotationItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateQuotationItemFields =
  | 'count'



  

export interface AggregateQuotationItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AddressConnection

type AddressConnectionObject =
  | AddressConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AddressConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AddressConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AddressEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AddressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressEdge[]> | prisma.AddressEdge[]
  }
  aggregate: {
    type: 'AggregateAddress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAddress> | prisma.AggregateAddress
  }
}
  

// Types for AddressEdge

type AddressEdgeObject =
  | AddressEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AddressEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AddressEdgeFieldDetails {
  node: {
    type: 'Address'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAddress

type AggregateAddressObject =
  | AggregateAddressFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAddressFields =
  | 'count'



  

export interface AggregateAddressFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PaymentConnection

type PaymentConnectionObject =
  | PaymentConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PaymentConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PaymentConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PaymentEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentEdge[]> | prisma.PaymentEdge[]
  }
  aggregate: {
    type: 'AggregatePayment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePayment> | prisma.AggregatePayment
  }
}
  

// Types for PaymentEdge

type PaymentEdgeObject =
  | PaymentEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PaymentEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PaymentEdgeFieldDetails {
  node: {
    type: 'Payment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment> | prisma.Payment
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePayment

type AggregatePaymentObject =
  | AggregatePaymentFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePaymentFields =
  | 'count'



  

export interface AggregatePaymentFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SalesmanConnection

type SalesmanConnectionObject =
  | SalesmanConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SalesmanConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SalesmanConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SalesmanConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SalesmanEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SalesmanConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SalesmanEdge[]> | prisma.SalesmanEdge[]
  }
  aggregate: {
    type: 'AggregateSalesman'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SalesmanConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSalesman> | prisma.AggregateSalesman
  }
}
  

// Types for SalesmanEdge

type SalesmanEdgeObject =
  | SalesmanEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SalesmanEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SalesmanEdgeFieldDetails {
  node: {
    type: 'Salesman'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SalesmanEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman> | prisma.Salesman
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSalesman

type AggregateSalesmanObject =
  | AggregateSalesmanFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSalesmanFields =
  | 'count'



  

export interface AggregateSalesmanFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for InvoiceConnection

type InvoiceConnectionObject =
  | InvoiceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type InvoiceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface InvoiceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InvoiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'InvoiceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"InvoiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InvoiceEdge[]> | prisma.InvoiceEdge[]
  }
  aggregate: {
    type: 'AggregateInvoice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InvoiceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateInvoice> | prisma.AggregateInvoice
  }
}
  

// Types for InvoiceEdge

type InvoiceEdgeObject =
  | InvoiceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type InvoiceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface InvoiceEdgeFieldDetails {
  node: {
    type: 'Invoice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InvoiceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice> | prisma.Invoice
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateInvoice

type AggregateInvoiceObject =
  | AggregateInvoiceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateInvoiceFields =
  | 'count'



  

export interface AggregateInvoiceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ShippingConnection

type ShippingConnectionObject =
  | ShippingConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ShippingConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ShippingConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShippingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ShippingEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ShippingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShippingEdge[]> | prisma.ShippingEdge[]
  }
  aggregate: {
    type: 'AggregateShipping'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShippingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateShipping> | prisma.AggregateShipping
  }
}
  

// Types for ShippingEdge

type ShippingEdgeObject =
  | ShippingEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ShippingEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ShippingEdgeFieldDetails {
  node: {
    type: 'Shipping'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShippingEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping> | prisma.Shipping
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateShipping

type AggregateShippingObject =
  | AggregateShippingFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateShippingFields =
  | 'count'



  

export interface AggregateShippingFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CategoryConnection

type CategoryConnectionObject =
  | CategoryConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CategoryConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CategoryConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CategoryEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CategoryEdge[]> | prisma.CategoryEdge[]
  }
  aggregate: {
    type: 'AggregateCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCategory> | prisma.AggregateCategory
  }
}
  

// Types for CategoryEdge

type CategoryEdgeObject =
  | CategoryEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CategoryEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CategoryEdgeFieldDetails {
  node: {
    type: 'Category'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CategoryEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category> | prisma.Category
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCategory

type AggregateCategoryObject =
  | AggregateCategoryFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCategoryFields =
  | 'count'



  

export interface AggregateCategoryFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProductItemConnection

type ProductItemConnectionObject =
  | ProductItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProductItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProductItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProductItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProductItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItemEdge[]> | prisma.ProductItemEdge[]
  }
  aggregate: {
    type: 'AggregateProductItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProductItem> | prisma.AggregateProductItem
  }
}
  

// Types for ProductItemEdge

type ProductItemEdgeObject =
  | ProductItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProductItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProductItemEdgeFieldDetails {
  node: {
    type: 'ProductItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem> | prisma.ProductItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProductItem

type AggregateProductItemObject =
  | AggregateProductItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProductItemFields =
  | 'count'



  

export interface AggregateProductItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ShoppingCartItemConnection

type ShoppingCartItemConnectionObject =
  | ShoppingCartItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ShoppingCartItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ShoppingCartItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ShoppingCartItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItemEdge[]> | prisma.ShoppingCartItemEdge[]
  }
  aggregate: {
    type: 'AggregateShoppingCartItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateShoppingCartItem> | prisma.AggregateShoppingCartItem
  }
}
  

// Types for ShoppingCartItemEdge

type ShoppingCartItemEdgeObject =
  | ShoppingCartItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ShoppingCartItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ShoppingCartItemEdgeFieldDetails {
  node: {
    type: 'ShoppingCartItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem> | prisma.ShoppingCartItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateShoppingCartItem

type AggregateShoppingCartItemObject =
  | AggregateShoppingCartItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateShoppingCartItemFields =
  | 'count'



  

export interface AggregateShoppingCartItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ShoppingCartConnection

type ShoppingCartConnectionObject =
  | ShoppingCartConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ShoppingCartConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ShoppingCartConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ShoppingCartEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartEdge[]> | prisma.ShoppingCartEdge[]
  }
  aggregate: {
    type: 'AggregateShoppingCart'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateShoppingCart> | prisma.AggregateShoppingCart
  }
}
  

// Types for ShoppingCartEdge

type ShoppingCartEdgeObject =
  | ShoppingCartEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ShoppingCartEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ShoppingCartEdgeFieldDetails {
  node: {
    type: 'ShoppingCart'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart> | prisma.ShoppingCart
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateShoppingCart

type AggregateShoppingCartObject =
  | AggregateShoppingCartFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateShoppingCartFields =
  | 'count'



  

export interface AggregateShoppingCartFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemConnection

type OrderItemConnectionObject =
  | OrderItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemEdge[]> | prisma.OrderItemEdge[]
  }
  aggregate: {
    type: 'AggregateOrderItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrderItem> | prisma.AggregateOrderItem
  }
}
  

// Types for OrderItemEdge

type OrderItemEdgeObject =
  | OrderItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderItemEdgeFieldDetails {
  node: {
    type: 'OrderItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrderItem

type AggregateOrderItemObject =
  | AggregateOrderItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderItemFields =
  | 'count'



  

export interface AggregateOrderItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderConnection

type OrderConnectionObject =
  | OrderConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderEdge[]> | prisma.OrderEdge[]
  }
  aggregate: {
    type: 'AggregateOrder'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrder> | prisma.AggregateOrder
  }
}
  

// Types for OrderEdge

type OrderEdgeObject =
  | OrderEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderEdgeFieldDetails {
  node: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrder

type AggregateOrderObject =
  | AggregateOrderFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderFields =
  | 'count'



  

export interface AggregateOrderFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createQuotation', args?: MutationCreateQuotationArgs[] | false, alias?: string  } 
  | { name: 'updateQuotation', args?: MutationUpdateQuotationArgs[] | false, alias?: string  } 
  | { name: 'updateManyQuotations', args?: MutationUpdateManyQuotationsArgs[] | false, alias?: string  } 
  | { name: 'upsertQuotation', args?: MutationUpsertQuotationArgs[] | false, alias?: string  } 
  | { name: 'deleteQuotation', args?: MutationDeleteQuotationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyQuotations', args?: MutationDeleteManyQuotationsArgs[] | false, alias?: string  } 
  | { name: 'createQuotationItem', args?: MutationCreateQuotationItemArgs[] | false, alias?: string  } 
  | { name: 'updateQuotationItem', args?: MutationUpdateQuotationItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyQuotationItems', args?: MutationUpdateManyQuotationItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertQuotationItem', args?: MutationUpsertQuotationItemArgs[] | false, alias?: string  } 
  | { name: 'deleteQuotationItem', args?: MutationDeleteQuotationItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyQuotationItems', args?: MutationDeleteManyQuotationItemsArgs[] | false, alias?: string  } 
  | { name: 'createAddress', args?: MutationCreateAddressArgs[] | false, alias?: string  } 
  | { name: 'updateAddress', args?: MutationUpdateAddressArgs[] | false, alias?: string  } 
  | { name: 'updateManyAddresses', args?: MutationUpdateManyAddressesArgs[] | false, alias?: string  } 
  | { name: 'upsertAddress', args?: MutationUpsertAddressArgs[] | false, alias?: string  } 
  | { name: 'deleteAddress', args?: MutationDeleteAddressArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAddresses', args?: MutationDeleteManyAddressesArgs[] | false, alias?: string  } 
  | { name: 'createPayment', args?: MutationCreatePaymentArgs[] | false, alias?: string  } 
  | { name: 'updatePayment', args?: MutationUpdatePaymentArgs[] | false, alias?: string  } 
  | { name: 'updateManyPayments', args?: MutationUpdateManyPaymentsArgs[] | false, alias?: string  } 
  | { name: 'upsertPayment', args?: MutationUpsertPaymentArgs[] | false, alias?: string  } 
  | { name: 'deletePayment', args?: MutationDeletePaymentArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPayments', args?: MutationDeleteManyPaymentsArgs[] | false, alias?: string  } 
  | { name: 'createSalesman', args?: MutationCreateSalesmanArgs[] | false, alias?: string  } 
  | { name: 'updateSalesman', args?: MutationUpdateSalesmanArgs[] | false, alias?: string  } 
  | { name: 'updateManySalesmen', args?: MutationUpdateManySalesmenArgs[] | false, alias?: string  } 
  | { name: 'upsertSalesman', args?: MutationUpsertSalesmanArgs[] | false, alias?: string  } 
  | { name: 'deleteSalesman', args?: MutationDeleteSalesmanArgs[] | false, alias?: string  } 
  | { name: 'deleteManySalesmen', args?: MutationDeleteManySalesmenArgs[] | false, alias?: string  } 
  | { name: 'createInvoice', args?: MutationCreateInvoiceArgs[] | false, alias?: string  } 
  | { name: 'updateInvoice', args?: MutationUpdateInvoiceArgs[] | false, alias?: string  } 
  | { name: 'updateManyInvoices', args?: MutationUpdateManyInvoicesArgs[] | false, alias?: string  } 
  | { name: 'upsertInvoice', args?: MutationUpsertInvoiceArgs[] | false, alias?: string  } 
  | { name: 'deleteInvoice', args?: MutationDeleteInvoiceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyInvoices', args?: MutationDeleteManyInvoicesArgs[] | false, alias?: string  } 
  | { name: 'createShipping', args?: MutationCreateShippingArgs[] | false, alias?: string  } 
  | { name: 'updateShipping', args?: MutationUpdateShippingArgs[] | false, alias?: string  } 
  | { name: 'updateManyShippings', args?: MutationUpdateManyShippingsArgs[] | false, alias?: string  } 
  | { name: 'upsertShipping', args?: MutationUpsertShippingArgs[] | false, alias?: string  } 
  | { name: 'deleteShipping', args?: MutationDeleteShippingArgs[] | false, alias?: string  } 
  | { name: 'deleteManyShippings', args?: MutationDeleteManyShippingsArgs[] | false, alias?: string  } 
  | { name: 'createCategory', args?: MutationCreateCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateCategory', args?: MutationUpdateCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateManyCategories', args?: MutationUpdateManyCategoriesArgs[] | false, alias?: string  } 
  | { name: 'upsertCategory', args?: MutationUpsertCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteCategory', args?: MutationDeleteCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCategories', args?: MutationDeleteManyCategoriesArgs[] | false, alias?: string  } 
  | { name: 'createProductItem', args?: MutationCreateProductItemArgs[] | false, alias?: string  } 
  | { name: 'updateProductItem', args?: MutationUpdateProductItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyProductItems', args?: MutationUpdateManyProductItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertProductItem', args?: MutationUpsertProductItemArgs[] | false, alias?: string  } 
  | { name: 'deleteProductItem', args?: MutationDeleteProductItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProductItems', args?: MutationDeleteManyProductItemsArgs[] | false, alias?: string  } 
  | { name: 'createShoppingCartItem', args?: MutationCreateShoppingCartItemArgs[] | false, alias?: string  } 
  | { name: 'updateShoppingCartItem', args?: MutationUpdateShoppingCartItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyShoppingCartItems', args?: MutationUpdateManyShoppingCartItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertShoppingCartItem', args?: MutationUpsertShoppingCartItemArgs[] | false, alias?: string  } 
  | { name: 'deleteShoppingCartItem', args?: MutationDeleteShoppingCartItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyShoppingCartItems', args?: MutationDeleteManyShoppingCartItemsArgs[] | false, alias?: string  } 
  | { name: 'createShoppingCart', args?: MutationCreateShoppingCartArgs[] | false, alias?: string  } 
  | { name: 'updateShoppingCart', args?: MutationUpdateShoppingCartArgs[] | false, alias?: string  } 
  | { name: 'updateManyShoppingCarts', args?: MutationUpdateManyShoppingCartsArgs[] | false, alias?: string  } 
  | { name: 'upsertShoppingCart', args?: MutationUpsertShoppingCartArgs[] | false, alias?: string  } 
  | { name: 'deleteShoppingCart', args?: MutationDeleteShoppingCartArgs[] | false, alias?: string  } 
  | { name: 'deleteManyShoppingCarts', args?: MutationDeleteManyShoppingCartsArgs[] | false, alias?: string  } 
  | { name: 'createOrderItem', args?: MutationCreateOrderItemArgs[] | false, alias?: string  } 
  | { name: 'updateOrderItem', args?: MutationUpdateOrderItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrderItems', args?: MutationUpdateManyOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrderItem', args?: MutationUpsertOrderItemArgs[] | false, alias?: string  } 
  | { name: 'deleteOrderItem', args?: MutationDeleteOrderItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrderItems', args?: MutationDeleteManyOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'createOrder', args?: MutationCreateOrderArgs[] | false, alias?: string  } 
  | { name: 'updateOrder', args?: MutationUpdateOrderArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrders', args?: MutationUpdateManyOrdersArgs[] | false, alias?: string  } 
  | { name: 'upsertOrder', args?: MutationUpsertOrderArgs[] | false, alias?: string  } 
  | { name: 'deleteOrder', args?: MutationDeleteOrderArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrders', args?: MutationDeleteManyOrdersArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createQuotation'
  | 'updateQuotation'
  | 'updateManyQuotations'
  | 'upsertQuotation'
  | 'deleteQuotation'
  | 'deleteManyQuotations'
  | 'createQuotationItem'
  | 'updateQuotationItem'
  | 'updateManyQuotationItems'
  | 'upsertQuotationItem'
  | 'deleteQuotationItem'
  | 'deleteManyQuotationItems'
  | 'createAddress'
  | 'updateAddress'
  | 'updateManyAddresses'
  | 'upsertAddress'
  | 'deleteAddress'
  | 'deleteManyAddresses'
  | 'createPayment'
  | 'updatePayment'
  | 'updateManyPayments'
  | 'upsertPayment'
  | 'deletePayment'
  | 'deleteManyPayments'
  | 'createSalesman'
  | 'updateSalesman'
  | 'updateManySalesmen'
  | 'upsertSalesman'
  | 'deleteSalesman'
  | 'deleteManySalesmen'
  | 'createInvoice'
  | 'updateInvoice'
  | 'updateManyInvoices'
  | 'upsertInvoice'
  | 'deleteInvoice'
  | 'deleteManyInvoices'
  | 'createShipping'
  | 'updateShipping'
  | 'updateManyShippings'
  | 'upsertShipping'
  | 'deleteShipping'
  | 'deleteManyShippings'
  | 'createCategory'
  | 'updateCategory'
  | 'updateManyCategories'
  | 'upsertCategory'
  | 'deleteCategory'
  | 'deleteManyCategories'
  | 'createProductItem'
  | 'updateProductItem'
  | 'updateManyProductItems'
  | 'upsertProductItem'
  | 'deleteProductItem'
  | 'deleteManyProductItems'
  | 'createShoppingCartItem'
  | 'updateShoppingCartItem'
  | 'updateManyShoppingCartItems'
  | 'upsertShoppingCartItem'
  | 'deleteShoppingCartItem'
  | 'deleteManyShoppingCartItems'
  | 'createShoppingCart'
  | 'updateShoppingCart'
  | 'updateManyShoppingCarts'
  | 'upsertShoppingCart'
  | 'deleteShoppingCart'
  | 'deleteManyShoppingCarts'
  | 'createOrderItem'
  | 'updateOrderItem'
  | 'updateManyOrderItems'
  | 'upsertOrderItem'
  | 'deleteOrderItem'
  | 'deleteManyOrderItems'
  | 'createOrder'
  | 'updateOrder'
  | 'updateManyOrders'
  | 'upsertOrder'
  | 'deleteOrder'
  | 'deleteManyOrders'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateQuotationArgs =
  | 'data'
type MutationUpdateQuotationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyQuotationsArgs =
  | 'data'
  | 'where'
type MutationUpsertQuotationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteQuotationArgs =
  | 'where'
type MutationDeleteManyQuotationsArgs =
  | 'where'
type MutationCreateQuotationItemArgs =
  | 'data'
type MutationUpdateQuotationItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyQuotationItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertQuotationItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteQuotationItemArgs =
  | 'where'
type MutationDeleteManyQuotationItemsArgs =
  | 'where'
type MutationCreateAddressArgs =
  | 'data'
type MutationUpdateAddressArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAddressesArgs =
  | 'data'
  | 'where'
type MutationUpsertAddressArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAddressArgs =
  | 'where'
type MutationDeleteManyAddressesArgs =
  | 'where'
type MutationCreatePaymentArgs =
  | 'data'
type MutationUpdatePaymentArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPaymentsArgs =
  | 'data'
  | 'where'
type MutationUpsertPaymentArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePaymentArgs =
  | 'where'
type MutationDeleteManyPaymentsArgs =
  | 'where'
type MutationCreateSalesmanArgs =
  | 'data'
type MutationUpdateSalesmanArgs =
  | 'data'
  | 'where'
type MutationUpdateManySalesmenArgs =
  | 'data'
  | 'where'
type MutationUpsertSalesmanArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSalesmanArgs =
  | 'where'
type MutationDeleteManySalesmenArgs =
  | 'where'
type MutationCreateInvoiceArgs =
  | 'data'
type MutationUpdateInvoiceArgs =
  | 'data'
  | 'where'
type MutationUpdateManyInvoicesArgs =
  | 'data'
  | 'where'
type MutationUpsertInvoiceArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteInvoiceArgs =
  | 'where'
type MutationDeleteManyInvoicesArgs =
  | 'where'
type MutationCreateShippingArgs =
  | 'data'
type MutationUpdateShippingArgs =
  | 'data'
  | 'where'
type MutationUpdateManyShippingsArgs =
  | 'data'
  | 'where'
type MutationUpsertShippingArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteShippingArgs =
  | 'where'
type MutationDeleteManyShippingsArgs =
  | 'where'
type MutationCreateCategoryArgs =
  | 'data'
type MutationUpdateCategoryArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCategoriesArgs =
  | 'data'
  | 'where'
type MutationUpsertCategoryArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCategoryArgs =
  | 'where'
type MutationDeleteManyCategoriesArgs =
  | 'where'
type MutationCreateProductItemArgs =
  | 'data'
type MutationUpdateProductItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProductItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertProductItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProductItemArgs =
  | 'where'
type MutationDeleteManyProductItemsArgs =
  | 'where'
type MutationCreateShoppingCartItemArgs =
  | 'data'
type MutationUpdateShoppingCartItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyShoppingCartItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertShoppingCartItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteShoppingCartItemArgs =
  | 'where'
type MutationDeleteManyShoppingCartItemsArgs =
  | 'where'
type MutationCreateShoppingCartArgs =
  | 'data'
type MutationUpdateShoppingCartArgs =
  | 'data'
  | 'where'
type MutationUpdateManyShoppingCartsArgs =
  | 'data'
  | 'where'
type MutationUpsertShoppingCartArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteShoppingCartArgs =
  | 'where'
type MutationDeleteManyShoppingCartsArgs =
  | 'where'
type MutationCreateOrderItemArgs =
  | 'data'
type MutationUpdateOrderItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrderItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderItemArgs =
  | 'where'
type MutationDeleteManyOrderItemsArgs =
  | 'where'
type MutationCreateOrderArgs =
  | 'data'
type MutationUpdateOrderArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrdersArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderArgs =
  | 'where'
type MutationDeleteManyOrdersArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createQuotation: {
    type: 'Quotation'
    args: Record<MutationCreateQuotationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QuotationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation> | prisma.Quotation
  }
  updateQuotation: {
    type: 'Quotation'
    args: Record<MutationUpdateQuotationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QuotationUpdateInput, where: QuotationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation | null> | prisma.Quotation | null
  }
  updateManyQuotations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyQuotationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QuotationUpdateManyMutationInput, where?: QuotationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertQuotation: {
    type: 'Quotation'
    args: Record<MutationUpsertQuotationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: QuotationWhereUniqueInput, create: QuotationCreateInput, update: QuotationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation> | prisma.Quotation
  }
  deleteQuotation: {
    type: 'Quotation'
    args: Record<MutationDeleteQuotationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: QuotationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation | null> | prisma.Quotation | null
  }
  deleteManyQuotations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyQuotationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: QuotationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createQuotationItem: {
    type: 'QuotationItem'
    args: Record<MutationCreateQuotationItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QuotationItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem> | prisma.QuotationItem
  }
  updateQuotationItem: {
    type: 'QuotationItem'
    args: Record<MutationUpdateQuotationItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QuotationItemUpdateInput, where: QuotationItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem | null> | prisma.QuotationItem | null
  }
  updateManyQuotationItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyQuotationItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: QuotationItemUpdateManyMutationInput, where?: QuotationItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertQuotationItem: {
    type: 'QuotationItem'
    args: Record<MutationUpsertQuotationItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: QuotationItemWhereUniqueInput, create: QuotationItemCreateInput, update: QuotationItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem> | prisma.QuotationItem
  }
  deleteQuotationItem: {
    type: 'QuotationItem'
    args: Record<MutationDeleteQuotationItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: QuotationItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem | null> | prisma.QuotationItem | null
  }
  deleteManyQuotationItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyQuotationItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: QuotationItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAddress: {
    type: 'Address'
    args: Record<MutationCreateAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AddressCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  updateAddress: {
    type: 'Address'
    args: Record<MutationUpdateAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AddressUpdateInput, where: AddressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  updateManyAddresses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAddressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AddressUpdateManyMutationInput, where?: AddressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAddress: {
    type: 'Address'
    args: Record<MutationUpsertAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AddressWhereUniqueInput, create: AddressCreateInput, update: AddressUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  deleteAddress: {
    type: 'Address'
    args: Record<MutationDeleteAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AddressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  deleteManyAddresses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAddressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AddressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPayment: {
    type: 'Payment'
    args: Record<MutationCreatePaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment> | prisma.Payment
  }
  updatePayment: {
    type: 'Payment'
    args: Record<MutationUpdatePaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentUpdateInput, where: PaymentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  updateManyPayments: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentUpdateManyMutationInput, where?: PaymentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPayment: {
    type: 'Payment'
    args: Record<MutationUpsertPaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentWhereUniqueInput, create: PaymentCreateInput, update: PaymentUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment> | prisma.Payment
  }
  deletePayment: {
    type: 'Payment'
    args: Record<MutationDeletePaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  deleteManyPayments: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PaymentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSalesman: {
    type: 'Salesman'
    args: Record<MutationCreateSalesmanArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SalesmanCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman> | prisma.Salesman
  }
  updateSalesman: {
    type: 'Salesman'
    args: Record<MutationUpdateSalesmanArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SalesmanUpdateInput, where: SalesmanWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman | null> | prisma.Salesman | null
  }
  updateManySalesmen: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySalesmenArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SalesmanUpdateManyMutationInput, where?: SalesmanWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSalesman: {
    type: 'Salesman'
    args: Record<MutationUpsertSalesmanArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SalesmanWhereUniqueInput, create: SalesmanCreateInput, update: SalesmanUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman> | prisma.Salesman
  }
  deleteSalesman: {
    type: 'Salesman'
    args: Record<MutationDeleteSalesmanArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SalesmanWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman | null> | prisma.Salesman | null
  }
  deleteManySalesmen: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySalesmenArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SalesmanWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createInvoice: {
    type: 'Invoice'
    args: Record<MutationCreateInvoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InvoiceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice> | prisma.Invoice
  }
  updateInvoice: {
    type: 'Invoice'
    args: Record<MutationUpdateInvoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InvoiceUpdateInput, where: InvoiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice | null> | prisma.Invoice | null
  }
  updateManyInvoices: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyInvoicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: InvoiceUpdateManyMutationInput, where?: InvoiceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertInvoice: {
    type: 'Invoice'
    args: Record<MutationUpsertInvoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: InvoiceWhereUniqueInput, create: InvoiceCreateInput, update: InvoiceUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice> | prisma.Invoice
  }
  deleteInvoice: {
    type: 'Invoice'
    args: Record<MutationDeleteInvoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: InvoiceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice | null> | prisma.Invoice | null
  }
  deleteManyInvoices: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyInvoicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: InvoiceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createShipping: {
    type: 'Shipping'
    args: Record<MutationCreateShippingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShippingCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping> | prisma.Shipping
  }
  updateShipping: {
    type: 'Shipping'
    args: Record<MutationUpdateShippingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShippingUpdateInput, where: ShippingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping | null> | prisma.Shipping | null
  }
  updateManyShippings: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyShippingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShippingUpdateManyMutationInput, where?: ShippingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertShipping: {
    type: 'Shipping'
    args: Record<MutationUpsertShippingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ShippingWhereUniqueInput, create: ShippingCreateInput, update: ShippingUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping> | prisma.Shipping
  }
  deleteShipping: {
    type: 'Shipping'
    args: Record<MutationDeleteShippingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ShippingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping | null> | prisma.Shipping | null
  }
  deleteManyShippings: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyShippingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ShippingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCategory: {
    type: 'Category'
    args: Record<MutationCreateCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CategoryCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category> | prisma.Category
  }
  updateCategory: {
    type: 'Category'
    args: Record<MutationUpdateCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CategoryUpdateInput, where: CategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  updateManyCategories: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CategoryUpdateManyMutationInput, where?: CategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCategory: {
    type: 'Category'
    args: Record<MutationUpsertCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CategoryWhereUniqueInput, create: CategoryCreateInput, update: CategoryUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category> | prisma.Category
  }
  deleteCategory: {
    type: 'Category'
    args: Record<MutationDeleteCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  deleteManyCategories: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createProductItem: {
    type: 'ProductItem'
    args: Record<MutationCreateProductItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem> | prisma.ProductItem
  }
  updateProductItem: {
    type: 'ProductItem'
    args: Record<MutationUpdateProductItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductItemUpdateInput, where: ProductItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem | null> | prisma.ProductItem | null
  }
  updateManyProductItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProductItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductItemUpdateManyMutationInput, where?: ProductItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProductItem: {
    type: 'ProductItem'
    args: Record<MutationUpsertProductItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductItemWhereUniqueInput, create: ProductItemCreateInput, update: ProductItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem> | prisma.ProductItem
  }
  deleteProductItem: {
    type: 'ProductItem'
    args: Record<MutationDeleteProductItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem | null> | prisma.ProductItem | null
  }
  deleteManyProductItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProductItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProductItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createShoppingCartItem: {
    type: 'ShoppingCartItem'
    args: Record<MutationCreateShoppingCartItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShoppingCartItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem> | prisma.ShoppingCartItem
  }
  updateShoppingCartItem: {
    type: 'ShoppingCartItem'
    args: Record<MutationUpdateShoppingCartItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShoppingCartItemUpdateInput, where: ShoppingCartItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem | null> | prisma.ShoppingCartItem | null
  }
  updateManyShoppingCartItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyShoppingCartItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShoppingCartItemUpdateManyMutationInput, where?: ShoppingCartItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertShoppingCartItem: {
    type: 'ShoppingCartItem'
    args: Record<MutationUpsertShoppingCartItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ShoppingCartItemWhereUniqueInput, create: ShoppingCartItemCreateInput, update: ShoppingCartItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem> | prisma.ShoppingCartItem
  }
  deleteShoppingCartItem: {
    type: 'ShoppingCartItem'
    args: Record<MutationDeleteShoppingCartItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ShoppingCartItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem | null> | prisma.ShoppingCartItem | null
  }
  deleteManyShoppingCartItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyShoppingCartItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ShoppingCartItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createShoppingCart: {
    type: 'ShoppingCart'
    args: Record<MutationCreateShoppingCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShoppingCartCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart> | prisma.ShoppingCart
  }
  updateShoppingCart: {
    type: 'ShoppingCart'
    args: Record<MutationUpdateShoppingCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShoppingCartUpdateInput, where: ShoppingCartWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart | null> | prisma.ShoppingCart | null
  }
  updateManyShoppingCarts: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyShoppingCartsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ShoppingCartUpdateManyMutationInput, where?: ShoppingCartWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertShoppingCart: {
    type: 'ShoppingCart'
    args: Record<MutationUpsertShoppingCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ShoppingCartWhereUniqueInput, create: ShoppingCartCreateInput, update: ShoppingCartUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart> | prisma.ShoppingCart
  }
  deleteShoppingCart: {
    type: 'ShoppingCart'
    args: Record<MutationDeleteShoppingCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ShoppingCartWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart | null> | prisma.ShoppingCart | null
  }
  deleteManyShoppingCarts: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyShoppingCartsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ShoppingCartWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrderItem: {
    type: 'OrderItem'
    args: Record<MutationCreateOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  updateOrderItem: {
    type: 'OrderItem'
    args: Record<MutationUpdateOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemUpdateInput, where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  updateManyOrderItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemUpdateManyMutationInput, where?: OrderItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrderItem: {
    type: 'OrderItem'
    args: Record<MutationUpsertOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemWhereUniqueInput, create: OrderItemCreateInput, update: OrderItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  deleteOrderItem: {
    type: 'OrderItem'
    args: Record<MutationDeleteOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  deleteManyOrderItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrder: {
    type: 'Order'
    args: Record<MutationCreateOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  updateOrder: {
    type: 'Order'
    args: Record<MutationUpdateOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderUpdateInput, where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  updateManyOrders: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderUpdateManyMutationInput, where?: OrderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrder: {
    type: 'Order'
    args: Record<MutationUpsertOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderWhereUniqueInput, create: OrderCreateInput, update: OrderUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  deleteOrder: {
    type: 'Order'
    args: Record<MutationDeleteOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  deleteManyOrders: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'quotation', args?: SubscriptionQuotationArgs[] | false, alias?: string  } 
  | { name: 'quotationItem', args?: SubscriptionQuotationItemArgs[] | false, alias?: string  } 
  | { name: 'address', args?: SubscriptionAddressArgs[] | false, alias?: string  } 
  | { name: 'payment', args?: SubscriptionPaymentArgs[] | false, alias?: string  } 
  | { name: 'salesman', args?: SubscriptionSalesmanArgs[] | false, alias?: string  } 
  | { name: 'invoice', args?: SubscriptionInvoiceArgs[] | false, alias?: string  } 
  | { name: 'shipping', args?: SubscriptionShippingArgs[] | false, alias?: string  } 
  | { name: 'category', args?: SubscriptionCategoryArgs[] | false, alias?: string  } 
  | { name: 'productItem', args?: SubscriptionProductItemArgs[] | false, alias?: string  } 
  | { name: 'shoppingCartItem', args?: SubscriptionShoppingCartItemArgs[] | false, alias?: string  } 
  | { name: 'shoppingCart', args?: SubscriptionShoppingCartArgs[] | false, alias?: string  } 
  | { name: 'orderItem', args?: SubscriptionOrderItemArgs[] | false, alias?: string  } 
  | { name: 'order', args?: SubscriptionOrderArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'quotation'
  | 'quotationItem'
  | 'address'
  | 'payment'
  | 'salesman'
  | 'invoice'
  | 'shipping'
  | 'category'
  | 'productItem'
  | 'shoppingCartItem'
  | 'shoppingCart'
  | 'orderItem'
  | 'order'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionQuotationArgs =
  | 'where'
type SubscriptionQuotationItemArgs =
  | 'where'
type SubscriptionAddressArgs =
  | 'where'
type SubscriptionPaymentArgs =
  | 'where'
type SubscriptionSalesmanArgs =
  | 'where'
type SubscriptionInvoiceArgs =
  | 'where'
type SubscriptionShippingArgs =
  | 'where'
type SubscriptionCategoryArgs =
  | 'where'
type SubscriptionProductItemArgs =
  | 'where'
type SubscriptionShoppingCartItemArgs =
  | 'where'
type SubscriptionShoppingCartArgs =
  | 'where'
type SubscriptionOrderItemArgs =
  | 'where'
type SubscriptionOrderArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  quotation: {
    type: 'QuotationSubscriptionPayload'
    args: Record<SubscriptionQuotationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: QuotationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationSubscriptionPayload | null> | prisma.QuotationSubscriptionPayload | null
  }
  quotationItem: {
    type: 'QuotationItemSubscriptionPayload'
    args: Record<SubscriptionQuotationItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: QuotationItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItemSubscriptionPayload | null> | prisma.QuotationItemSubscriptionPayload | null
  }
  address: {
    type: 'AddressSubscriptionPayload'
    args: Record<SubscriptionAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AddressSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressSubscriptionPayload | null> | prisma.AddressSubscriptionPayload | null
  }
  payment: {
    type: 'PaymentSubscriptionPayload'
    args: Record<SubscriptionPaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PaymentSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentSubscriptionPayload | null> | prisma.PaymentSubscriptionPayload | null
  }
  salesman: {
    type: 'SalesmanSubscriptionPayload'
    args: Record<SubscriptionSalesmanArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SalesmanSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SalesmanSubscriptionPayload | null> | prisma.SalesmanSubscriptionPayload | null
  }
  invoice: {
    type: 'InvoiceSubscriptionPayload'
    args: Record<SubscriptionInvoiceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: InvoiceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InvoiceSubscriptionPayload | null> | prisma.InvoiceSubscriptionPayload | null
  }
  shipping: {
    type: 'ShippingSubscriptionPayload'
    args: Record<SubscriptionShippingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ShippingSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShippingSubscriptionPayload | null> | prisma.ShippingSubscriptionPayload | null
  }
  category: {
    type: 'CategorySubscriptionPayload'
    args: Record<SubscriptionCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CategorySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CategorySubscriptionPayload | null> | prisma.CategorySubscriptionPayload | null
  }
  productItem: {
    type: 'ProductItemSubscriptionPayload'
    args: Record<SubscriptionProductItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProductItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItemSubscriptionPayload | null> | prisma.ProductItemSubscriptionPayload | null
  }
  shoppingCartItem: {
    type: 'ShoppingCartItemSubscriptionPayload'
    args: Record<SubscriptionShoppingCartItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ShoppingCartItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItemSubscriptionPayload | null> | prisma.ShoppingCartItemSubscriptionPayload | null
  }
  shoppingCart: {
    type: 'ShoppingCartSubscriptionPayload'
    args: Record<SubscriptionShoppingCartArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ShoppingCartSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartSubscriptionPayload | null> | prisma.ShoppingCartSubscriptionPayload | null
  }
  orderItem: {
    type: 'OrderItemSubscriptionPayload'
    args: Record<SubscriptionOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemSubscriptionPayload | null> | prisma.OrderItemSubscriptionPayload | null
  }
  order: {
    type: 'OrderSubscriptionPayload'
    args: Record<SubscriptionOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderSubscriptionPayload | null> | prisma.OrderSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'runningId', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'avatar', args?: [] | false, alias?: string  } 
  | { name: 'activated', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'runningId'
  | 'type'
  | 'name'
  | 'email'
  | 'password'
  | 'phone'
  | 'avatar'
  | 'activated'
  | 'createdAt'
  | 'updatedAt'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  runningId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  avatar: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  activated: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for QuotationSubscriptionPayload

type QuotationSubscriptionPayloadObject =
  | QuotationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type QuotationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface QuotationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Quotation'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"QuotationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Quotation | null> | prisma.Quotation | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'QuotationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"QuotationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationPreviousValues | null> | prisma.QuotationPreviousValues | null
  }
}
  

// Types for QuotationPreviousValues

type QuotationPreviousValuesObject =
  | QuotationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'fileUrl', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type QuotationPreviousValuesFields =
  | 'id'
  | 'docId'
  | 'createdAt'
  | 'updatedAt'
  | 'fileUrl'
  | 'status'



  

export interface QuotationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  fileUrl: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for QuotationItemSubscriptionPayload

type QuotationItemSubscriptionPayloadObject =
  | QuotationItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type QuotationItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface QuotationItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"QuotationItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'QuotationItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"QuotationItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItem | null> | prisma.QuotationItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'QuotationItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"QuotationItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.QuotationItemPreviousValues | null> | prisma.QuotationItemPreviousValues | null
  }
}
  

// Types for QuotationItemPreviousValues

type QuotationItemPreviousValuesObject =
  | QuotationItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'realPrice', args?: [] | false, alias?: string  } 

type QuotationItemPreviousValuesFields =
  | 'id'
  | 'key'
  | 'amount'
  | 'realPrice'



  

export interface QuotationItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  realPrice: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AddressSubscriptionPayload

type AddressSubscriptionPayloadObject =
  | AddressSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AddressSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AddressSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Address'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AddressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AddressPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AddressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressPreviousValues | null> | prisma.AddressPreviousValues | null
  }
}
  

// Types for AddressPreviousValues

type AddressPreviousValuesObject =
  | AddressPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'Address', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type AddressPreviousValuesFields =
  | 'id'
  | 'name'
  | 'Address'
  | 'createdAt'
  | 'updatedAt'



  

export interface AddressPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  Address: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PaymentSubscriptionPayload

type PaymentSubscriptionPayloadObject =
  | PaymentSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PaymentSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PaymentSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Payment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PaymentPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentPreviousValues | null> | prisma.PaymentPreviousValues | null
  }
}
  

// Types for PaymentPreviousValues

type PaymentPreviousValuesObject =
  | PaymentPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'rawEvent', args?: [] | false, alias?: string  } 

type PaymentPreviousValuesFields =
  | 'id'
  | 'docId'
  | 'amount'
  | 'createdAt'
  | 'updatedAt'
  | 'rawEvent'



  

export interface PaymentPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  rawEvent: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SalesmanSubscriptionPayload

type SalesmanSubscriptionPayloadObject =
  | SalesmanSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SalesmanSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SalesmanSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SalesmanSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Salesman'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SalesmanSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Salesman | null> | prisma.Salesman | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SalesmanPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SalesmanSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SalesmanPreviousValues | null> | prisma.SalesmanPreviousValues | null
  }
}
  

// Types for SalesmanPreviousValues

type SalesmanPreviousValuesObject =
  | SalesmanPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type SalesmanPreviousValuesFields =
  | 'id'
  | 'name'
  | 'email'
  | 'phone'
  | 'createdAt'
  | 'updatedAt'



  

export interface SalesmanPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for InvoiceSubscriptionPayload

type InvoiceSubscriptionPayloadObject =
  | InvoiceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type InvoiceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface InvoiceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"InvoiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Invoice'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"InvoiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Invoice | null> | prisma.Invoice | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'InvoicePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"InvoiceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.InvoicePreviousValues | null> | prisma.InvoicePreviousValues | null
  }
}
  

// Types for InvoicePreviousValues

type InvoicePreviousValuesObject =
  | InvoicePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'creditTerm', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type InvoicePreviousValuesFields =
  | 'id'
  | 'docId'
  | 'creditTerm'
  | 'createdAt'
  | 'updatedAt'



  

export interface InvoicePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  creditTerm: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ShippingSubscriptionPayload

type ShippingSubscriptionPayloadObject =
  | ShippingSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ShippingSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ShippingSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShippingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Shipping'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ShippingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Shipping | null> | prisma.Shipping | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ShippingPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ShippingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShippingPreviousValues | null> | prisma.ShippingPreviousValues | null
  }
}
  

// Types for ShippingPreviousValues

type ShippingPreviousValuesObject =
  | ShippingPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'dueDate', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type ShippingPreviousValuesFields =
  | 'id'
  | 'docId'
  | 'dueDate'
  | 'status'
  | 'createdAt'
  | 'updatedAt'



  

export interface ShippingPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dueDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CategorySubscriptionPayload

type CategorySubscriptionPayloadObject =
  | CategorySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CategorySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CategorySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Category'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Category | null> | prisma.Category | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CategoryPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CategoryPreviousValues | null> | prisma.CategoryPreviousValues | null
  }
}
  

// Types for CategoryPreviousValues

type CategoryPreviousValuesObject =
  | CategoryPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type CategoryPreviousValuesFields =
  | 'id'
  | 'name'
  | 'createdAt'
  | 'updatedAt'



  

export interface CategoryPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProductItemSubscriptionPayload

type ProductItemSubscriptionPayloadObject =
  | ProductItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProductItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProductItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ProductItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItem | null> | prisma.ProductItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProductItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductItemPreviousValues | null> | prisma.ProductItemPreviousValues | null
  }
}
  

// Types for ProductItemPreviousValues

type ProductItemPreviousValuesObject =
  | ProductItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'salePrice', args?: [] | false, alias?: string  } 
  | { name: 'brand', args?: [] | false, alias?: string  } 
  | { name: 'unitType', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'MenuDetail', args?: [] | false, alias?: string  } 
  | { name: 'TermDetail', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'isPublished', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 

type ProductItemPreviousValuesFields =
  | 'id'
  | 'name'
  | 'price'
  | 'salePrice'
  | 'brand'
  | 'unitType'
  | 'description'
  | 'MenuDetail'
  | 'TermDetail'
  | 'amount'
  | 'isPublished'
  | 'createdAt'
  | 'updatedAt'
  | 'image'



  

export interface ProductItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  salePrice: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  brand: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  unitType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  MenuDetail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  TermDetail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isPublished: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ShoppingCartItemSubscriptionPayload

type ShoppingCartItemSubscriptionPayloadObject =
  | ShoppingCartItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ShoppingCartItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ShoppingCartItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ShoppingCartItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ShoppingCartItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItem | null> | prisma.ShoppingCartItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ShoppingCartItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ShoppingCartItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartItemPreviousValues | null> | prisma.ShoppingCartItemPreviousValues | null
  }
}
  

// Types for ShoppingCartItemPreviousValues

type ShoppingCartItemPreviousValuesObject =
  | ShoppingCartItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 

type ShoppingCartItemPreviousValuesFields =
  | 'id'
  | 'key'
  | 'amount'



  

export interface ShoppingCartItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ShoppingCartSubscriptionPayload

type ShoppingCartSubscriptionPayloadObject =
  | ShoppingCartSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ShoppingCartSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ShoppingCartSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ShoppingCartSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ShoppingCart'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ShoppingCartSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCart | null> | prisma.ShoppingCart | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ShoppingCartPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ShoppingCartSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ShoppingCartPreviousValues | null> | prisma.ShoppingCartPreviousValues | null
  }
}
  

// Types for ShoppingCartPreviousValues

type ShoppingCartPreviousValuesObject =
  | ShoppingCartPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'total_cost', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type ShoppingCartPreviousValuesFields =
  | 'id'
  | 'total_cost'
  | 'createdAt'
  | 'updatedAt'



  

export interface ShoppingCartPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  total_cost: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemSubscriptionPayload

type OrderItemSubscriptionPayloadObject =
  | OrderItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OrderItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemPreviousValues | null> | prisma.OrderItemPreviousValues | null
  }
}
  

// Types for OrderItemPreviousValues

type OrderItemPreviousValuesObject =
  | OrderItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'realPrice', args?: [] | false, alias?: string  } 

type OrderItemPreviousValuesFields =
  | 'id'
  | 'key'
  | 'amount'
  | 'realPrice'



  

export interface OrderItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  realPrice: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderSubscriptionPayload

type OrderSubscriptionPayloadObject =
  | OrderSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderPreviousValues | null> | prisma.OrderPreviousValues | null
  }
}
  

// Types for OrderPreviousValues

type OrderPreviousValuesObject =
  | OrderPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'docId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type OrderPreviousValuesFields =
  | 'id'
  | 'docId'
  | 'createdAt'
  | 'updatedAt'
  | 'status'



  

export interface OrderPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  docId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface ShoppingCartItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  product?: ProductItemWhereInput | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  ShoppingCart?: ShoppingCartWhereInput | null
  AND?: ShoppingCartItemWhereInput[]
  OR?: ShoppingCartItemWhereInput[]
  NOT?: ShoppingCartItemWhereInput[]
}
export type ShoppingCartItemWhereInputInputObject =
  | Extract<keyof ShoppingCartItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'ShoppingCart', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProductItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  salePrice?: string | null
  salePrice_not?: string | null
  salePrice_in?: string[]
  salePrice_not_in?: string[]
  salePrice_lt?: string | null
  salePrice_lte?: string | null
  salePrice_gt?: string | null
  salePrice_gte?: string | null
  salePrice_contains?: string | null
  salePrice_not_contains?: string | null
  salePrice_starts_with?: string | null
  salePrice_not_starts_with?: string | null
  salePrice_ends_with?: string | null
  salePrice_not_ends_with?: string | null
  brand?: string | null
  brand_not?: string | null
  brand_in?: string[]
  brand_not_in?: string[]
  brand_lt?: string | null
  brand_lte?: string | null
  brand_gt?: string | null
  brand_gte?: string | null
  brand_contains?: string | null
  brand_not_contains?: string | null
  brand_starts_with?: string | null
  brand_not_starts_with?: string | null
  brand_ends_with?: string | null
  brand_not_ends_with?: string | null
  unitType?: string | null
  unitType_not?: string | null
  unitType_in?: string[]
  unitType_not_in?: string[]
  unitType_lt?: string | null
  unitType_lte?: string | null
  unitType_gt?: string | null
  unitType_gte?: string | null
  unitType_contains?: string | null
  unitType_not_contains?: string | null
  unitType_starts_with?: string | null
  unitType_not_starts_with?: string | null
  unitType_ends_with?: string | null
  unitType_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  MenuDetail?: string | null
  MenuDetail_not?: string | null
  MenuDetail_in?: string[]
  MenuDetail_not_in?: string[]
  MenuDetail_lt?: string | null
  MenuDetail_lte?: string | null
  MenuDetail_gt?: string | null
  MenuDetail_gte?: string | null
  MenuDetail_contains?: string | null
  MenuDetail_not_contains?: string | null
  MenuDetail_starts_with?: string | null
  MenuDetail_not_starts_with?: string | null
  MenuDetail_ends_with?: string | null
  MenuDetail_not_ends_with?: string | null
  TermDetail?: string | null
  TermDetail_not?: string | null
  TermDetail_in?: string[]
  TermDetail_not_in?: string[]
  TermDetail_lt?: string | null
  TermDetail_lte?: string | null
  TermDetail_gt?: string | null
  TermDetail_gte?: string | null
  TermDetail_contains?: string | null
  TermDetail_not_contains?: string | null
  TermDetail_starts_with?: string | null
  TermDetail_not_starts_with?: string | null
  TermDetail_ends_with?: string | null
  TermDetail_not_ends_with?: string | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  isPublished?: boolean | null
  isPublished_not?: boolean | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  category?: CategoryWhereInput | null
  shoppingCart?: ShoppingCartWhereInput | null
  order?: OrderWhereInput | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  relatedProduct_every?: ProductItemWhereInput | null
  relatedProduct_some?: ProductItemWhereInput | null
  relatedProduct_none?: ProductItemWhereInput | null
  AND?: ProductItemWhereInput[]
  OR?: ProductItemWhereInput[]
  NOT?: ProductItemWhereInput[]
}
export type ProductItemWhereInputInputObject =
  | Extract<keyof ProductItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'salePrice_not', alias?: string  } 
  | { name: 'salePrice_in', alias?: string  } 
  | { name: 'salePrice_not_in', alias?: string  } 
  | { name: 'salePrice_lt', alias?: string  } 
  | { name: 'salePrice_lte', alias?: string  } 
  | { name: 'salePrice_gt', alias?: string  } 
  | { name: 'salePrice_gte', alias?: string  } 
  | { name: 'salePrice_contains', alias?: string  } 
  | { name: 'salePrice_not_contains', alias?: string  } 
  | { name: 'salePrice_starts_with', alias?: string  } 
  | { name: 'salePrice_not_starts_with', alias?: string  } 
  | { name: 'salePrice_ends_with', alias?: string  } 
  | { name: 'salePrice_not_ends_with', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'brand_not', alias?: string  } 
  | { name: 'brand_in', alias?: string  } 
  | { name: 'brand_not_in', alias?: string  } 
  | { name: 'brand_lt', alias?: string  } 
  | { name: 'brand_lte', alias?: string  } 
  | { name: 'brand_gt', alias?: string  } 
  | { name: 'brand_gte', alias?: string  } 
  | { name: 'brand_contains', alias?: string  } 
  | { name: 'brand_not_contains', alias?: string  } 
  | { name: 'brand_starts_with', alias?: string  } 
  | { name: 'brand_not_starts_with', alias?: string  } 
  | { name: 'brand_ends_with', alias?: string  } 
  | { name: 'brand_not_ends_with', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'unitType_not', alias?: string  } 
  | { name: 'unitType_in', alias?: string  } 
  | { name: 'unitType_not_in', alias?: string  } 
  | { name: 'unitType_lt', alias?: string  } 
  | { name: 'unitType_lte', alias?: string  } 
  | { name: 'unitType_gt', alias?: string  } 
  | { name: 'unitType_gte', alias?: string  } 
  | { name: 'unitType_contains', alias?: string  } 
  | { name: 'unitType_not_contains', alias?: string  } 
  | { name: 'unitType_starts_with', alias?: string  } 
  | { name: 'unitType_not_starts_with', alias?: string  } 
  | { name: 'unitType_ends_with', alias?: string  } 
  | { name: 'unitType_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'MenuDetail_not', alias?: string  } 
  | { name: 'MenuDetail_in', alias?: string  } 
  | { name: 'MenuDetail_not_in', alias?: string  } 
  | { name: 'MenuDetail_lt', alias?: string  } 
  | { name: 'MenuDetail_lte', alias?: string  } 
  | { name: 'MenuDetail_gt', alias?: string  } 
  | { name: 'MenuDetail_gte', alias?: string  } 
  | { name: 'MenuDetail_contains', alias?: string  } 
  | { name: 'MenuDetail_not_contains', alias?: string  } 
  | { name: 'MenuDetail_starts_with', alias?: string  } 
  | { name: 'MenuDetail_not_starts_with', alias?: string  } 
  | { name: 'MenuDetail_ends_with', alias?: string  } 
  | { name: 'MenuDetail_not_ends_with', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'TermDetail_not', alias?: string  } 
  | { name: 'TermDetail_in', alias?: string  } 
  | { name: 'TermDetail_not_in', alias?: string  } 
  | { name: 'TermDetail_lt', alias?: string  } 
  | { name: 'TermDetail_lte', alias?: string  } 
  | { name: 'TermDetail_gt', alias?: string  } 
  | { name: 'TermDetail_gte', alias?: string  } 
  | { name: 'TermDetail_contains', alias?: string  } 
  | { name: 'TermDetail_not_contains', alias?: string  } 
  | { name: 'TermDetail_starts_with', alias?: string  } 
  | { name: 'TermDetail_not_starts_with', alias?: string  } 
  | { name: 'TermDetail_ends_with', alias?: string  } 
  | { name: 'TermDetail_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'isPublished_not', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'relatedProduct_every', alias?: string  } 
  | { name: 'relatedProduct_some', alias?: string  } 
  | { name: 'relatedProduct_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CategoryWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  productItem_every?: ProductItemWhereInput | null
  productItem_some?: ProductItemWhereInput | null
  productItem_none?: ProductItemWhereInput | null
  category?: CategoryWhereInput | null
  AND?: CategoryWhereInput[]
  OR?: CategoryWhereInput[]
  NOT?: CategoryWhereInput[]
}
export type CategoryWhereInputInputObject =
  | Extract<keyof CategoryWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'productItem_every', alias?: string  } 
  | { name: 'productItem_some', alias?: string  } 
  | { name: 'productItem_none', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ShoppingCartWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  total_cost?: number | null
  total_cost_not?: number | null
  total_cost_in?: number[]
  total_cost_not_in?: number[]
  total_cost_lt?: number | null
  total_cost_lte?: number | null
  total_cost_gt?: number | null
  total_cost_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  productItems_every?: ShoppingCartItemWhereInput | null
  productItems_some?: ShoppingCartItemWhereInput | null
  productItems_none?: ShoppingCartItemWhereInput | null
  customer?: UserWhereInput | null
  AND?: ShoppingCartWhereInput[]
  OR?: ShoppingCartWhereInput[]
  NOT?: ShoppingCartWhereInput[]
}
export type ShoppingCartWhereInputInputObject =
  | Extract<keyof ShoppingCartWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'total_cost', alias?: string  } 
  | { name: 'total_cost_not', alias?: string  } 
  | { name: 'total_cost_in', alias?: string  } 
  | { name: 'total_cost_not_in', alias?: string  } 
  | { name: 'total_cost_lt', alias?: string  } 
  | { name: 'total_cost_lte', alias?: string  } 
  | { name: 'total_cost_gt', alias?: string  } 
  | { name: 'total_cost_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'productItems_every', alias?: string  } 
  | { name: 'productItems_some', alias?: string  } 
  | { name: 'productItems_none', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  runningId?: number | null
  runningId_not?: number | null
  runningId_in?: number[]
  runningId_not_in?: number[]
  runningId_lt?: number | null
  runningId_lte?: number | null
  runningId_gt?: number | null
  runningId_gte?: number | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  avatar?: string | null
  avatar_not?: string | null
  avatar_in?: string[]
  avatar_not_in?: string[]
  avatar_lt?: string | null
  avatar_lte?: string | null
  avatar_gt?: string | null
  avatar_gte?: string | null
  avatar_contains?: string | null
  avatar_not_contains?: string | null
  avatar_starts_with?: string | null
  avatar_not_starts_with?: string | null
  avatar_ends_with?: string | null
  avatar_not_ends_with?: string | null
  activated?: boolean | null
  activated_not?: boolean | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  shoppingCart?: ShoppingCartWhereInput | null
  orders_every?: OrderWhereInput | null
  orders_some?: OrderWhereInput | null
  orders_none?: OrderWhereInput | null
  quotations_every?: QuotationWhereInput | null
  quotations_some?: QuotationWhereInput | null
  quotations_none?: QuotationWhereInput | null
  payments_every?: PaymentWhereInput | null
  payments_some?: PaymentWhereInput | null
  payments_none?: PaymentWhereInput | null
  addresses_every?: AddressWhereInput | null
  addresses_some?: AddressWhereInput | null
  addresses_none?: AddressWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'runningId', alias?: string  } 
  | { name: 'runningId_not', alias?: string  } 
  | { name: 'runningId_in', alias?: string  } 
  | { name: 'runningId_not_in', alias?: string  } 
  | { name: 'runningId_lt', alias?: string  } 
  | { name: 'runningId_lte', alias?: string  } 
  | { name: 'runningId_gt', alias?: string  } 
  | { name: 'runningId_gte', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'avatar_not', alias?: string  } 
  | { name: 'avatar_in', alias?: string  } 
  | { name: 'avatar_not_in', alias?: string  } 
  | { name: 'avatar_lt', alias?: string  } 
  | { name: 'avatar_lte', alias?: string  } 
  | { name: 'avatar_gt', alias?: string  } 
  | { name: 'avatar_gte', alias?: string  } 
  | { name: 'avatar_contains', alias?: string  } 
  | { name: 'avatar_not_contains', alias?: string  } 
  | { name: 'avatar_starts_with', alias?: string  } 
  | { name: 'avatar_not_starts_with', alias?: string  } 
  | { name: 'avatar_ends_with', alias?: string  } 
  | { name: 'avatar_not_ends_with', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'activated_not', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders_every', alias?: string  } 
  | { name: 'orders_some', alias?: string  } 
  | { name: 'orders_none', alias?: string  } 
  | { name: 'quotations_every', alias?: string  } 
  | { name: 'quotations_some', alias?: string  } 
  | { name: 'quotations_none', alias?: string  } 
  | { name: 'payments_every', alias?: string  } 
  | { name: 'payments_some', alias?: string  } 
  | { name: 'payments_none', alias?: string  } 
  | { name: 'addresses_every', alias?: string  } 
  | { name: 'addresses_some', alias?: string  } 
  | { name: 'addresses_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  orderItem_every?: OrderItemWhereInput | null
  orderItem_some?: OrderItemWhereInput | null
  orderItem_none?: OrderItemWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  salesman?: SalesmanWhereInput | null
  payment?: PaymentWhereInput | null
  shipping?: ShippingWhereInput | null
  customer?: UserWhereInput | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  quotation?: QuotationWhereInput | null
  AND?: OrderWhereInput[]
  OR?: OrderWhereInput[]
  NOT?: OrderWhereInput[]
}
export type OrderWhereInputInputObject =
  | Extract<keyof OrderWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'orderItem_every', alias?: string  } 
  | { name: 'orderItem_some', alias?: string  } 
  | { name: 'orderItem_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  product?: ProductItemWhereInput | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  realPrice?: number | null
  realPrice_not?: number | null
  realPrice_in?: number[]
  realPrice_not_in?: number[]
  realPrice_lt?: number | null
  realPrice_lte?: number | null
  realPrice_gt?: number | null
  realPrice_gte?: number | null
  order?: OrderWhereInput | null
  AND?: OrderItemWhereInput[]
  OR?: OrderItemWhereInput[]
  NOT?: OrderItemWhereInput[]
}
export type OrderItemWhereInputInputObject =
  | Extract<keyof OrderItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'realPrice_not', alias?: string  } 
  | { name: 'realPrice_in', alias?: string  } 
  | { name: 'realPrice_not_in', alias?: string  } 
  | { name: 'realPrice_lt', alias?: string  } 
  | { name: 'realPrice_lte', alias?: string  } 
  | { name: 'realPrice_gt', alias?: string  } 
  | { name: 'realPrice_gte', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SalesmanWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  payments_every?: PaymentWhereInput | null
  payments_some?: PaymentWhereInput | null
  payments_none?: PaymentWhereInput | null
  invoices_every?: InvoiceWhereInput | null
  invoices_some?: InvoiceWhereInput | null
  invoices_none?: InvoiceWhereInput | null
  orders_every?: OrderWhereInput | null
  orders_some?: OrderWhereInput | null
  orders_none?: OrderWhereInput | null
  AND?: SalesmanWhereInput[]
  OR?: SalesmanWhereInput[]
  NOT?: SalesmanWhereInput[]
}
export type SalesmanWhereInputInputObject =
  | Extract<keyof SalesmanWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'payments_every', alias?: string  } 
  | { name: 'payments_some', alias?: string  } 
  | { name: 'payments_none', alias?: string  } 
  | { name: 'invoices_every', alias?: string  } 
  | { name: 'invoices_some', alias?: string  } 
  | { name: 'invoices_none', alias?: string  } 
  | { name: 'orders_every', alias?: string  } 
  | { name: 'orders_some', alias?: string  } 
  | { name: 'orders_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  amount?: string | null
  amount_not?: string | null
  amount_in?: string[]
  amount_not_in?: string[]
  amount_lt?: string | null
  amount_lte?: string | null
  amount_gt?: string | null
  amount_gte?: string | null
  amount_contains?: string | null
  amount_not_contains?: string | null
  amount_starts_with?: string | null
  amount_not_starts_with?: string | null
  amount_ends_with?: string | null
  amount_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  customer?: UserWhereInput | null
  salesman?: SalesmanWhereInput | null
  order?: OrderWhereInput | null
  Invoice?: InvoiceWhereInput | null
  rawEvent?: string | null
  rawEvent_not?: string | null
  rawEvent_in?: string[]
  rawEvent_not_in?: string[]
  rawEvent_lt?: string | null
  rawEvent_lte?: string | null
  rawEvent_gt?: string | null
  rawEvent_gte?: string | null
  rawEvent_contains?: string | null
  rawEvent_not_contains?: string | null
  rawEvent_starts_with?: string | null
  rawEvent_not_starts_with?: string | null
  rawEvent_ends_with?: string | null
  rawEvent_not_ends_with?: string | null
  AND?: PaymentWhereInput[]
  OR?: PaymentWhereInput[]
  NOT?: PaymentWhereInput[]
}
export type PaymentWhereInputInputObject =
  | Extract<keyof PaymentWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'amount_contains', alias?: string  } 
  | { name: 'amount_not_contains', alias?: string  } 
  | { name: 'amount_starts_with', alias?: string  } 
  | { name: 'amount_not_starts_with', alias?: string  } 
  | { name: 'amount_ends_with', alias?: string  } 
  | { name: 'amount_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  | { name: 'rawEvent_not', alias?: string  } 
  | { name: 'rawEvent_in', alias?: string  } 
  | { name: 'rawEvent_not_in', alias?: string  } 
  | { name: 'rawEvent_lt', alias?: string  } 
  | { name: 'rawEvent_lte', alias?: string  } 
  | { name: 'rawEvent_gt', alias?: string  } 
  | { name: 'rawEvent_gte', alias?: string  } 
  | { name: 'rawEvent_contains', alias?: string  } 
  | { name: 'rawEvent_not_contains', alias?: string  } 
  | { name: 'rawEvent_starts_with', alias?: string  } 
  | { name: 'rawEvent_not_starts_with', alias?: string  } 
  | { name: 'rawEvent_ends_with', alias?: string  } 
  | { name: 'rawEvent_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InvoiceWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  creditTerm?: string | null
  creditTerm_not?: string | null
  creditTerm_in?: string[]
  creditTerm_not_in?: string[]
  creditTerm_lt?: string | null
  creditTerm_lte?: string | null
  creditTerm_gt?: string | null
  creditTerm_gte?: string | null
  creditTerm_contains?: string | null
  creditTerm_not_contains?: string | null
  creditTerm_starts_with?: string | null
  creditTerm_not_starts_with?: string | null
  creditTerm_ends_with?: string | null
  creditTerm_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  user?: UserWhereInput | null
  order?: OrderWhereInput | null
  salesman?: SalesmanWhereInput | null
  address?: AddressWhereInput | null
  payment?: PaymentWhereInput | null
  AND?: InvoiceWhereInput[]
  OR?: InvoiceWhereInput[]
  NOT?: InvoiceWhereInput[]
}
export type InvoiceWhereInputInputObject =
  | Extract<keyof InvoiceWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'creditTerm_not', alias?: string  } 
  | { name: 'creditTerm_in', alias?: string  } 
  | { name: 'creditTerm_not_in', alias?: string  } 
  | { name: 'creditTerm_lt', alias?: string  } 
  | { name: 'creditTerm_lte', alias?: string  } 
  | { name: 'creditTerm_gt', alias?: string  } 
  | { name: 'creditTerm_gte', alias?: string  } 
  | { name: 'creditTerm_contains', alias?: string  } 
  | { name: 'creditTerm_not_contains', alias?: string  } 
  | { name: 'creditTerm_starts_with', alias?: string  } 
  | { name: 'creditTerm_not_starts_with', alias?: string  } 
  | { name: 'creditTerm_ends_with', alias?: string  } 
  | { name: 'creditTerm_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AddressWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  Address?: string | null
  Address_not?: string | null
  Address_in?: string[]
  Address_not_in?: string[]
  Address_lt?: string | null
  Address_lte?: string | null
  Address_gt?: string | null
  Address_gte?: string | null
  Address_contains?: string | null
  Address_not_contains?: string | null
  Address_starts_with?: string | null
  Address_not_starts_with?: string | null
  Address_ends_with?: string | null
  Address_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  customer?: UserWhereInput | null
  invoices_every?: InvoiceWhereInput | null
  invoices_some?: InvoiceWhereInput | null
  invoices_none?: InvoiceWhereInput | null
  shipping_every?: ShippingWhereInput | null
  shipping_some?: ShippingWhereInput | null
  shipping_none?: ShippingWhereInput | null
  AND?: AddressWhereInput[]
  OR?: AddressWhereInput[]
  NOT?: AddressWhereInput[]
}
export type AddressWhereInputInputObject =
  | Extract<keyof AddressWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'Address_not', alias?: string  } 
  | { name: 'Address_in', alias?: string  } 
  | { name: 'Address_not_in', alias?: string  } 
  | { name: 'Address_lt', alias?: string  } 
  | { name: 'Address_lte', alias?: string  } 
  | { name: 'Address_gt', alias?: string  } 
  | { name: 'Address_gte', alias?: string  } 
  | { name: 'Address_contains', alias?: string  } 
  | { name: 'Address_not_contains', alias?: string  } 
  | { name: 'Address_starts_with', alias?: string  } 
  | { name: 'Address_not_starts_with', alias?: string  } 
  | { name: 'Address_ends_with', alias?: string  } 
  | { name: 'Address_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'invoices_every', alias?: string  } 
  | { name: 'invoices_some', alias?: string  } 
  | { name: 'invoices_none', alias?: string  } 
  | { name: 'shipping_every', alias?: string  } 
  | { name: 'shipping_some', alias?: string  } 
  | { name: 'shipping_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ShippingWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  dueDate?: string | null
  dueDate_not?: string | null
  dueDate_in?: string[]
  dueDate_not_in?: string[]
  dueDate_lt?: string | null
  dueDate_lte?: string | null
  dueDate_gt?: string | null
  dueDate_gte?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  invoce?: InvoiceWhereInput | null
  address?: AddressWhereInput | null
  order?: OrderWhereInput | null
  AND?: ShippingWhereInput[]
  OR?: ShippingWhereInput[]
  NOT?: ShippingWhereInput[]
}
export type ShippingWhereInputInputObject =
  | Extract<keyof ShippingWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'dueDate_not', alias?: string  } 
  | { name: 'dueDate_in', alias?: string  } 
  | { name: 'dueDate_not_in', alias?: string  } 
  | { name: 'dueDate_lt', alias?: string  } 
  | { name: 'dueDate_lte', alias?: string  } 
  | { name: 'dueDate_gt', alias?: string  } 
  | { name: 'dueDate_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'invoce', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QuotationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  quotationItems_every?: QuotationItemWhereInput | null
  quotationItems_some?: QuotationItemWhereInput | null
  quotationItems_none?: QuotationItemWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  customer?: UserWhereInput | null
  fileUrl?: string | null
  fileUrl_not?: string | null
  fileUrl_in?: string[]
  fileUrl_not_in?: string[]
  fileUrl_lt?: string | null
  fileUrl_lte?: string | null
  fileUrl_gt?: string | null
  fileUrl_gte?: string | null
  fileUrl_contains?: string | null
  fileUrl_not_contains?: string | null
  fileUrl_starts_with?: string | null
  fileUrl_not_starts_with?: string | null
  fileUrl_ends_with?: string | null
  fileUrl_not_ends_with?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  AND?: QuotationWhereInput[]
  OR?: QuotationWhereInput[]
  NOT?: QuotationWhereInput[]
}
export type QuotationWhereInputInputObject =
  | Extract<keyof QuotationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'quotationItems_every', alias?: string  } 
  | { name: 'quotationItems_some', alias?: string  } 
  | { name: 'quotationItems_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'fileUrl_not', alias?: string  } 
  | { name: 'fileUrl_in', alias?: string  } 
  | { name: 'fileUrl_not_in', alias?: string  } 
  | { name: 'fileUrl_lt', alias?: string  } 
  | { name: 'fileUrl_lte', alias?: string  } 
  | { name: 'fileUrl_gt', alias?: string  } 
  | { name: 'fileUrl_gte', alias?: string  } 
  | { name: 'fileUrl_contains', alias?: string  } 
  | { name: 'fileUrl_not_contains', alias?: string  } 
  | { name: 'fileUrl_starts_with', alias?: string  } 
  | { name: 'fileUrl_not_starts_with', alias?: string  } 
  | { name: 'fileUrl_ends_with', alias?: string  } 
  | { name: 'fileUrl_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QuotationItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  product?: ProductItemWhereInput | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  realPrice?: number | null
  realPrice_not?: number | null
  realPrice_in?: number[]
  realPrice_not_in?: number[]
  realPrice_lt?: number | null
  realPrice_lte?: number | null
  realPrice_gt?: number | null
  realPrice_gte?: number | null
  quotation?: QuotationWhereInput | null
  AND?: QuotationItemWhereInput[]
  OR?: QuotationItemWhereInput[]
  NOT?: QuotationItemWhereInput[]
}
export type QuotationItemWhereInputInputObject =
  | Extract<keyof QuotationItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'realPrice_not', alias?: string  } 
  | { name: 'realPrice_in', alias?: string  } 
  | { name: 'realPrice_not_in', alias?: string  } 
  | { name: 'realPrice_lt', alias?: string  } 
  | { name: 'realPrice_lte', alias?: string  } 
  | { name: 'realPrice_gt', alias?: string  } 
  | { name: 'realPrice_gte', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QuotationWhereUniqueInput {
  id?: string | null
}
export type QuotationWhereUniqueInputInputObject =
  | Extract<keyof QuotationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface QuotationItemWhereUniqueInput {
  id?: string | null
  key?: string | null
}
export type QuotationItemWhereUniqueInputInputObject =
  | Extract<keyof QuotationItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  
export interface AddressWhereUniqueInput {
  id?: string | null
}
export type AddressWhereUniqueInputInputObject =
  | Extract<keyof AddressWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PaymentWhereUniqueInput {
  id?: string | null
}
export type PaymentWhereUniqueInputInputObject =
  | Extract<keyof PaymentWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SalesmanWhereUniqueInput {
  id?: string | null
}
export type SalesmanWhereUniqueInputInputObject =
  | Extract<keyof SalesmanWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface InvoiceWhereUniqueInput {
  id?: string | null
}
export type InvoiceWhereUniqueInputInputObject =
  | Extract<keyof InvoiceWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ShippingWhereUniqueInput {
  id?: string | null
}
export type ShippingWhereUniqueInputInputObject =
  | Extract<keyof ShippingWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface CategoryWhereUniqueInput {
  id?: string | null
}
export type CategoryWhereUniqueInputInputObject =
  | Extract<keyof CategoryWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ProductItemWhereUniqueInput {
  id?: string | null
}
export type ProductItemWhereUniqueInputInputObject =
  | Extract<keyof ProductItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ShoppingCartItemWhereUniqueInput {
  id?: string | null
  key?: string | null
}
export type ShoppingCartItemWhereUniqueInputInputObject =
  | Extract<keyof ShoppingCartItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  
export interface ShoppingCartWhereUniqueInput {
  id?: string | null
}
export type ShoppingCartWhereUniqueInputInputObject =
  | Extract<keyof ShoppingCartWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrderItemWhereUniqueInput {
  id?: string | null
  key?: string | null
}
export type OrderItemWhereUniqueInputInputObject =
  | Extract<keyof OrderItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  
export interface OrderWhereUniqueInput {
  id?: string | null
}
export type OrderWhereUniqueInputInputObject =
  | Extract<keyof OrderWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  runningId?: number | null
  type?: string | null
  name?: string
  email?: string
  password?: string
  phone?: string
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartCreateOneWithoutCustomerInput
  orders?: OrderCreateManyWithoutCustomerInput | null
  quotations?: QuotationCreateManyWithoutCustomerInput | null
  payments?: PaymentCreateManyWithoutCustomerInput | null
  addresses?: AddressCreateManyWithoutCustomerInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface ShoppingCartCreateOneWithoutCustomerInput {
  create?: ShoppingCartCreateWithoutCustomerInput | null
  connect?: ShoppingCartWhereUniqueInput | null
}
export type ShoppingCartCreateOneWithoutCustomerInputInputObject =
  | Extract<keyof ShoppingCartCreateOneWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShoppingCartCreateWithoutCustomerInput {
  id?: string | null
  total_cost?: number
  productItems?: ShoppingCartItemCreateManyWithoutShoppingCartInput | null
}
export type ShoppingCartCreateWithoutCustomerInputInputObject =
  | Extract<keyof ShoppingCartCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'total_cost', alias?: string  } 
  | { name: 'productItems', alias?: string  } 
  
export interface ShoppingCartItemCreateManyWithoutShoppingCartInput {
  create?: ShoppingCartItemCreateWithoutShoppingCartInput[]
  connect?: ShoppingCartItemWhereUniqueInput[]
}
export type ShoppingCartItemCreateManyWithoutShoppingCartInputInputObject =
  | Extract<keyof ShoppingCartItemCreateManyWithoutShoppingCartInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShoppingCartItemCreateWithoutShoppingCartInput {
  id?: string | null
  key?: string
  product?: ProductItemCreateOneInput
  amount?: number
}
export type ShoppingCartItemCreateWithoutShoppingCartInputInputObject =
  | Extract<keyof ShoppingCartItemCreateWithoutShoppingCartInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  
export interface ProductItemCreateOneInput {
  create?: ProductItemCreateInput | null
  connect?: ProductItemWhereUniqueInput | null
}
export type ProductItemCreateOneInputInputObject =
  | Extract<keyof ProductItemCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProductItemCreateInput {
  id?: string | null
  name?: string
  price?: string
  salePrice?: string
  brand?: string
  unitType?: string
  description?: string | null
  MenuDetail?: string
  TermDetail?: string
  amount?: number
  isPublished?: boolean | null
  category?: CategoryCreateOneWithoutProductItemInput
  shoppingCart?: ShoppingCartCreateOneInput | null
  order?: OrderCreateOneInput | null
  image?: string | null
  relatedProduct?: ProductItemCreateManyInput | null
}
export type ProductItemCreateInputInputObject =
  | Extract<keyof ProductItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'relatedProduct', alias?: string  } 
  
export interface CategoryCreateOneWithoutProductItemInput {
  create?: CategoryCreateWithoutProductItemInput | null
  connect?: CategoryWhereUniqueInput | null
}
export type CategoryCreateOneWithoutProductItemInputInputObject =
  | Extract<keyof CategoryCreateOneWithoutProductItemInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CategoryCreateWithoutProductItemInput {
  id?: string | null
  name?: string
  category?: CategoryCreateOneInput | null
}
export type CategoryCreateWithoutProductItemInputInputObject =
  | Extract<keyof CategoryCreateWithoutProductItemInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface CategoryCreateOneInput {
  create?: CategoryCreateInput | null
  connect?: CategoryWhereUniqueInput | null
}
export type CategoryCreateOneInputInputObject =
  | Extract<keyof CategoryCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CategoryCreateInput {
  id?: string | null
  name?: string
  productItem?: ProductItemCreateManyWithoutCategoryInput | null
  category?: CategoryCreateOneInput | null
}
export type CategoryCreateInputInputObject =
  | Extract<keyof CategoryCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'productItem', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface ProductItemCreateManyWithoutCategoryInput {
  create?: ProductItemCreateWithoutCategoryInput[]
  connect?: ProductItemWhereUniqueInput[]
}
export type ProductItemCreateManyWithoutCategoryInputInputObject =
  | Extract<keyof ProductItemCreateManyWithoutCategoryInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProductItemCreateWithoutCategoryInput {
  id?: string | null
  name?: string
  price?: string
  salePrice?: string
  brand?: string
  unitType?: string
  description?: string | null
  MenuDetail?: string
  TermDetail?: string
  amount?: number
  isPublished?: boolean | null
  shoppingCart?: ShoppingCartCreateOneInput | null
  order?: OrderCreateOneInput | null
  image?: string | null
  relatedProduct?: ProductItemCreateManyInput | null
}
export type ProductItemCreateWithoutCategoryInputInputObject =
  | Extract<keyof ProductItemCreateWithoutCategoryInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'relatedProduct', alias?: string  } 
  
export interface ShoppingCartCreateOneInput {
  create?: ShoppingCartCreateInput | null
  connect?: ShoppingCartWhereUniqueInput | null
}
export type ShoppingCartCreateOneInputInputObject =
  | Extract<keyof ShoppingCartCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShoppingCartCreateInput {
  id?: string | null
  total_cost?: number
  productItems?: ShoppingCartItemCreateManyWithoutShoppingCartInput | null
  customer?: UserCreateOneWithoutShoppingCartInput
}
export type ShoppingCartCreateInputInputObject =
  | Extract<keyof ShoppingCartCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'total_cost', alias?: string  } 
  | { name: 'productItems', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface UserCreateOneWithoutShoppingCartInput {
  create?: UserCreateWithoutShoppingCartInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutShoppingCartInputInputObject =
  | Extract<keyof UserCreateOneWithoutShoppingCartInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutShoppingCartInput {
  id?: string | null
  runningId?: number | null
  type?: string | null
  name?: string
  email?: string
  password?: string
  phone?: string
  avatar?: string | null
  activated?: boolean | null
  orders?: OrderCreateManyWithoutCustomerInput | null
  quotations?: QuotationCreateManyWithoutCustomerInput | null
  payments?: PaymentCreateManyWithoutCustomerInput | null
  addresses?: AddressCreateManyWithoutCustomerInput | null
}
export type UserCreateWithoutShoppingCartInputInputObject =
  | Extract<keyof UserCreateWithoutShoppingCartInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface OrderCreateManyWithoutCustomerInput {
  create?: OrderCreateWithoutCustomerInput[]
  connect?: OrderWhereUniqueInput[]
}
export type OrderCreateManyWithoutCustomerInputInputObject =
  | Extract<keyof OrderCreateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutCustomerInput {
  id?: string | null
  docId?: string | null
  orderItem?: OrderItemCreateManyWithoutOrderInput | null
  salesman?: SalesmanCreateOneWithoutOrdersInput | null
  payment?: PaymentCreateOneWithoutOrderInput | null
  shipping?: ShippingCreateOneWithoutOrderInput | null
  status?: string | null
  quotation?: QuotationCreateOneInput | null
}
export type OrderCreateWithoutCustomerInputInputObject =
  | Extract<keyof OrderCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface OrderItemCreateManyWithoutOrderInput {
  create?: OrderItemCreateWithoutOrderInput[]
  connect?: OrderItemWhereUniqueInput[]
}
export type OrderItemCreateManyWithoutOrderInputInputObject =
  | Extract<keyof OrderItemCreateManyWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemCreateWithoutOrderInput {
  id?: string | null
  key?: string
  product?: ProductItemCreateOneInput
  amount?: number
  realPrice?: number
}
export type OrderItemCreateWithoutOrderInputInputObject =
  | Extract<keyof OrderItemCreateWithoutOrderInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface SalesmanCreateOneWithoutOrdersInput {
  create?: SalesmanCreateWithoutOrdersInput | null
  connect?: SalesmanWhereUniqueInput | null
}
export type SalesmanCreateOneWithoutOrdersInputInputObject =
  | Extract<keyof SalesmanCreateOneWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SalesmanCreateWithoutOrdersInput {
  id?: string | null
  name?: string
  email?: string
  phone?: string
  payments?: PaymentCreateManyWithoutSalesmanInput | null
  invoices?: InvoiceCreateManyWithoutSalesmanInput | null
}
export type SalesmanCreateWithoutOrdersInputInputObject =
  | Extract<keyof SalesmanCreateWithoutOrdersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  
export interface PaymentCreateManyWithoutSalesmanInput {
  create?: PaymentCreateWithoutSalesmanInput[]
  connect?: PaymentWhereUniqueInput[]
}
export type PaymentCreateManyWithoutSalesmanInputInputObject =
  | Extract<keyof PaymentCreateManyWithoutSalesmanInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentCreateWithoutSalesmanInput {
  id?: string | null
  docId?: string
  amount?: string
  customer?: UserCreateOneWithoutPaymentsInput
  order?: OrderCreateOneWithoutPaymentInput
  Invoice?: InvoiceCreateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentCreateWithoutSalesmanInputInputObject =
  | Extract<keyof PaymentCreateWithoutSalesmanInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface UserCreateOneWithoutPaymentsInput {
  create?: UserCreateWithoutPaymentsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutPaymentsInputInputObject =
  | Extract<keyof UserCreateOneWithoutPaymentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutPaymentsInput {
  id?: string | null
  runningId?: number | null
  type?: string | null
  name?: string
  email?: string
  password?: string
  phone?: string
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartCreateOneWithoutCustomerInput
  orders?: OrderCreateManyWithoutCustomerInput | null
  quotations?: QuotationCreateManyWithoutCustomerInput | null
  addresses?: AddressCreateManyWithoutCustomerInput | null
}
export type UserCreateWithoutPaymentsInputInputObject =
  | Extract<keyof UserCreateWithoutPaymentsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface QuotationCreateManyWithoutCustomerInput {
  create?: QuotationCreateWithoutCustomerInput[]
  connect?: QuotationWhereUniqueInput[]
}
export type QuotationCreateManyWithoutCustomerInputInputObject =
  | Extract<keyof QuotationCreateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QuotationCreateWithoutCustomerInput {
  id?: string | null
  docId?: string | null
  quotationItems?: QuotationItemCreateManyWithoutQuotationInput | null
  fileUrl?: string | null
  status?: string | null
}
export type QuotationCreateWithoutCustomerInputInputObject =
  | Extract<keyof QuotationCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'quotationItems', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface QuotationItemCreateManyWithoutQuotationInput {
  create?: QuotationItemCreateWithoutQuotationInput[]
  connect?: QuotationItemWhereUniqueInput[]
}
export type QuotationItemCreateManyWithoutQuotationInputInputObject =
  | Extract<keyof QuotationItemCreateManyWithoutQuotationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QuotationItemCreateWithoutQuotationInput {
  id?: string | null
  key?: string
  product?: ProductItemCreateOneInput
  amount?: number
  realPrice?: number
}
export type QuotationItemCreateWithoutQuotationInputInputObject =
  | Extract<keyof QuotationItemCreateWithoutQuotationInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface AddressCreateManyWithoutCustomerInput {
  create?: AddressCreateWithoutCustomerInput[]
  connect?: AddressWhereUniqueInput[]
}
export type AddressCreateManyWithoutCustomerInputInputObject =
  | Extract<keyof AddressCreateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AddressCreateWithoutCustomerInput {
  id?: string | null
  name?: string
  Address?: string
  invoices?: InvoiceCreateManyWithoutAddressInput | null
  shipping?: ShippingCreateManyWithoutAddressInput | null
}
export type AddressCreateWithoutCustomerInputInputObject =
  | Extract<keyof AddressCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  
export interface InvoiceCreateManyWithoutAddressInput {
  create?: InvoiceCreateWithoutAddressInput[]
  connect?: InvoiceWhereUniqueInput[]
}
export type InvoiceCreateManyWithoutAddressInputInputObject =
  | Extract<keyof InvoiceCreateManyWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InvoiceCreateWithoutAddressInput {
  id?: string | null
  docId?: string
  creditTerm?: string
  user?: UserCreateOneInput
  order?: OrderCreateOneInput
  salesman?: SalesmanCreateOneWithoutInvoicesInput
  payment?: PaymentCreateOneWithoutInvoiceInput | null
}
export type InvoiceCreateWithoutAddressInputInputObject =
  | Extract<keyof InvoiceCreateWithoutAddressInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  
export interface UserCreateOneInput {
  create?: UserCreateInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneInputInputObject =
  | Extract<keyof UserCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateOneInput {
  create?: OrderCreateInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderCreateOneInputInputObject =
  | Extract<keyof OrderCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateInput {
  id?: string | null
  docId?: string | null
  orderItem?: OrderItemCreateManyWithoutOrderInput | null
  salesman?: SalesmanCreateOneWithoutOrdersInput | null
  payment?: PaymentCreateOneWithoutOrderInput | null
  shipping?: ShippingCreateOneWithoutOrderInput | null
  customer?: UserCreateOneWithoutOrdersInput
  status?: string | null
  quotation?: QuotationCreateOneInput | null
}
export type OrderCreateInputInputObject =
  | Extract<keyof OrderCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface PaymentCreateOneWithoutOrderInput {
  create?: PaymentCreateWithoutOrderInput | null
  connect?: PaymentWhereUniqueInput | null
}
export type PaymentCreateOneWithoutOrderInputInputObject =
  | Extract<keyof PaymentCreateOneWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentCreateWithoutOrderInput {
  id?: string | null
  docId?: string
  amount?: string
  customer?: UserCreateOneWithoutPaymentsInput
  salesman?: SalesmanCreateOneWithoutPaymentsInput | null
  Invoice?: InvoiceCreateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentCreateWithoutOrderInputInputObject =
  | Extract<keyof PaymentCreateWithoutOrderInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface SalesmanCreateOneWithoutPaymentsInput {
  create?: SalesmanCreateWithoutPaymentsInput | null
  connect?: SalesmanWhereUniqueInput | null
}
export type SalesmanCreateOneWithoutPaymentsInputInputObject =
  | Extract<keyof SalesmanCreateOneWithoutPaymentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SalesmanCreateWithoutPaymentsInput {
  id?: string | null
  name?: string
  email?: string
  phone?: string
  invoices?: InvoiceCreateManyWithoutSalesmanInput | null
  orders?: OrderCreateManyWithoutSalesmanInput | null
}
export type SalesmanCreateWithoutPaymentsInputInputObject =
  | Extract<keyof SalesmanCreateWithoutPaymentsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface InvoiceCreateManyWithoutSalesmanInput {
  create?: InvoiceCreateWithoutSalesmanInput[]
  connect?: InvoiceWhereUniqueInput[]
}
export type InvoiceCreateManyWithoutSalesmanInputInputObject =
  | Extract<keyof InvoiceCreateManyWithoutSalesmanInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InvoiceCreateWithoutSalesmanInput {
  id?: string | null
  docId?: string
  creditTerm?: string
  user?: UserCreateOneInput
  order?: OrderCreateOneInput
  address?: AddressCreateOneWithoutInvoicesInput | null
  payment?: PaymentCreateOneWithoutInvoiceInput | null
}
export type InvoiceCreateWithoutSalesmanInputInputObject =
  | Extract<keyof InvoiceCreateWithoutSalesmanInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  
export interface AddressCreateOneWithoutInvoicesInput {
  create?: AddressCreateWithoutInvoicesInput | null
  connect?: AddressWhereUniqueInput | null
}
export type AddressCreateOneWithoutInvoicesInputInputObject =
  | Extract<keyof AddressCreateOneWithoutInvoicesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AddressCreateWithoutInvoicesInput {
  id?: string | null
  name?: string
  Address?: string
  customer?: UserCreateOneWithoutAddressesInput
  shipping?: ShippingCreateManyWithoutAddressInput | null
}
export type AddressCreateWithoutInvoicesInputInputObject =
  | Extract<keyof AddressCreateWithoutInvoicesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  
export interface UserCreateOneWithoutAddressesInput {
  create?: UserCreateWithoutAddressesInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutAddressesInputInputObject =
  | Extract<keyof UserCreateOneWithoutAddressesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutAddressesInput {
  id?: string | null
  runningId?: number | null
  type?: string | null
  name?: string
  email?: string
  password?: string
  phone?: string
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartCreateOneWithoutCustomerInput
  orders?: OrderCreateManyWithoutCustomerInput | null
  quotations?: QuotationCreateManyWithoutCustomerInput | null
  payments?: PaymentCreateManyWithoutCustomerInput | null
}
export type UserCreateWithoutAddressesInputInputObject =
  | Extract<keyof UserCreateWithoutAddressesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  
export interface PaymentCreateManyWithoutCustomerInput {
  create?: PaymentCreateWithoutCustomerInput[]
  connect?: PaymentWhereUniqueInput[]
}
export type PaymentCreateManyWithoutCustomerInputInputObject =
  | Extract<keyof PaymentCreateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentCreateWithoutCustomerInput {
  id?: string | null
  docId?: string
  amount?: string
  salesman?: SalesmanCreateOneWithoutPaymentsInput | null
  order?: OrderCreateOneWithoutPaymentInput
  Invoice?: InvoiceCreateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentCreateWithoutCustomerInputInputObject =
  | Extract<keyof PaymentCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface OrderCreateOneWithoutPaymentInput {
  create?: OrderCreateWithoutPaymentInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderCreateOneWithoutPaymentInputInputObject =
  | Extract<keyof OrderCreateOneWithoutPaymentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutPaymentInput {
  id?: string | null
  docId?: string | null
  orderItem?: OrderItemCreateManyWithoutOrderInput | null
  salesman?: SalesmanCreateOneWithoutOrdersInput | null
  shipping?: ShippingCreateOneWithoutOrderInput | null
  customer?: UserCreateOneWithoutOrdersInput
  status?: string | null
  quotation?: QuotationCreateOneInput | null
}
export type OrderCreateWithoutPaymentInputInputObject =
  | Extract<keyof OrderCreateWithoutPaymentInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface ShippingCreateOneWithoutOrderInput {
  create?: ShippingCreateWithoutOrderInput | null
  connect?: ShippingWhereUniqueInput | null
}
export type ShippingCreateOneWithoutOrderInputInputObject =
  | Extract<keyof ShippingCreateOneWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShippingCreateWithoutOrderInput {
  id?: string | null
  docId?: string
  dueDate?: string
  status?: string
  invoce?: InvoiceCreateOneInput
  address?: AddressCreateOneWithoutShippingInput
}
export type ShippingCreateWithoutOrderInputInputObject =
  | Extract<keyof ShippingCreateWithoutOrderInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'invoce', alias?: string  } 
  | { name: 'address', alias?: string  } 
  
export interface InvoiceCreateOneInput {
  create?: InvoiceCreateInput | null
  connect?: InvoiceWhereUniqueInput | null
}
export type InvoiceCreateOneInputInputObject =
  | Extract<keyof InvoiceCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InvoiceCreateInput {
  id?: string | null
  docId?: string
  creditTerm?: string
  user?: UserCreateOneInput
  order?: OrderCreateOneInput
  salesman?: SalesmanCreateOneWithoutInvoicesInput
  address?: AddressCreateOneWithoutInvoicesInput | null
  payment?: PaymentCreateOneWithoutInvoiceInput | null
}
export type InvoiceCreateInputInputObject =
  | Extract<keyof InvoiceCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  
export interface SalesmanCreateOneWithoutInvoicesInput {
  create?: SalesmanCreateWithoutInvoicesInput | null
  connect?: SalesmanWhereUniqueInput | null
}
export type SalesmanCreateOneWithoutInvoicesInputInputObject =
  | Extract<keyof SalesmanCreateOneWithoutInvoicesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SalesmanCreateWithoutInvoicesInput {
  id?: string | null
  name?: string
  email?: string
  phone?: string
  payments?: PaymentCreateManyWithoutSalesmanInput | null
  orders?: OrderCreateManyWithoutSalesmanInput | null
}
export type SalesmanCreateWithoutInvoicesInputInputObject =
  | Extract<keyof SalesmanCreateWithoutInvoicesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface OrderCreateManyWithoutSalesmanInput {
  create?: OrderCreateWithoutSalesmanInput[]
  connect?: OrderWhereUniqueInput[]
}
export type OrderCreateManyWithoutSalesmanInputInputObject =
  | Extract<keyof OrderCreateManyWithoutSalesmanInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutSalesmanInput {
  id?: string | null
  docId?: string | null
  orderItem?: OrderItemCreateManyWithoutOrderInput | null
  payment?: PaymentCreateOneWithoutOrderInput | null
  shipping?: ShippingCreateOneWithoutOrderInput | null
  customer?: UserCreateOneWithoutOrdersInput
  status?: string | null
  quotation?: QuotationCreateOneInput | null
}
export type OrderCreateWithoutSalesmanInputInputObject =
  | Extract<keyof OrderCreateWithoutSalesmanInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface UserCreateOneWithoutOrdersInput {
  create?: UserCreateWithoutOrdersInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutOrdersInputInputObject =
  | Extract<keyof UserCreateOneWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutOrdersInput {
  id?: string | null
  runningId?: number | null
  type?: string | null
  name?: string
  email?: string
  password?: string
  phone?: string
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartCreateOneWithoutCustomerInput
  quotations?: QuotationCreateManyWithoutCustomerInput | null
  payments?: PaymentCreateManyWithoutCustomerInput | null
  addresses?: AddressCreateManyWithoutCustomerInput | null
}
export type UserCreateWithoutOrdersInputInputObject =
  | Extract<keyof UserCreateWithoutOrdersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface QuotationCreateOneInput {
  create?: QuotationCreateInput | null
  connect?: QuotationWhereUniqueInput | null
}
export type QuotationCreateOneInputInputObject =
  | Extract<keyof QuotationCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QuotationCreateInput {
  id?: string | null
  docId?: string | null
  quotationItems?: QuotationItemCreateManyWithoutQuotationInput | null
  customer?: UserCreateOneWithoutQuotationsInput
  fileUrl?: string | null
  status?: string | null
}
export type QuotationCreateInputInputObject =
  | Extract<keyof QuotationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'quotationItems', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface UserCreateOneWithoutQuotationsInput {
  create?: UserCreateWithoutQuotationsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutQuotationsInputInputObject =
  | Extract<keyof UserCreateOneWithoutQuotationsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutQuotationsInput {
  id?: string | null
  runningId?: number | null
  type?: string | null
  name?: string
  email?: string
  password?: string
  phone?: string
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartCreateOneWithoutCustomerInput
  orders?: OrderCreateManyWithoutCustomerInput | null
  payments?: PaymentCreateManyWithoutCustomerInput | null
  addresses?: AddressCreateManyWithoutCustomerInput | null
}
export type UserCreateWithoutQuotationsInputInputObject =
  | Extract<keyof UserCreateWithoutQuotationsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface PaymentCreateOneWithoutInvoiceInput {
  create?: PaymentCreateWithoutInvoiceInput | null
  connect?: PaymentWhereUniqueInput | null
}
export type PaymentCreateOneWithoutInvoiceInputInputObject =
  | Extract<keyof PaymentCreateOneWithoutInvoiceInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentCreateWithoutInvoiceInput {
  id?: string | null
  docId?: string
  amount?: string
  customer?: UserCreateOneWithoutPaymentsInput
  salesman?: SalesmanCreateOneWithoutPaymentsInput | null
  order?: OrderCreateOneWithoutPaymentInput
  rawEvent?: string | null
}
export type PaymentCreateWithoutInvoiceInputInputObject =
  | Extract<keyof PaymentCreateWithoutInvoiceInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface AddressCreateOneWithoutShippingInput {
  create?: AddressCreateWithoutShippingInput | null
  connect?: AddressWhereUniqueInput | null
}
export type AddressCreateOneWithoutShippingInputInputObject =
  | Extract<keyof AddressCreateOneWithoutShippingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AddressCreateWithoutShippingInput {
  id?: string | null
  name?: string
  Address?: string
  customer?: UserCreateOneWithoutAddressesInput
  invoices?: InvoiceCreateManyWithoutAddressInput | null
}
export type AddressCreateWithoutShippingInputInputObject =
  | Extract<keyof AddressCreateWithoutShippingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  
export interface InvoiceCreateOneWithoutPaymentInput {
  create?: InvoiceCreateWithoutPaymentInput | null
  connect?: InvoiceWhereUniqueInput | null
}
export type InvoiceCreateOneWithoutPaymentInputInputObject =
  | Extract<keyof InvoiceCreateOneWithoutPaymentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InvoiceCreateWithoutPaymentInput {
  id?: string | null
  docId?: string
  creditTerm?: string
  user?: UserCreateOneInput
  order?: OrderCreateOneInput
  salesman?: SalesmanCreateOneWithoutInvoicesInput
  address?: AddressCreateOneWithoutInvoicesInput | null
}
export type InvoiceCreateWithoutPaymentInputInputObject =
  | Extract<keyof InvoiceCreateWithoutPaymentInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'address', alias?: string  } 
  
export interface ShippingCreateManyWithoutAddressInput {
  create?: ShippingCreateWithoutAddressInput[]
  connect?: ShippingWhereUniqueInput[]
}
export type ShippingCreateManyWithoutAddressInputInputObject =
  | Extract<keyof ShippingCreateManyWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShippingCreateWithoutAddressInput {
  id?: string | null
  docId?: string
  dueDate?: string
  status?: string
  invoce?: InvoiceCreateOneInput
  order?: OrderCreateOneWithoutShippingInput
}
export type ShippingCreateWithoutAddressInputInputObject =
  | Extract<keyof ShippingCreateWithoutAddressInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'invoce', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderCreateOneWithoutShippingInput {
  create?: OrderCreateWithoutShippingInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderCreateOneWithoutShippingInputInputObject =
  | Extract<keyof OrderCreateOneWithoutShippingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutShippingInput {
  id?: string | null
  docId?: string | null
  orderItem?: OrderItemCreateManyWithoutOrderInput | null
  salesman?: SalesmanCreateOneWithoutOrdersInput | null
  payment?: PaymentCreateOneWithoutOrderInput | null
  customer?: UserCreateOneWithoutOrdersInput
  status?: string | null
  quotation?: QuotationCreateOneInput | null
}
export type OrderCreateWithoutShippingInputInputObject =
  | Extract<keyof OrderCreateWithoutShippingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface ProductItemCreateManyInput {
  create?: ProductItemCreateInput[]
  connect?: ProductItemWhereUniqueInput[]
}
export type ProductItemCreateManyInputInputObject =
  | Extract<keyof ProductItemCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartUpdateOneRequiredWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
  quotations?: QuotationUpdateManyWithoutCustomerInput | null
  payments?: PaymentUpdateManyWithoutCustomerInput | null
  addresses?: AddressUpdateManyWithoutCustomerInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface ShoppingCartUpdateOneRequiredWithoutCustomerInput {
  create?: ShoppingCartCreateWithoutCustomerInput | null
  update?: ShoppingCartUpdateWithoutCustomerDataInput | null
  upsert?: ShoppingCartUpsertWithoutCustomerInput | null
  connect?: ShoppingCartWhereUniqueInput | null
}
export type ShoppingCartUpdateOneRequiredWithoutCustomerInputInputObject =
  | Extract<keyof ShoppingCartUpdateOneRequiredWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShoppingCartUpdateWithoutCustomerDataInput {
  total_cost?: number | null
  productItems?: ShoppingCartItemUpdateManyWithoutShoppingCartInput | null
}
export type ShoppingCartUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof ShoppingCartUpdateWithoutCustomerDataInput, string>
  | { name: 'total_cost', alias?: string  } 
  | { name: 'productItems', alias?: string  } 
  
export interface ShoppingCartItemUpdateManyWithoutShoppingCartInput {
  create?: ShoppingCartItemCreateWithoutShoppingCartInput[]
  delete?: ShoppingCartItemWhereUniqueInput[]
  connect?: ShoppingCartItemWhereUniqueInput[]
  set?: ShoppingCartItemWhereUniqueInput[]
  disconnect?: ShoppingCartItemWhereUniqueInput[]
  update?: ShoppingCartItemUpdateWithWhereUniqueWithoutShoppingCartInput[]
  upsert?: ShoppingCartItemUpsertWithWhereUniqueWithoutShoppingCartInput[]
  deleteMany?: ShoppingCartItemScalarWhereInput[]
  updateMany?: ShoppingCartItemUpdateManyWithWhereNestedInput[]
}
export type ShoppingCartItemUpdateManyWithoutShoppingCartInputInputObject =
  | Extract<keyof ShoppingCartItemUpdateManyWithoutShoppingCartInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ShoppingCartItemUpdateWithWhereUniqueWithoutShoppingCartInput {
  where?: ShoppingCartItemWhereUniqueInput
  data?: ShoppingCartItemUpdateWithoutShoppingCartDataInput
}
export type ShoppingCartItemUpdateWithWhereUniqueWithoutShoppingCartInputInputObject =
  | Extract<keyof ShoppingCartItemUpdateWithWhereUniqueWithoutShoppingCartInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ShoppingCartItemUpdateWithoutShoppingCartDataInput {
  key?: string | null
  product?: ProductItemUpdateOneRequiredInput | null
  amount?: number | null
}
export type ShoppingCartItemUpdateWithoutShoppingCartDataInputInputObject =
  | Extract<keyof ShoppingCartItemUpdateWithoutShoppingCartDataInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  
export interface ProductItemUpdateOneRequiredInput {
  create?: ProductItemCreateInput | null
  update?: ProductItemUpdateDataInput | null
  upsert?: ProductItemUpsertNestedInput | null
  connect?: ProductItemWhereUniqueInput | null
}
export type ProductItemUpdateOneRequiredInputInputObject =
  | Extract<keyof ProductItemUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProductItemUpdateDataInput {
  name?: string | null
  price?: string | null
  salePrice?: string | null
  brand?: string | null
  unitType?: string | null
  description?: string | null
  MenuDetail?: string | null
  TermDetail?: string | null
  amount?: number | null
  isPublished?: boolean | null
  category?: CategoryUpdateOneRequiredWithoutProductItemInput | null
  shoppingCart?: ShoppingCartUpdateOneInput | null
  order?: OrderUpdateOneInput | null
  image?: string | null
  relatedProduct?: ProductItemUpdateManyInput | null
}
export type ProductItemUpdateDataInputInputObject =
  | Extract<keyof ProductItemUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'relatedProduct', alias?: string  } 
  
export interface CategoryUpdateOneRequiredWithoutProductItemInput {
  create?: CategoryCreateWithoutProductItemInput | null
  update?: CategoryUpdateWithoutProductItemDataInput | null
  upsert?: CategoryUpsertWithoutProductItemInput | null
  connect?: CategoryWhereUniqueInput | null
}
export type CategoryUpdateOneRequiredWithoutProductItemInputInputObject =
  | Extract<keyof CategoryUpdateOneRequiredWithoutProductItemInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CategoryUpdateWithoutProductItemDataInput {
  name?: string | null
  category?: CategoryUpdateOneInput | null
}
export type CategoryUpdateWithoutProductItemDataInputInputObject =
  | Extract<keyof CategoryUpdateWithoutProductItemDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface CategoryUpdateOneInput {
  create?: CategoryCreateInput | null
  update?: CategoryUpdateDataInput | null
  upsert?: CategoryUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: CategoryWhereUniqueInput | null
}
export type CategoryUpdateOneInputInputObject =
  | Extract<keyof CategoryUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CategoryUpdateDataInput {
  name?: string | null
  productItem?: ProductItemUpdateManyWithoutCategoryInput | null
  category?: CategoryUpdateOneInput | null
}
export type CategoryUpdateDataInputInputObject =
  | Extract<keyof CategoryUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'productItem', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface ProductItemUpdateManyWithoutCategoryInput {
  create?: ProductItemCreateWithoutCategoryInput[]
  delete?: ProductItemWhereUniqueInput[]
  connect?: ProductItemWhereUniqueInput[]
  set?: ProductItemWhereUniqueInput[]
  disconnect?: ProductItemWhereUniqueInput[]
  update?: ProductItemUpdateWithWhereUniqueWithoutCategoryInput[]
  upsert?: ProductItemUpsertWithWhereUniqueWithoutCategoryInput[]
  deleteMany?: ProductItemScalarWhereInput[]
  updateMany?: ProductItemUpdateManyWithWhereNestedInput[]
}
export type ProductItemUpdateManyWithoutCategoryInputInputObject =
  | Extract<keyof ProductItemUpdateManyWithoutCategoryInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProductItemUpdateWithWhereUniqueWithoutCategoryInput {
  where?: ProductItemWhereUniqueInput
  data?: ProductItemUpdateWithoutCategoryDataInput
}
export type ProductItemUpdateWithWhereUniqueWithoutCategoryInputInputObject =
  | Extract<keyof ProductItemUpdateWithWhereUniqueWithoutCategoryInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProductItemUpdateWithoutCategoryDataInput {
  name?: string | null
  price?: string | null
  salePrice?: string | null
  brand?: string | null
  unitType?: string | null
  description?: string | null
  MenuDetail?: string | null
  TermDetail?: string | null
  amount?: number | null
  isPublished?: boolean | null
  shoppingCart?: ShoppingCartUpdateOneInput | null
  order?: OrderUpdateOneInput | null
  image?: string | null
  relatedProduct?: ProductItemUpdateManyInput | null
}
export type ProductItemUpdateWithoutCategoryDataInputInputObject =
  | Extract<keyof ProductItemUpdateWithoutCategoryDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'relatedProduct', alias?: string  } 
  
export interface ShoppingCartUpdateOneInput {
  create?: ShoppingCartCreateInput | null
  update?: ShoppingCartUpdateDataInput | null
  upsert?: ShoppingCartUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: ShoppingCartWhereUniqueInput | null
}
export type ShoppingCartUpdateOneInputInputObject =
  | Extract<keyof ShoppingCartUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShoppingCartUpdateDataInput {
  total_cost?: number | null
  productItems?: ShoppingCartItemUpdateManyWithoutShoppingCartInput | null
  customer?: UserUpdateOneRequiredWithoutShoppingCartInput | null
}
export type ShoppingCartUpdateDataInputInputObject =
  | Extract<keyof ShoppingCartUpdateDataInput, string>
  | { name: 'total_cost', alias?: string  } 
  | { name: 'productItems', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutShoppingCartInput {
  create?: UserCreateWithoutShoppingCartInput | null
  update?: UserUpdateWithoutShoppingCartDataInput | null
  upsert?: UserUpsertWithoutShoppingCartInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutShoppingCartInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutShoppingCartInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutShoppingCartDataInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
  quotations?: QuotationUpdateManyWithoutCustomerInput | null
  payments?: PaymentUpdateManyWithoutCustomerInput | null
  addresses?: AddressUpdateManyWithoutCustomerInput | null
}
export type UserUpdateWithoutShoppingCartDataInputInputObject =
  | Extract<keyof UserUpdateWithoutShoppingCartDataInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface OrderUpdateManyWithoutCustomerInput {
  create?: OrderCreateWithoutCustomerInput[]
  delete?: OrderWhereUniqueInput[]
  connect?: OrderWhereUniqueInput[]
  set?: OrderWhereUniqueInput[]
  disconnect?: OrderWhereUniqueInput[]
  update?: OrderUpdateWithWhereUniqueWithoutCustomerInput[]
  upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput[]
  deleteMany?: OrderScalarWhereInput[]
  updateMany?: OrderUpdateManyWithWhereNestedInput[]
}
export type OrderUpdateManyWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpdateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderUpdateWithWhereUniqueWithoutCustomerInput {
  where?: OrderWhereUniqueInput
  data?: OrderUpdateWithoutCustomerDataInput
}
export type OrderUpdateWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpdateWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateWithoutCustomerDataInput {
  docId?: string | null
  orderItem?: OrderItemUpdateManyWithoutOrderInput | null
  salesman?: SalesmanUpdateOneWithoutOrdersInput | null
  payment?: PaymentUpdateOneWithoutOrderInput | null
  shipping?: ShippingUpdateOneWithoutOrderInput | null
  status?: string | null
  quotation?: QuotationUpdateOneInput | null
}
export type OrderUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutCustomerDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface OrderItemUpdateManyWithoutOrderInput {
  create?: OrderItemCreateWithoutOrderInput[]
  delete?: OrderItemWhereUniqueInput[]
  connect?: OrderItemWhereUniqueInput[]
  set?: OrderItemWhereUniqueInput[]
  disconnect?: OrderItemWhereUniqueInput[]
  update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
  upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
  deleteMany?: OrderItemScalarWhereInput[]
  updateMany?: OrderItemUpdateManyWithWhereNestedInput[]
}
export type OrderItemUpdateManyWithoutOrderInputInputObject =
  | Extract<keyof OrderItemUpdateManyWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderItemUpdateWithWhereUniqueWithoutOrderInput {
  where?: OrderItemWhereUniqueInput
  data?: OrderItemUpdateWithoutOrderDataInput
}
export type OrderItemUpdateWithWhereUniqueWithoutOrderInputInputObject =
  | Extract<keyof OrderItemUpdateWithWhereUniqueWithoutOrderInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemUpdateWithoutOrderDataInput {
  key?: string | null
  product?: ProductItemUpdateOneRequiredInput | null
  amount?: number | null
  realPrice?: number | null
}
export type OrderItemUpdateWithoutOrderDataInputInputObject =
  | Extract<keyof OrderItemUpdateWithoutOrderDataInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface OrderItemUpsertWithWhereUniqueWithoutOrderInput {
  where?: OrderItemWhereUniqueInput
  update?: OrderItemUpdateWithoutOrderDataInput
  create?: OrderItemCreateWithoutOrderInput
}
export type OrderItemUpsertWithWhereUniqueWithoutOrderInputInputObject =
  | Extract<keyof OrderItemUpsertWithWhereUniqueWithoutOrderInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  realPrice?: number | null
  realPrice_not?: number | null
  realPrice_in?: number[]
  realPrice_not_in?: number[]
  realPrice_lt?: number | null
  realPrice_lte?: number | null
  realPrice_gt?: number | null
  realPrice_gte?: number | null
  AND?: OrderItemScalarWhereInput[]
  OR?: OrderItemScalarWhereInput[]
  NOT?: OrderItemScalarWhereInput[]
}
export type OrderItemScalarWhereInputInputObject =
  | Extract<keyof OrderItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'realPrice_not', alias?: string  } 
  | { name: 'realPrice_in', alias?: string  } 
  | { name: 'realPrice_not_in', alias?: string  } 
  | { name: 'realPrice_lt', alias?: string  } 
  | { name: 'realPrice_lte', alias?: string  } 
  | { name: 'realPrice_gt', alias?: string  } 
  | { name: 'realPrice_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemUpdateManyWithWhereNestedInput {
  where?: OrderItemScalarWhereInput
  data?: OrderItemUpdateManyDataInput
}
export type OrderItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemUpdateManyDataInput {
  key?: string | null
  amount?: number | null
  realPrice?: number | null
}
export type OrderItemUpdateManyDataInputInputObject =
  | Extract<keyof OrderItemUpdateManyDataInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface SalesmanUpdateOneWithoutOrdersInput {
  create?: SalesmanCreateWithoutOrdersInput | null
  update?: SalesmanUpdateWithoutOrdersDataInput | null
  upsert?: SalesmanUpsertWithoutOrdersInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SalesmanWhereUniqueInput | null
}
export type SalesmanUpdateOneWithoutOrdersInputInputObject =
  | Extract<keyof SalesmanUpdateOneWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SalesmanUpdateWithoutOrdersDataInput {
  name?: string | null
  email?: string | null
  phone?: string | null
  payments?: PaymentUpdateManyWithoutSalesmanInput | null
  invoices?: InvoiceUpdateManyWithoutSalesmanInput | null
}
export type SalesmanUpdateWithoutOrdersDataInputInputObject =
  | Extract<keyof SalesmanUpdateWithoutOrdersDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  
export interface PaymentUpdateManyWithoutSalesmanInput {
  create?: PaymentCreateWithoutSalesmanInput[]
  delete?: PaymentWhereUniqueInput[]
  connect?: PaymentWhereUniqueInput[]
  set?: PaymentWhereUniqueInput[]
  disconnect?: PaymentWhereUniqueInput[]
  update?: PaymentUpdateWithWhereUniqueWithoutSalesmanInput[]
  upsert?: PaymentUpsertWithWhereUniqueWithoutSalesmanInput[]
  deleteMany?: PaymentScalarWhereInput[]
  updateMany?: PaymentUpdateManyWithWhereNestedInput[]
}
export type PaymentUpdateManyWithoutSalesmanInputInputObject =
  | Extract<keyof PaymentUpdateManyWithoutSalesmanInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PaymentUpdateWithWhereUniqueWithoutSalesmanInput {
  where?: PaymentWhereUniqueInput
  data?: PaymentUpdateWithoutSalesmanDataInput
}
export type PaymentUpdateWithWhereUniqueWithoutSalesmanInputInputObject =
  | Extract<keyof PaymentUpdateWithWhereUniqueWithoutSalesmanInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PaymentUpdateWithoutSalesmanDataInput {
  docId?: string | null
  amount?: string | null
  customer?: UserUpdateOneRequiredWithoutPaymentsInput | null
  order?: OrderUpdateOneRequiredWithoutPaymentInput | null
  Invoice?: InvoiceUpdateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentUpdateWithoutSalesmanDataInputInputObject =
  | Extract<keyof PaymentUpdateWithoutSalesmanDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutPaymentsInput {
  create?: UserCreateWithoutPaymentsInput | null
  update?: UserUpdateWithoutPaymentsDataInput | null
  upsert?: UserUpsertWithoutPaymentsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutPaymentsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutPaymentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutPaymentsDataInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartUpdateOneRequiredWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
  quotations?: QuotationUpdateManyWithoutCustomerInput | null
  addresses?: AddressUpdateManyWithoutCustomerInput | null
}
export type UserUpdateWithoutPaymentsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutPaymentsDataInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface QuotationUpdateManyWithoutCustomerInput {
  create?: QuotationCreateWithoutCustomerInput[]
  delete?: QuotationWhereUniqueInput[]
  connect?: QuotationWhereUniqueInput[]
  set?: QuotationWhereUniqueInput[]
  disconnect?: QuotationWhereUniqueInput[]
  update?: QuotationUpdateWithWhereUniqueWithoutCustomerInput[]
  upsert?: QuotationUpsertWithWhereUniqueWithoutCustomerInput[]
  deleteMany?: QuotationScalarWhereInput[]
  updateMany?: QuotationUpdateManyWithWhereNestedInput[]
}
export type QuotationUpdateManyWithoutCustomerInputInputObject =
  | Extract<keyof QuotationUpdateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface QuotationUpdateWithWhereUniqueWithoutCustomerInput {
  where?: QuotationWhereUniqueInput
  data?: QuotationUpdateWithoutCustomerDataInput
}
export type QuotationUpdateWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof QuotationUpdateWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface QuotationUpdateWithoutCustomerDataInput {
  docId?: string | null
  quotationItems?: QuotationItemUpdateManyWithoutQuotationInput | null
  fileUrl?: string | null
  status?: string | null
}
export type QuotationUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof QuotationUpdateWithoutCustomerDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'quotationItems', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface QuotationItemUpdateManyWithoutQuotationInput {
  create?: QuotationItemCreateWithoutQuotationInput[]
  delete?: QuotationItemWhereUniqueInput[]
  connect?: QuotationItemWhereUniqueInput[]
  set?: QuotationItemWhereUniqueInput[]
  disconnect?: QuotationItemWhereUniqueInput[]
  update?: QuotationItemUpdateWithWhereUniqueWithoutQuotationInput[]
  upsert?: QuotationItemUpsertWithWhereUniqueWithoutQuotationInput[]
  deleteMany?: QuotationItemScalarWhereInput[]
  updateMany?: QuotationItemUpdateManyWithWhereNestedInput[]
}
export type QuotationItemUpdateManyWithoutQuotationInputInputObject =
  | Extract<keyof QuotationItemUpdateManyWithoutQuotationInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface QuotationItemUpdateWithWhereUniqueWithoutQuotationInput {
  where?: QuotationItemWhereUniqueInput
  data?: QuotationItemUpdateWithoutQuotationDataInput
}
export type QuotationItemUpdateWithWhereUniqueWithoutQuotationInputInputObject =
  | Extract<keyof QuotationItemUpdateWithWhereUniqueWithoutQuotationInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface QuotationItemUpdateWithoutQuotationDataInput {
  key?: string | null
  product?: ProductItemUpdateOneRequiredInput | null
  amount?: number | null
  realPrice?: number | null
}
export type QuotationItemUpdateWithoutQuotationDataInputInputObject =
  | Extract<keyof QuotationItemUpdateWithoutQuotationDataInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface QuotationItemUpsertWithWhereUniqueWithoutQuotationInput {
  where?: QuotationItemWhereUniqueInput
  update?: QuotationItemUpdateWithoutQuotationDataInput
  create?: QuotationItemCreateWithoutQuotationInput
}
export type QuotationItemUpsertWithWhereUniqueWithoutQuotationInputInputObject =
  | Extract<keyof QuotationItemUpsertWithWhereUniqueWithoutQuotationInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface QuotationItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  realPrice?: number | null
  realPrice_not?: number | null
  realPrice_in?: number[]
  realPrice_not_in?: number[]
  realPrice_lt?: number | null
  realPrice_lte?: number | null
  realPrice_gt?: number | null
  realPrice_gte?: number | null
  AND?: QuotationItemScalarWhereInput[]
  OR?: QuotationItemScalarWhereInput[]
  NOT?: QuotationItemScalarWhereInput[]
}
export type QuotationItemScalarWhereInputInputObject =
  | Extract<keyof QuotationItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'realPrice_not', alias?: string  } 
  | { name: 'realPrice_in', alias?: string  } 
  | { name: 'realPrice_not_in', alias?: string  } 
  | { name: 'realPrice_lt', alias?: string  } 
  | { name: 'realPrice_lte', alias?: string  } 
  | { name: 'realPrice_gt', alias?: string  } 
  | { name: 'realPrice_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QuotationItemUpdateManyWithWhereNestedInput {
  where?: QuotationItemScalarWhereInput
  data?: QuotationItemUpdateManyDataInput
}
export type QuotationItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof QuotationItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface QuotationItemUpdateManyDataInput {
  key?: string | null
  amount?: number | null
  realPrice?: number | null
}
export type QuotationItemUpdateManyDataInputInputObject =
  | Extract<keyof QuotationItemUpdateManyDataInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface QuotationUpsertWithWhereUniqueWithoutCustomerInput {
  where?: QuotationWhereUniqueInput
  update?: QuotationUpdateWithoutCustomerDataInput
  create?: QuotationCreateWithoutCustomerInput
}
export type QuotationUpsertWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof QuotationUpsertWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface QuotationScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  fileUrl?: string | null
  fileUrl_not?: string | null
  fileUrl_in?: string[]
  fileUrl_not_in?: string[]
  fileUrl_lt?: string | null
  fileUrl_lte?: string | null
  fileUrl_gt?: string | null
  fileUrl_gte?: string | null
  fileUrl_contains?: string | null
  fileUrl_not_contains?: string | null
  fileUrl_starts_with?: string | null
  fileUrl_not_starts_with?: string | null
  fileUrl_ends_with?: string | null
  fileUrl_not_ends_with?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  AND?: QuotationScalarWhereInput[]
  OR?: QuotationScalarWhereInput[]
  NOT?: QuotationScalarWhereInput[]
}
export type QuotationScalarWhereInputInputObject =
  | Extract<keyof QuotationScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'fileUrl_not', alias?: string  } 
  | { name: 'fileUrl_in', alias?: string  } 
  | { name: 'fileUrl_not_in', alias?: string  } 
  | { name: 'fileUrl_lt', alias?: string  } 
  | { name: 'fileUrl_lte', alias?: string  } 
  | { name: 'fileUrl_gt', alias?: string  } 
  | { name: 'fileUrl_gte', alias?: string  } 
  | { name: 'fileUrl_contains', alias?: string  } 
  | { name: 'fileUrl_not_contains', alias?: string  } 
  | { name: 'fileUrl_starts_with', alias?: string  } 
  | { name: 'fileUrl_not_starts_with', alias?: string  } 
  | { name: 'fileUrl_ends_with', alias?: string  } 
  | { name: 'fileUrl_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QuotationUpdateManyWithWhereNestedInput {
  where?: QuotationScalarWhereInput
  data?: QuotationUpdateManyDataInput
}
export type QuotationUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof QuotationUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface QuotationUpdateManyDataInput {
  docId?: string | null
  fileUrl?: string | null
  status?: string | null
}
export type QuotationUpdateManyDataInputInputObject =
  | Extract<keyof QuotationUpdateManyDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface AddressUpdateManyWithoutCustomerInput {
  create?: AddressCreateWithoutCustomerInput[]
  delete?: AddressWhereUniqueInput[]
  connect?: AddressWhereUniqueInput[]
  set?: AddressWhereUniqueInput[]
  disconnect?: AddressWhereUniqueInput[]
  update?: AddressUpdateWithWhereUniqueWithoutCustomerInput[]
  upsert?: AddressUpsertWithWhereUniqueWithoutCustomerInput[]
  deleteMany?: AddressScalarWhereInput[]
  updateMany?: AddressUpdateManyWithWhereNestedInput[]
}
export type AddressUpdateManyWithoutCustomerInputInputObject =
  | Extract<keyof AddressUpdateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface AddressUpdateWithWhereUniqueWithoutCustomerInput {
  where?: AddressWhereUniqueInput
  data?: AddressUpdateWithoutCustomerDataInput
}
export type AddressUpdateWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof AddressUpdateWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface AddressUpdateWithoutCustomerDataInput {
  name?: string | null
  Address?: string | null
  invoices?: InvoiceUpdateManyWithoutAddressInput | null
  shipping?: ShippingUpdateManyWithoutAddressInput | null
}
export type AddressUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof AddressUpdateWithoutCustomerDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  
export interface InvoiceUpdateManyWithoutAddressInput {
  create?: InvoiceCreateWithoutAddressInput[]
  delete?: InvoiceWhereUniqueInput[]
  connect?: InvoiceWhereUniqueInput[]
  set?: InvoiceWhereUniqueInput[]
  disconnect?: InvoiceWhereUniqueInput[]
  update?: InvoiceUpdateWithWhereUniqueWithoutAddressInput[]
  upsert?: InvoiceUpsertWithWhereUniqueWithoutAddressInput[]
  deleteMany?: InvoiceScalarWhereInput[]
  updateMany?: InvoiceUpdateManyWithWhereNestedInput[]
}
export type InvoiceUpdateManyWithoutAddressInputInputObject =
  | Extract<keyof InvoiceUpdateManyWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface InvoiceUpdateWithWhereUniqueWithoutAddressInput {
  where?: InvoiceWhereUniqueInput
  data?: InvoiceUpdateWithoutAddressDataInput
}
export type InvoiceUpdateWithWhereUniqueWithoutAddressInputInputObject =
  | Extract<keyof InvoiceUpdateWithWhereUniqueWithoutAddressInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface InvoiceUpdateWithoutAddressDataInput {
  docId?: string | null
  creditTerm?: string | null
  user?: UserUpdateOneRequiredInput | null
  order?: OrderUpdateOneRequiredInput | null
  salesman?: SalesmanUpdateOneRequiredWithoutInvoicesInput | null
  payment?: PaymentUpdateOneWithoutInvoiceInput | null
}
export type InvoiceUpdateWithoutAddressDataInputInputObject =
  | Extract<keyof InvoiceUpdateWithoutAddressDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  
export interface UserUpdateOneRequiredInput {
  create?: UserCreateInput | null
  update?: UserUpdateDataInput | null
  upsert?: UserUpsertNestedInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredInputInputObject =
  | Extract<keyof UserUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateDataInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartUpdateOneRequiredWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
  quotations?: QuotationUpdateManyWithoutCustomerInput | null
  payments?: PaymentUpdateManyWithoutCustomerInput | null
  addresses?: AddressUpdateManyWithoutCustomerInput | null
}
export type UserUpdateDataInputInputObject =
  | Extract<keyof UserUpdateDataInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface PaymentUpdateManyWithoutCustomerInput {
  create?: PaymentCreateWithoutCustomerInput[]
  delete?: PaymentWhereUniqueInput[]
  connect?: PaymentWhereUniqueInput[]
  set?: PaymentWhereUniqueInput[]
  disconnect?: PaymentWhereUniqueInput[]
  update?: PaymentUpdateWithWhereUniqueWithoutCustomerInput[]
  upsert?: PaymentUpsertWithWhereUniqueWithoutCustomerInput[]
  deleteMany?: PaymentScalarWhereInput[]
  updateMany?: PaymentUpdateManyWithWhereNestedInput[]
}
export type PaymentUpdateManyWithoutCustomerInputInputObject =
  | Extract<keyof PaymentUpdateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PaymentUpdateWithWhereUniqueWithoutCustomerInput {
  where?: PaymentWhereUniqueInput
  data?: PaymentUpdateWithoutCustomerDataInput
}
export type PaymentUpdateWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof PaymentUpdateWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PaymentUpdateWithoutCustomerDataInput {
  docId?: string | null
  amount?: string | null
  salesman?: SalesmanUpdateOneWithoutPaymentsInput | null
  order?: OrderUpdateOneRequiredWithoutPaymentInput | null
  Invoice?: InvoiceUpdateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof PaymentUpdateWithoutCustomerDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface SalesmanUpdateOneWithoutPaymentsInput {
  create?: SalesmanCreateWithoutPaymentsInput | null
  update?: SalesmanUpdateWithoutPaymentsDataInput | null
  upsert?: SalesmanUpsertWithoutPaymentsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SalesmanWhereUniqueInput | null
}
export type SalesmanUpdateOneWithoutPaymentsInputInputObject =
  | Extract<keyof SalesmanUpdateOneWithoutPaymentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SalesmanUpdateWithoutPaymentsDataInput {
  name?: string | null
  email?: string | null
  phone?: string | null
  invoices?: InvoiceUpdateManyWithoutSalesmanInput | null
  orders?: OrderUpdateManyWithoutSalesmanInput | null
}
export type SalesmanUpdateWithoutPaymentsDataInputInputObject =
  | Extract<keyof SalesmanUpdateWithoutPaymentsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface InvoiceUpdateManyWithoutSalesmanInput {
  create?: InvoiceCreateWithoutSalesmanInput[]
  delete?: InvoiceWhereUniqueInput[]
  connect?: InvoiceWhereUniqueInput[]
  set?: InvoiceWhereUniqueInput[]
  disconnect?: InvoiceWhereUniqueInput[]
  update?: InvoiceUpdateWithWhereUniqueWithoutSalesmanInput[]
  upsert?: InvoiceUpsertWithWhereUniqueWithoutSalesmanInput[]
  deleteMany?: InvoiceScalarWhereInput[]
  updateMany?: InvoiceUpdateManyWithWhereNestedInput[]
}
export type InvoiceUpdateManyWithoutSalesmanInputInputObject =
  | Extract<keyof InvoiceUpdateManyWithoutSalesmanInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface InvoiceUpdateWithWhereUniqueWithoutSalesmanInput {
  where?: InvoiceWhereUniqueInput
  data?: InvoiceUpdateWithoutSalesmanDataInput
}
export type InvoiceUpdateWithWhereUniqueWithoutSalesmanInputInputObject =
  | Extract<keyof InvoiceUpdateWithWhereUniqueWithoutSalesmanInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface InvoiceUpdateWithoutSalesmanDataInput {
  docId?: string | null
  creditTerm?: string | null
  user?: UserUpdateOneRequiredInput | null
  order?: OrderUpdateOneRequiredInput | null
  address?: AddressUpdateOneWithoutInvoicesInput | null
  payment?: PaymentUpdateOneWithoutInvoiceInput | null
}
export type InvoiceUpdateWithoutSalesmanDataInputInputObject =
  | Extract<keyof InvoiceUpdateWithoutSalesmanDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  
export interface OrderUpdateOneRequiredInput {
  create?: OrderCreateInput | null
  update?: OrderUpdateDataInput | null
  upsert?: OrderUpsertNestedInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderUpdateOneRequiredInputInputObject =
  | Extract<keyof OrderUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderUpdateDataInput {
  docId?: string | null
  orderItem?: OrderItemUpdateManyWithoutOrderInput | null
  salesman?: SalesmanUpdateOneWithoutOrdersInput | null
  payment?: PaymentUpdateOneWithoutOrderInput | null
  shipping?: ShippingUpdateOneWithoutOrderInput | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  status?: string | null
  quotation?: QuotationUpdateOneInput | null
}
export type OrderUpdateDataInputInputObject =
  | Extract<keyof OrderUpdateDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface PaymentUpdateOneWithoutOrderInput {
  create?: PaymentCreateWithoutOrderInput | null
  update?: PaymentUpdateWithoutOrderDataInput | null
  upsert?: PaymentUpsertWithoutOrderInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PaymentWhereUniqueInput | null
}
export type PaymentUpdateOneWithoutOrderInputInputObject =
  | Extract<keyof PaymentUpdateOneWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentUpdateWithoutOrderDataInput {
  docId?: string | null
  amount?: string | null
  customer?: UserUpdateOneRequiredWithoutPaymentsInput | null
  salesman?: SalesmanUpdateOneWithoutPaymentsInput | null
  Invoice?: InvoiceUpdateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentUpdateWithoutOrderDataInputInputObject =
  | Extract<keyof PaymentUpdateWithoutOrderDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface InvoiceUpdateOneWithoutPaymentInput {
  create?: InvoiceCreateWithoutPaymentInput | null
  update?: InvoiceUpdateWithoutPaymentDataInput | null
  upsert?: InvoiceUpsertWithoutPaymentInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: InvoiceWhereUniqueInput | null
}
export type InvoiceUpdateOneWithoutPaymentInputInputObject =
  | Extract<keyof InvoiceUpdateOneWithoutPaymentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InvoiceUpdateWithoutPaymentDataInput {
  docId?: string | null
  creditTerm?: string | null
  user?: UserUpdateOneRequiredInput | null
  order?: OrderUpdateOneRequiredInput | null
  salesman?: SalesmanUpdateOneRequiredWithoutInvoicesInput | null
  address?: AddressUpdateOneWithoutInvoicesInput | null
}
export type InvoiceUpdateWithoutPaymentDataInputInputObject =
  | Extract<keyof InvoiceUpdateWithoutPaymentDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'address', alias?: string  } 
  
export interface SalesmanUpdateOneRequiredWithoutInvoicesInput {
  create?: SalesmanCreateWithoutInvoicesInput | null
  update?: SalesmanUpdateWithoutInvoicesDataInput | null
  upsert?: SalesmanUpsertWithoutInvoicesInput | null
  connect?: SalesmanWhereUniqueInput | null
}
export type SalesmanUpdateOneRequiredWithoutInvoicesInputInputObject =
  | Extract<keyof SalesmanUpdateOneRequiredWithoutInvoicesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SalesmanUpdateWithoutInvoicesDataInput {
  name?: string | null
  email?: string | null
  phone?: string | null
  payments?: PaymentUpdateManyWithoutSalesmanInput | null
  orders?: OrderUpdateManyWithoutSalesmanInput | null
}
export type SalesmanUpdateWithoutInvoicesDataInputInputObject =
  | Extract<keyof SalesmanUpdateWithoutInvoicesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface OrderUpdateManyWithoutSalesmanInput {
  create?: OrderCreateWithoutSalesmanInput[]
  delete?: OrderWhereUniqueInput[]
  connect?: OrderWhereUniqueInput[]
  set?: OrderWhereUniqueInput[]
  disconnect?: OrderWhereUniqueInput[]
  update?: OrderUpdateWithWhereUniqueWithoutSalesmanInput[]
  upsert?: OrderUpsertWithWhereUniqueWithoutSalesmanInput[]
  deleteMany?: OrderScalarWhereInput[]
  updateMany?: OrderUpdateManyWithWhereNestedInput[]
}
export type OrderUpdateManyWithoutSalesmanInputInputObject =
  | Extract<keyof OrderUpdateManyWithoutSalesmanInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderUpdateWithWhereUniqueWithoutSalesmanInput {
  where?: OrderWhereUniqueInput
  data?: OrderUpdateWithoutSalesmanDataInput
}
export type OrderUpdateWithWhereUniqueWithoutSalesmanInputInputObject =
  | Extract<keyof OrderUpdateWithWhereUniqueWithoutSalesmanInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateWithoutSalesmanDataInput {
  docId?: string | null
  orderItem?: OrderItemUpdateManyWithoutOrderInput | null
  payment?: PaymentUpdateOneWithoutOrderInput | null
  shipping?: ShippingUpdateOneWithoutOrderInput | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  status?: string | null
  quotation?: QuotationUpdateOneInput | null
}
export type OrderUpdateWithoutSalesmanDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutSalesmanDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface ShippingUpdateOneWithoutOrderInput {
  create?: ShippingCreateWithoutOrderInput | null
  update?: ShippingUpdateWithoutOrderDataInput | null
  upsert?: ShippingUpsertWithoutOrderInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: ShippingWhereUniqueInput | null
}
export type ShippingUpdateOneWithoutOrderInputInputObject =
  | Extract<keyof ShippingUpdateOneWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShippingUpdateWithoutOrderDataInput {
  docId?: string | null
  dueDate?: string | null
  status?: string | null
  invoce?: InvoiceUpdateOneRequiredInput | null
  address?: AddressUpdateOneRequiredWithoutShippingInput | null
}
export type ShippingUpdateWithoutOrderDataInputInputObject =
  | Extract<keyof ShippingUpdateWithoutOrderDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'invoce', alias?: string  } 
  | { name: 'address', alias?: string  } 
  
export interface InvoiceUpdateOneRequiredInput {
  create?: InvoiceCreateInput | null
  update?: InvoiceUpdateDataInput | null
  upsert?: InvoiceUpsertNestedInput | null
  connect?: InvoiceWhereUniqueInput | null
}
export type InvoiceUpdateOneRequiredInputInputObject =
  | Extract<keyof InvoiceUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface InvoiceUpdateDataInput {
  docId?: string | null
  creditTerm?: string | null
  user?: UserUpdateOneRequiredInput | null
  order?: OrderUpdateOneRequiredInput | null
  salesman?: SalesmanUpdateOneRequiredWithoutInvoicesInput | null
  address?: AddressUpdateOneWithoutInvoicesInput | null
  payment?: PaymentUpdateOneWithoutInvoiceInput | null
}
export type InvoiceUpdateDataInputInputObject =
  | Extract<keyof InvoiceUpdateDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  
export interface AddressUpdateOneWithoutInvoicesInput {
  create?: AddressCreateWithoutInvoicesInput | null
  update?: AddressUpdateWithoutInvoicesDataInput | null
  upsert?: AddressUpsertWithoutInvoicesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: AddressWhereUniqueInput | null
}
export type AddressUpdateOneWithoutInvoicesInputInputObject =
  | Extract<keyof AddressUpdateOneWithoutInvoicesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AddressUpdateWithoutInvoicesDataInput {
  name?: string | null
  Address?: string | null
  customer?: UserUpdateOneRequiredWithoutAddressesInput | null
  shipping?: ShippingUpdateManyWithoutAddressInput | null
}
export type AddressUpdateWithoutInvoicesDataInputInputObject =
  | Extract<keyof AddressUpdateWithoutInvoicesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutAddressesInput {
  create?: UserCreateWithoutAddressesInput | null
  update?: UserUpdateWithoutAddressesDataInput | null
  upsert?: UserUpsertWithoutAddressesInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutAddressesInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutAddressesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutAddressesDataInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartUpdateOneRequiredWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
  quotations?: QuotationUpdateManyWithoutCustomerInput | null
  payments?: PaymentUpdateManyWithoutCustomerInput | null
}
export type UserUpdateWithoutAddressesDataInputInputObject =
  | Extract<keyof UserUpdateWithoutAddressesDataInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  
export interface UserUpsertWithoutAddressesInput {
  update?: UserUpdateWithoutAddressesDataInput
  create?: UserCreateWithoutAddressesInput
}
export type UserUpsertWithoutAddressesInputInputObject =
  | Extract<keyof UserUpsertWithoutAddressesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShippingUpdateManyWithoutAddressInput {
  create?: ShippingCreateWithoutAddressInput[]
  delete?: ShippingWhereUniqueInput[]
  connect?: ShippingWhereUniqueInput[]
  set?: ShippingWhereUniqueInput[]
  disconnect?: ShippingWhereUniqueInput[]
  update?: ShippingUpdateWithWhereUniqueWithoutAddressInput[]
  upsert?: ShippingUpsertWithWhereUniqueWithoutAddressInput[]
  deleteMany?: ShippingScalarWhereInput[]
  updateMany?: ShippingUpdateManyWithWhereNestedInput[]
}
export type ShippingUpdateManyWithoutAddressInputInputObject =
  | Extract<keyof ShippingUpdateManyWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ShippingUpdateWithWhereUniqueWithoutAddressInput {
  where?: ShippingWhereUniqueInput
  data?: ShippingUpdateWithoutAddressDataInput
}
export type ShippingUpdateWithWhereUniqueWithoutAddressInputInputObject =
  | Extract<keyof ShippingUpdateWithWhereUniqueWithoutAddressInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ShippingUpdateWithoutAddressDataInput {
  docId?: string | null
  dueDate?: string | null
  status?: string | null
  invoce?: InvoiceUpdateOneRequiredInput | null
  order?: OrderUpdateOneRequiredWithoutShippingInput | null
}
export type ShippingUpdateWithoutAddressDataInputInputObject =
  | Extract<keyof ShippingUpdateWithoutAddressDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'invoce', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderUpdateOneRequiredWithoutShippingInput {
  create?: OrderCreateWithoutShippingInput | null
  update?: OrderUpdateWithoutShippingDataInput | null
  upsert?: OrderUpsertWithoutShippingInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderUpdateOneRequiredWithoutShippingInputInputObject =
  | Extract<keyof OrderUpdateOneRequiredWithoutShippingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderUpdateWithoutShippingDataInput {
  docId?: string | null
  orderItem?: OrderItemUpdateManyWithoutOrderInput | null
  salesman?: SalesmanUpdateOneWithoutOrdersInput | null
  payment?: PaymentUpdateOneWithoutOrderInput | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  status?: string | null
  quotation?: QuotationUpdateOneInput | null
}
export type OrderUpdateWithoutShippingDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutShippingDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutOrdersInput {
  create?: UserCreateWithoutOrdersInput | null
  update?: UserUpdateWithoutOrdersDataInput | null
  upsert?: UserUpsertWithoutOrdersInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutOrdersInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutOrdersDataInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartUpdateOneRequiredWithoutCustomerInput | null
  quotations?: QuotationUpdateManyWithoutCustomerInput | null
  payments?: PaymentUpdateManyWithoutCustomerInput | null
  addresses?: AddressUpdateManyWithoutCustomerInput | null
}
export type UserUpdateWithoutOrdersDataInputInputObject =
  | Extract<keyof UserUpdateWithoutOrdersDataInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'quotations', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface UserUpsertWithoutOrdersInput {
  update?: UserUpdateWithoutOrdersDataInput
  create?: UserCreateWithoutOrdersInput
}
export type UserUpsertWithoutOrdersInputInputObject =
  | Extract<keyof UserUpsertWithoutOrdersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface QuotationUpdateOneInput {
  create?: QuotationCreateInput | null
  update?: QuotationUpdateDataInput | null
  upsert?: QuotationUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: QuotationWhereUniqueInput | null
}
export type QuotationUpdateOneInputInputObject =
  | Extract<keyof QuotationUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QuotationUpdateDataInput {
  docId?: string | null
  quotationItems?: QuotationItemUpdateManyWithoutQuotationInput | null
  customer?: UserUpdateOneRequiredWithoutQuotationsInput | null
  fileUrl?: string | null
  status?: string | null
}
export type QuotationUpdateDataInputInputObject =
  | Extract<keyof QuotationUpdateDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'quotationItems', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutQuotationsInput {
  create?: UserCreateWithoutQuotationsInput | null
  update?: UserUpdateWithoutQuotationsDataInput | null
  upsert?: UserUpsertWithoutQuotationsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutQuotationsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutQuotationsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutQuotationsDataInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
  shoppingCart?: ShoppingCartUpdateOneRequiredWithoutCustomerInput | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
  payments?: PaymentUpdateManyWithoutCustomerInput | null
  addresses?: AddressUpdateManyWithoutCustomerInput | null
}
export type UserUpdateWithoutQuotationsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutQuotationsDataInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'addresses', alias?: string  } 
  
export interface UserUpsertWithoutQuotationsInput {
  update?: UserUpdateWithoutQuotationsDataInput
  create?: UserCreateWithoutQuotationsInput
}
export type UserUpsertWithoutQuotationsInputInputObject =
  | Extract<keyof UserUpsertWithoutQuotationsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface QuotationUpsertNestedInput {
  update?: QuotationUpdateDataInput
  create?: QuotationCreateInput
}
export type QuotationUpsertNestedInputInputObject =
  | Extract<keyof QuotationUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderUpsertWithoutShippingInput {
  update?: OrderUpdateWithoutShippingDataInput
  create?: OrderCreateWithoutShippingInput
}
export type OrderUpsertWithoutShippingInputInputObject =
  | Extract<keyof OrderUpsertWithoutShippingInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShippingUpsertWithWhereUniqueWithoutAddressInput {
  where?: ShippingWhereUniqueInput
  update?: ShippingUpdateWithoutAddressDataInput
  create?: ShippingCreateWithoutAddressInput
}
export type ShippingUpsertWithWhereUniqueWithoutAddressInputInputObject =
  | Extract<keyof ShippingUpsertWithWhereUniqueWithoutAddressInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShippingScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  dueDate?: string | null
  dueDate_not?: string | null
  dueDate_in?: string[]
  dueDate_not_in?: string[]
  dueDate_lt?: string | null
  dueDate_lte?: string | null
  dueDate_gt?: string | null
  dueDate_gte?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: ShippingScalarWhereInput[]
  OR?: ShippingScalarWhereInput[]
  NOT?: ShippingScalarWhereInput[]
}
export type ShippingScalarWhereInputInputObject =
  | Extract<keyof ShippingScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'dueDate_not', alias?: string  } 
  | { name: 'dueDate_in', alias?: string  } 
  | { name: 'dueDate_not_in', alias?: string  } 
  | { name: 'dueDate_lt', alias?: string  } 
  | { name: 'dueDate_lte', alias?: string  } 
  | { name: 'dueDate_gt', alias?: string  } 
  | { name: 'dueDate_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ShippingUpdateManyWithWhereNestedInput {
  where?: ShippingScalarWhereInput
  data?: ShippingUpdateManyDataInput
}
export type ShippingUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ShippingUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ShippingUpdateManyDataInput {
  docId?: string | null
  dueDate?: string | null
  status?: string | null
}
export type ShippingUpdateManyDataInputInputObject =
  | Extract<keyof ShippingUpdateManyDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface AddressUpsertWithoutInvoicesInput {
  update?: AddressUpdateWithoutInvoicesDataInput
  create?: AddressCreateWithoutInvoicesInput
}
export type AddressUpsertWithoutInvoicesInputInputObject =
  | Extract<keyof AddressUpsertWithoutInvoicesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpdateOneWithoutInvoiceInput {
  create?: PaymentCreateWithoutInvoiceInput | null
  update?: PaymentUpdateWithoutInvoiceDataInput | null
  upsert?: PaymentUpsertWithoutInvoiceInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PaymentWhereUniqueInput | null
}
export type PaymentUpdateOneWithoutInvoiceInputInputObject =
  | Extract<keyof PaymentUpdateOneWithoutInvoiceInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentUpdateWithoutInvoiceDataInput {
  docId?: string | null
  amount?: string | null
  customer?: UserUpdateOneRequiredWithoutPaymentsInput | null
  salesman?: SalesmanUpdateOneWithoutPaymentsInput | null
  order?: OrderUpdateOneRequiredWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentUpdateWithoutInvoiceDataInputInputObject =
  | Extract<keyof PaymentUpdateWithoutInvoiceDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface OrderUpdateOneRequiredWithoutPaymentInput {
  create?: OrderCreateWithoutPaymentInput | null
  update?: OrderUpdateWithoutPaymentDataInput | null
  upsert?: OrderUpsertWithoutPaymentInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderUpdateOneRequiredWithoutPaymentInputInputObject =
  | Extract<keyof OrderUpdateOneRequiredWithoutPaymentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderUpdateWithoutPaymentDataInput {
  docId?: string | null
  orderItem?: OrderItemUpdateManyWithoutOrderInput | null
  salesman?: SalesmanUpdateOneWithoutOrdersInput | null
  shipping?: ShippingUpdateOneWithoutOrderInput | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  status?: string | null
  quotation?: QuotationUpdateOneInput | null
}
export type OrderUpdateWithoutPaymentDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutPaymentDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface OrderUpsertWithoutPaymentInput {
  update?: OrderUpdateWithoutPaymentDataInput
  create?: OrderCreateWithoutPaymentInput
}
export type OrderUpsertWithoutPaymentInputInputObject =
  | Extract<keyof OrderUpsertWithoutPaymentInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpsertWithoutInvoiceInput {
  update?: PaymentUpdateWithoutInvoiceDataInput
  create?: PaymentCreateWithoutInvoiceInput
}
export type PaymentUpsertWithoutInvoiceInputInputObject =
  | Extract<keyof PaymentUpsertWithoutInvoiceInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InvoiceUpsertNestedInput {
  update?: InvoiceUpdateDataInput
  create?: InvoiceCreateInput
}
export type InvoiceUpsertNestedInputInputObject =
  | Extract<keyof InvoiceUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AddressUpdateOneRequiredWithoutShippingInput {
  create?: AddressCreateWithoutShippingInput | null
  update?: AddressUpdateWithoutShippingDataInput | null
  upsert?: AddressUpsertWithoutShippingInput | null
  connect?: AddressWhereUniqueInput | null
}
export type AddressUpdateOneRequiredWithoutShippingInputInputObject =
  | Extract<keyof AddressUpdateOneRequiredWithoutShippingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AddressUpdateWithoutShippingDataInput {
  name?: string | null
  Address?: string | null
  customer?: UserUpdateOneRequiredWithoutAddressesInput | null
  invoices?: InvoiceUpdateManyWithoutAddressInput | null
}
export type AddressUpdateWithoutShippingDataInputInputObject =
  | Extract<keyof AddressUpdateWithoutShippingDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  
export interface AddressUpsertWithoutShippingInput {
  update?: AddressUpdateWithoutShippingDataInput
  create?: AddressCreateWithoutShippingInput
}
export type AddressUpsertWithoutShippingInputInputObject =
  | Extract<keyof AddressUpsertWithoutShippingInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShippingUpsertWithoutOrderInput {
  update?: ShippingUpdateWithoutOrderDataInput
  create?: ShippingCreateWithoutOrderInput
}
export type ShippingUpsertWithoutOrderInputInputObject =
  | Extract<keyof ShippingUpsertWithoutOrderInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderUpsertWithWhereUniqueWithoutSalesmanInput {
  where?: OrderWhereUniqueInput
  update?: OrderUpdateWithoutSalesmanDataInput
  create?: OrderCreateWithoutSalesmanInput
}
export type OrderUpsertWithWhereUniqueWithoutSalesmanInputInputObject =
  | Extract<keyof OrderUpsertWithWhereUniqueWithoutSalesmanInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  AND?: OrderScalarWhereInput[]
  OR?: OrderScalarWhereInput[]
  NOT?: OrderScalarWhereInput[]
}
export type OrderScalarWhereInputInputObject =
  | Extract<keyof OrderScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderUpdateManyWithWhereNestedInput {
  where?: OrderScalarWhereInput
  data?: OrderUpdateManyDataInput
}
export type OrderUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateManyDataInput {
  docId?: string | null
  status?: string | null
}
export type OrderUpdateManyDataInputInputObject =
  | Extract<keyof OrderUpdateManyDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface SalesmanUpsertWithoutInvoicesInput {
  update?: SalesmanUpdateWithoutInvoicesDataInput
  create?: SalesmanCreateWithoutInvoicesInput
}
export type SalesmanUpsertWithoutInvoicesInputInputObject =
  | Extract<keyof SalesmanUpsertWithoutInvoicesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InvoiceUpsertWithoutPaymentInput {
  update?: InvoiceUpdateWithoutPaymentDataInput
  create?: InvoiceCreateWithoutPaymentInput
}
export type InvoiceUpsertWithoutPaymentInputInputObject =
  | Extract<keyof InvoiceUpsertWithoutPaymentInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpsertWithoutOrderInput {
  update?: PaymentUpdateWithoutOrderDataInput
  create?: PaymentCreateWithoutOrderInput
}
export type PaymentUpsertWithoutOrderInputInputObject =
  | Extract<keyof PaymentUpsertWithoutOrderInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderUpsertNestedInput {
  update?: OrderUpdateDataInput
  create?: OrderCreateInput
}
export type OrderUpsertNestedInputInputObject =
  | Extract<keyof OrderUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InvoiceUpsertWithWhereUniqueWithoutSalesmanInput {
  where?: InvoiceWhereUniqueInput
  update?: InvoiceUpdateWithoutSalesmanDataInput
  create?: InvoiceCreateWithoutSalesmanInput
}
export type InvoiceUpsertWithWhereUniqueWithoutSalesmanInputInputObject =
  | Extract<keyof InvoiceUpsertWithWhereUniqueWithoutSalesmanInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InvoiceScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  creditTerm?: string | null
  creditTerm_not?: string | null
  creditTerm_in?: string[]
  creditTerm_not_in?: string[]
  creditTerm_lt?: string | null
  creditTerm_lte?: string | null
  creditTerm_gt?: string | null
  creditTerm_gte?: string | null
  creditTerm_contains?: string | null
  creditTerm_not_contains?: string | null
  creditTerm_starts_with?: string | null
  creditTerm_not_starts_with?: string | null
  creditTerm_ends_with?: string | null
  creditTerm_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: InvoiceScalarWhereInput[]
  OR?: InvoiceScalarWhereInput[]
  NOT?: InvoiceScalarWhereInput[]
}
export type InvoiceScalarWhereInputInputObject =
  | Extract<keyof InvoiceScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'creditTerm_not', alias?: string  } 
  | { name: 'creditTerm_in', alias?: string  } 
  | { name: 'creditTerm_not_in', alias?: string  } 
  | { name: 'creditTerm_lt', alias?: string  } 
  | { name: 'creditTerm_lte', alias?: string  } 
  | { name: 'creditTerm_gt', alias?: string  } 
  | { name: 'creditTerm_gte', alias?: string  } 
  | { name: 'creditTerm_contains', alias?: string  } 
  | { name: 'creditTerm_not_contains', alias?: string  } 
  | { name: 'creditTerm_starts_with', alias?: string  } 
  | { name: 'creditTerm_not_starts_with', alias?: string  } 
  | { name: 'creditTerm_ends_with', alias?: string  } 
  | { name: 'creditTerm_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InvoiceUpdateManyWithWhereNestedInput {
  where?: InvoiceScalarWhereInput
  data?: InvoiceUpdateManyDataInput
}
export type InvoiceUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof InvoiceUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface InvoiceUpdateManyDataInput {
  docId?: string | null
  creditTerm?: string | null
}
export type InvoiceUpdateManyDataInputInputObject =
  | Extract<keyof InvoiceUpdateManyDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  
export interface SalesmanUpsertWithoutPaymentsInput {
  update?: SalesmanUpdateWithoutPaymentsDataInput
  create?: SalesmanCreateWithoutPaymentsInput
}
export type SalesmanUpsertWithoutPaymentsInputInputObject =
  | Extract<keyof SalesmanUpsertWithoutPaymentsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpsertWithWhereUniqueWithoutCustomerInput {
  where?: PaymentWhereUniqueInput
  update?: PaymentUpdateWithoutCustomerDataInput
  create?: PaymentCreateWithoutCustomerInput
}
export type PaymentUpsertWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof PaymentUpsertWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  docId?: string | null
  docId_not?: string | null
  docId_in?: string[]
  docId_not_in?: string[]
  docId_lt?: string | null
  docId_lte?: string | null
  docId_gt?: string | null
  docId_gte?: string | null
  docId_contains?: string | null
  docId_not_contains?: string | null
  docId_starts_with?: string | null
  docId_not_starts_with?: string | null
  docId_ends_with?: string | null
  docId_not_ends_with?: string | null
  amount?: string | null
  amount_not?: string | null
  amount_in?: string[]
  amount_not_in?: string[]
  amount_lt?: string | null
  amount_lte?: string | null
  amount_gt?: string | null
  amount_gte?: string | null
  amount_contains?: string | null
  amount_not_contains?: string | null
  amount_starts_with?: string | null
  amount_not_starts_with?: string | null
  amount_ends_with?: string | null
  amount_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  rawEvent?: string | null
  rawEvent_not?: string | null
  rawEvent_in?: string[]
  rawEvent_not_in?: string[]
  rawEvent_lt?: string | null
  rawEvent_lte?: string | null
  rawEvent_gt?: string | null
  rawEvent_gte?: string | null
  rawEvent_contains?: string | null
  rawEvent_not_contains?: string | null
  rawEvent_starts_with?: string | null
  rawEvent_not_starts_with?: string | null
  rawEvent_ends_with?: string | null
  rawEvent_not_ends_with?: string | null
  AND?: PaymentScalarWhereInput[]
  OR?: PaymentScalarWhereInput[]
  NOT?: PaymentScalarWhereInput[]
}
export type PaymentScalarWhereInputInputObject =
  | Extract<keyof PaymentScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'docId_not', alias?: string  } 
  | { name: 'docId_in', alias?: string  } 
  | { name: 'docId_not_in', alias?: string  } 
  | { name: 'docId_lt', alias?: string  } 
  | { name: 'docId_lte', alias?: string  } 
  | { name: 'docId_gt', alias?: string  } 
  | { name: 'docId_gte', alias?: string  } 
  | { name: 'docId_contains', alias?: string  } 
  | { name: 'docId_not_contains', alias?: string  } 
  | { name: 'docId_starts_with', alias?: string  } 
  | { name: 'docId_not_starts_with', alias?: string  } 
  | { name: 'docId_ends_with', alias?: string  } 
  | { name: 'docId_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'amount_contains', alias?: string  } 
  | { name: 'amount_not_contains', alias?: string  } 
  | { name: 'amount_starts_with', alias?: string  } 
  | { name: 'amount_not_starts_with', alias?: string  } 
  | { name: 'amount_ends_with', alias?: string  } 
  | { name: 'amount_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  | { name: 'rawEvent_not', alias?: string  } 
  | { name: 'rawEvent_in', alias?: string  } 
  | { name: 'rawEvent_not_in', alias?: string  } 
  | { name: 'rawEvent_lt', alias?: string  } 
  | { name: 'rawEvent_lte', alias?: string  } 
  | { name: 'rawEvent_gt', alias?: string  } 
  | { name: 'rawEvent_gte', alias?: string  } 
  | { name: 'rawEvent_contains', alias?: string  } 
  | { name: 'rawEvent_not_contains', alias?: string  } 
  | { name: 'rawEvent_starts_with', alias?: string  } 
  | { name: 'rawEvent_not_starts_with', alias?: string  } 
  | { name: 'rawEvent_ends_with', alias?: string  } 
  | { name: 'rawEvent_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentUpdateManyWithWhereNestedInput {
  where?: PaymentScalarWhereInput
  data?: PaymentUpdateManyDataInput
}
export type PaymentUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PaymentUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PaymentUpdateManyDataInput {
  docId?: string | null
  amount?: string | null
  rawEvent?: string | null
}
export type PaymentUpdateManyDataInputInputObject =
  | Extract<keyof PaymentUpdateManyDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface UserUpsertNestedInput {
  update?: UserUpdateDataInput
  create?: UserCreateInput
}
export type UserUpsertNestedInputInputObject =
  | Extract<keyof UserUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface InvoiceUpsertWithWhereUniqueWithoutAddressInput {
  where?: InvoiceWhereUniqueInput
  update?: InvoiceUpdateWithoutAddressDataInput
  create?: InvoiceCreateWithoutAddressInput
}
export type InvoiceUpsertWithWhereUniqueWithoutAddressInputInputObject =
  | Extract<keyof InvoiceUpsertWithWhereUniqueWithoutAddressInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AddressUpsertWithWhereUniqueWithoutCustomerInput {
  where?: AddressWhereUniqueInput
  update?: AddressUpdateWithoutCustomerDataInput
  create?: AddressCreateWithoutCustomerInput
}
export type AddressUpsertWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof AddressUpsertWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AddressScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  Address?: string | null
  Address_not?: string | null
  Address_in?: string[]
  Address_not_in?: string[]
  Address_lt?: string | null
  Address_lte?: string | null
  Address_gt?: string | null
  Address_gte?: string | null
  Address_contains?: string | null
  Address_not_contains?: string | null
  Address_starts_with?: string | null
  Address_not_starts_with?: string | null
  Address_ends_with?: string | null
  Address_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: AddressScalarWhereInput[]
  OR?: AddressScalarWhereInput[]
  NOT?: AddressScalarWhereInput[]
}
export type AddressScalarWhereInputInputObject =
  | Extract<keyof AddressScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'Address_not', alias?: string  } 
  | { name: 'Address_in', alias?: string  } 
  | { name: 'Address_not_in', alias?: string  } 
  | { name: 'Address_lt', alias?: string  } 
  | { name: 'Address_lte', alias?: string  } 
  | { name: 'Address_gt', alias?: string  } 
  | { name: 'Address_gte', alias?: string  } 
  | { name: 'Address_contains', alias?: string  } 
  | { name: 'Address_not_contains', alias?: string  } 
  | { name: 'Address_starts_with', alias?: string  } 
  | { name: 'Address_not_starts_with', alias?: string  } 
  | { name: 'Address_ends_with', alias?: string  } 
  | { name: 'Address_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AddressUpdateManyWithWhereNestedInput {
  where?: AddressScalarWhereInput
  data?: AddressUpdateManyDataInput
}
export type AddressUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof AddressUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface AddressUpdateManyDataInput {
  name?: string | null
  Address?: string | null
}
export type AddressUpdateManyDataInputInputObject =
  | Extract<keyof AddressUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  
export interface UserUpsertWithoutPaymentsInput {
  update?: UserUpdateWithoutPaymentsDataInput
  create?: UserCreateWithoutPaymentsInput
}
export type UserUpsertWithoutPaymentsInputInputObject =
  | Extract<keyof UserUpsertWithoutPaymentsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpsertWithWhereUniqueWithoutSalesmanInput {
  where?: PaymentWhereUniqueInput
  update?: PaymentUpdateWithoutSalesmanDataInput
  create?: PaymentCreateWithoutSalesmanInput
}
export type PaymentUpsertWithWhereUniqueWithoutSalesmanInputInputObject =
  | Extract<keyof PaymentUpsertWithWhereUniqueWithoutSalesmanInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SalesmanUpsertWithoutOrdersInput {
  update?: SalesmanUpdateWithoutOrdersDataInput
  create?: SalesmanCreateWithoutOrdersInput
}
export type SalesmanUpsertWithoutOrdersInputInputObject =
  | Extract<keyof SalesmanUpsertWithoutOrdersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderUpsertWithWhereUniqueWithoutCustomerInput {
  where?: OrderWhereUniqueInput
  update?: OrderUpdateWithoutCustomerDataInput
  create?: OrderCreateWithoutCustomerInput
}
export type OrderUpsertWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpsertWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpsertWithoutShoppingCartInput {
  update?: UserUpdateWithoutShoppingCartDataInput
  create?: UserCreateWithoutShoppingCartInput
}
export type UserUpsertWithoutShoppingCartInputInputObject =
  | Extract<keyof UserUpsertWithoutShoppingCartInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShoppingCartUpsertNestedInput {
  update?: ShoppingCartUpdateDataInput
  create?: ShoppingCartCreateInput
}
export type ShoppingCartUpsertNestedInputInputObject =
  | Extract<keyof ShoppingCartUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderUpdateOneInput {
  create?: OrderCreateInput | null
  update?: OrderUpdateDataInput | null
  upsert?: OrderUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderUpdateOneInputInputObject =
  | Extract<keyof OrderUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProductItemUpdateManyInput {
  create?: ProductItemCreateInput[]
  update?: ProductItemUpdateWithWhereUniqueNestedInput[]
  upsert?: ProductItemUpsertWithWhereUniqueNestedInput[]
  delete?: ProductItemWhereUniqueInput[]
  connect?: ProductItemWhereUniqueInput[]
  set?: ProductItemWhereUniqueInput[]
  disconnect?: ProductItemWhereUniqueInput[]
  deleteMany?: ProductItemScalarWhereInput[]
  updateMany?: ProductItemUpdateManyWithWhereNestedInput[]
}
export type ProductItemUpdateManyInputInputObject =
  | Extract<keyof ProductItemUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ProductItemUpdateWithWhereUniqueNestedInput {
  where?: ProductItemWhereUniqueInput
  data?: ProductItemUpdateDataInput
}
export type ProductItemUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof ProductItemUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProductItemUpsertWithWhereUniqueNestedInput {
  where?: ProductItemWhereUniqueInput
  update?: ProductItemUpdateDataInput
  create?: ProductItemCreateInput
}
export type ProductItemUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof ProductItemUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProductItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  salePrice?: string | null
  salePrice_not?: string | null
  salePrice_in?: string[]
  salePrice_not_in?: string[]
  salePrice_lt?: string | null
  salePrice_lte?: string | null
  salePrice_gt?: string | null
  salePrice_gte?: string | null
  salePrice_contains?: string | null
  salePrice_not_contains?: string | null
  salePrice_starts_with?: string | null
  salePrice_not_starts_with?: string | null
  salePrice_ends_with?: string | null
  salePrice_not_ends_with?: string | null
  brand?: string | null
  brand_not?: string | null
  brand_in?: string[]
  brand_not_in?: string[]
  brand_lt?: string | null
  brand_lte?: string | null
  brand_gt?: string | null
  brand_gte?: string | null
  brand_contains?: string | null
  brand_not_contains?: string | null
  brand_starts_with?: string | null
  brand_not_starts_with?: string | null
  brand_ends_with?: string | null
  brand_not_ends_with?: string | null
  unitType?: string | null
  unitType_not?: string | null
  unitType_in?: string[]
  unitType_not_in?: string[]
  unitType_lt?: string | null
  unitType_lte?: string | null
  unitType_gt?: string | null
  unitType_gte?: string | null
  unitType_contains?: string | null
  unitType_not_contains?: string | null
  unitType_starts_with?: string | null
  unitType_not_starts_with?: string | null
  unitType_ends_with?: string | null
  unitType_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  MenuDetail?: string | null
  MenuDetail_not?: string | null
  MenuDetail_in?: string[]
  MenuDetail_not_in?: string[]
  MenuDetail_lt?: string | null
  MenuDetail_lte?: string | null
  MenuDetail_gt?: string | null
  MenuDetail_gte?: string | null
  MenuDetail_contains?: string | null
  MenuDetail_not_contains?: string | null
  MenuDetail_starts_with?: string | null
  MenuDetail_not_starts_with?: string | null
  MenuDetail_ends_with?: string | null
  MenuDetail_not_ends_with?: string | null
  TermDetail?: string | null
  TermDetail_not?: string | null
  TermDetail_in?: string[]
  TermDetail_not_in?: string[]
  TermDetail_lt?: string | null
  TermDetail_lte?: string | null
  TermDetail_gt?: string | null
  TermDetail_gte?: string | null
  TermDetail_contains?: string | null
  TermDetail_not_contains?: string | null
  TermDetail_starts_with?: string | null
  TermDetail_not_starts_with?: string | null
  TermDetail_ends_with?: string | null
  TermDetail_not_ends_with?: string | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  isPublished?: boolean | null
  isPublished_not?: boolean | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  AND?: ProductItemScalarWhereInput[]
  OR?: ProductItemScalarWhereInput[]
  NOT?: ProductItemScalarWhereInput[]
}
export type ProductItemScalarWhereInputInputObject =
  | Extract<keyof ProductItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'salePrice_not', alias?: string  } 
  | { name: 'salePrice_in', alias?: string  } 
  | { name: 'salePrice_not_in', alias?: string  } 
  | { name: 'salePrice_lt', alias?: string  } 
  | { name: 'salePrice_lte', alias?: string  } 
  | { name: 'salePrice_gt', alias?: string  } 
  | { name: 'salePrice_gte', alias?: string  } 
  | { name: 'salePrice_contains', alias?: string  } 
  | { name: 'salePrice_not_contains', alias?: string  } 
  | { name: 'salePrice_starts_with', alias?: string  } 
  | { name: 'salePrice_not_starts_with', alias?: string  } 
  | { name: 'salePrice_ends_with', alias?: string  } 
  | { name: 'salePrice_not_ends_with', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'brand_not', alias?: string  } 
  | { name: 'brand_in', alias?: string  } 
  | { name: 'brand_not_in', alias?: string  } 
  | { name: 'brand_lt', alias?: string  } 
  | { name: 'brand_lte', alias?: string  } 
  | { name: 'brand_gt', alias?: string  } 
  | { name: 'brand_gte', alias?: string  } 
  | { name: 'brand_contains', alias?: string  } 
  | { name: 'brand_not_contains', alias?: string  } 
  | { name: 'brand_starts_with', alias?: string  } 
  | { name: 'brand_not_starts_with', alias?: string  } 
  | { name: 'brand_ends_with', alias?: string  } 
  | { name: 'brand_not_ends_with', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'unitType_not', alias?: string  } 
  | { name: 'unitType_in', alias?: string  } 
  | { name: 'unitType_not_in', alias?: string  } 
  | { name: 'unitType_lt', alias?: string  } 
  | { name: 'unitType_lte', alias?: string  } 
  | { name: 'unitType_gt', alias?: string  } 
  | { name: 'unitType_gte', alias?: string  } 
  | { name: 'unitType_contains', alias?: string  } 
  | { name: 'unitType_not_contains', alias?: string  } 
  | { name: 'unitType_starts_with', alias?: string  } 
  | { name: 'unitType_not_starts_with', alias?: string  } 
  | { name: 'unitType_ends_with', alias?: string  } 
  | { name: 'unitType_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'MenuDetail_not', alias?: string  } 
  | { name: 'MenuDetail_in', alias?: string  } 
  | { name: 'MenuDetail_not_in', alias?: string  } 
  | { name: 'MenuDetail_lt', alias?: string  } 
  | { name: 'MenuDetail_lte', alias?: string  } 
  | { name: 'MenuDetail_gt', alias?: string  } 
  | { name: 'MenuDetail_gte', alias?: string  } 
  | { name: 'MenuDetail_contains', alias?: string  } 
  | { name: 'MenuDetail_not_contains', alias?: string  } 
  | { name: 'MenuDetail_starts_with', alias?: string  } 
  | { name: 'MenuDetail_not_starts_with', alias?: string  } 
  | { name: 'MenuDetail_ends_with', alias?: string  } 
  | { name: 'MenuDetail_not_ends_with', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'TermDetail_not', alias?: string  } 
  | { name: 'TermDetail_in', alias?: string  } 
  | { name: 'TermDetail_not_in', alias?: string  } 
  | { name: 'TermDetail_lt', alias?: string  } 
  | { name: 'TermDetail_lte', alias?: string  } 
  | { name: 'TermDetail_gt', alias?: string  } 
  | { name: 'TermDetail_gte', alias?: string  } 
  | { name: 'TermDetail_contains', alias?: string  } 
  | { name: 'TermDetail_not_contains', alias?: string  } 
  | { name: 'TermDetail_starts_with', alias?: string  } 
  | { name: 'TermDetail_not_starts_with', alias?: string  } 
  | { name: 'TermDetail_ends_with', alias?: string  } 
  | { name: 'TermDetail_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'isPublished_not', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProductItemUpdateManyWithWhereNestedInput {
  where?: ProductItemScalarWhereInput
  data?: ProductItemUpdateManyDataInput
}
export type ProductItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ProductItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ProductItemUpdateManyDataInput {
  name?: string | null
  price?: string | null
  salePrice?: string | null
  brand?: string | null
  unitType?: string | null
  description?: string | null
  MenuDetail?: string | null
  TermDetail?: string | null
  amount?: number | null
  isPublished?: boolean | null
  image?: string | null
}
export type ProductItemUpdateManyDataInputInputObject =
  | Extract<keyof ProductItemUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'image', alias?: string  } 
  
export interface ProductItemUpsertWithWhereUniqueWithoutCategoryInput {
  where?: ProductItemWhereUniqueInput
  update?: ProductItemUpdateWithoutCategoryDataInput
  create?: ProductItemCreateWithoutCategoryInput
}
export type ProductItemUpsertWithWhereUniqueWithoutCategoryInputInputObject =
  | Extract<keyof ProductItemUpsertWithWhereUniqueWithoutCategoryInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CategoryUpsertNestedInput {
  update?: CategoryUpdateDataInput
  create?: CategoryCreateInput
}
export type CategoryUpsertNestedInputInputObject =
  | Extract<keyof CategoryUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CategoryUpsertWithoutProductItemInput {
  update?: CategoryUpdateWithoutProductItemDataInput
  create?: CategoryCreateWithoutProductItemInput
}
export type CategoryUpsertWithoutProductItemInputInputObject =
  | Extract<keyof CategoryUpsertWithoutProductItemInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProductItemUpsertNestedInput {
  update?: ProductItemUpdateDataInput
  create?: ProductItemCreateInput
}
export type ProductItemUpsertNestedInputInputObject =
  | Extract<keyof ProductItemUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShoppingCartItemUpsertWithWhereUniqueWithoutShoppingCartInput {
  where?: ShoppingCartItemWhereUniqueInput
  update?: ShoppingCartItemUpdateWithoutShoppingCartDataInput
  create?: ShoppingCartItemCreateWithoutShoppingCartInput
}
export type ShoppingCartItemUpsertWithWhereUniqueWithoutShoppingCartInputInputObject =
  | Extract<keyof ShoppingCartItemUpsertWithWhereUniqueWithoutShoppingCartInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShoppingCartItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  AND?: ShoppingCartItemScalarWhereInput[]
  OR?: ShoppingCartItemScalarWhereInput[]
  NOT?: ShoppingCartItemScalarWhereInput[]
}
export type ShoppingCartItemScalarWhereInputInputObject =
  | Extract<keyof ShoppingCartItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ShoppingCartItemUpdateManyWithWhereNestedInput {
  where?: ShoppingCartItemScalarWhereInput
  data?: ShoppingCartItemUpdateManyDataInput
}
export type ShoppingCartItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ShoppingCartItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ShoppingCartItemUpdateManyDataInput {
  key?: string | null
  amount?: number | null
}
export type ShoppingCartItemUpdateManyDataInputInputObject =
  | Extract<keyof ShoppingCartItemUpdateManyDataInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  
export interface ShoppingCartUpsertWithoutCustomerInput {
  update?: ShoppingCartUpdateWithoutCustomerDataInput
  create?: ShoppingCartCreateWithoutCustomerInput
}
export type ShoppingCartUpsertWithoutCustomerInputInputObject =
  | Extract<keyof ShoppingCartUpsertWithoutCustomerInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  runningId?: number | null
  type?: string | null
  name?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  avatar?: string | null
  activated?: boolean | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'runningId', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'avatar', alias?: string  } 
  | { name: 'activated', alias?: string  } 
  
export interface QuotationUpdateInput {
  docId?: string | null
  quotationItems?: QuotationItemUpdateManyWithoutQuotationInput | null
  customer?: UserUpdateOneRequiredWithoutQuotationsInput | null
  fileUrl?: string | null
  status?: string | null
}
export type QuotationUpdateInputInputObject =
  | Extract<keyof QuotationUpdateInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'quotationItems', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface QuotationUpdateManyMutationInput {
  docId?: string | null
  fileUrl?: string | null
  status?: string | null
}
export type QuotationUpdateManyMutationInputInputObject =
  | Extract<keyof QuotationUpdateManyMutationInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface QuotationItemCreateInput {
  id?: string | null
  key?: string
  product?: ProductItemCreateOneInput
  amount?: number
  realPrice?: number
  quotation?: QuotationCreateOneWithoutQuotationItemsInput
}
export type QuotationItemCreateInputInputObject =
  | Extract<keyof QuotationItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface QuotationCreateOneWithoutQuotationItemsInput {
  create?: QuotationCreateWithoutQuotationItemsInput | null
  connect?: QuotationWhereUniqueInput | null
}
export type QuotationCreateOneWithoutQuotationItemsInputInputObject =
  | Extract<keyof QuotationCreateOneWithoutQuotationItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QuotationCreateWithoutQuotationItemsInput {
  id?: string | null
  docId?: string | null
  customer?: UserCreateOneWithoutQuotationsInput
  fileUrl?: string | null
  status?: string | null
}
export type QuotationCreateWithoutQuotationItemsInputInputObject =
  | Extract<keyof QuotationCreateWithoutQuotationItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface QuotationItemUpdateInput {
  key?: string | null
  product?: ProductItemUpdateOneRequiredInput | null
  amount?: number | null
  realPrice?: number | null
  quotation?: QuotationUpdateOneRequiredWithoutQuotationItemsInput | null
}
export type QuotationItemUpdateInputInputObject =
  | Extract<keyof QuotationItemUpdateInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface QuotationUpdateOneRequiredWithoutQuotationItemsInput {
  create?: QuotationCreateWithoutQuotationItemsInput | null
  update?: QuotationUpdateWithoutQuotationItemsDataInput | null
  upsert?: QuotationUpsertWithoutQuotationItemsInput | null
  connect?: QuotationWhereUniqueInput | null
}
export type QuotationUpdateOneRequiredWithoutQuotationItemsInputInputObject =
  | Extract<keyof QuotationUpdateOneRequiredWithoutQuotationItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface QuotationUpdateWithoutQuotationItemsDataInput {
  docId?: string | null
  customer?: UserUpdateOneRequiredWithoutQuotationsInput | null
  fileUrl?: string | null
  status?: string | null
}
export type QuotationUpdateWithoutQuotationItemsDataInputInputObject =
  | Extract<keyof QuotationUpdateWithoutQuotationItemsDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'fileUrl', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface QuotationUpsertWithoutQuotationItemsInput {
  update?: QuotationUpdateWithoutQuotationItemsDataInput
  create?: QuotationCreateWithoutQuotationItemsInput
}
export type QuotationUpsertWithoutQuotationItemsInputInputObject =
  | Extract<keyof QuotationUpsertWithoutQuotationItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface QuotationItemUpdateManyMutationInput {
  key?: string | null
  amount?: number | null
  realPrice?: number | null
}
export type QuotationItemUpdateManyMutationInputInputObject =
  | Extract<keyof QuotationItemUpdateManyMutationInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface AddressCreateInput {
  id?: string | null
  name?: string
  Address?: string
  customer?: UserCreateOneWithoutAddressesInput
  invoices?: InvoiceCreateManyWithoutAddressInput | null
  shipping?: ShippingCreateManyWithoutAddressInput | null
}
export type AddressCreateInputInputObject =
  | Extract<keyof AddressCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  
export interface AddressUpdateInput {
  name?: string | null
  Address?: string | null
  customer?: UserUpdateOneRequiredWithoutAddressesInput | null
  invoices?: InvoiceUpdateManyWithoutAddressInput | null
  shipping?: ShippingUpdateManyWithoutAddressInput | null
}
export type AddressUpdateInputInputObject =
  | Extract<keyof AddressUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  
export interface AddressUpdateManyMutationInput {
  name?: string | null
  Address?: string | null
}
export type AddressUpdateManyMutationInputInputObject =
  | Extract<keyof AddressUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'Address', alias?: string  } 
  
export interface PaymentCreateInput {
  id?: string | null
  docId?: string
  amount?: string
  customer?: UserCreateOneWithoutPaymentsInput
  salesman?: SalesmanCreateOneWithoutPaymentsInput | null
  order?: OrderCreateOneWithoutPaymentInput
  Invoice?: InvoiceCreateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentCreateInputInputObject =
  | Extract<keyof PaymentCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface PaymentUpdateInput {
  docId?: string | null
  amount?: string | null
  customer?: UserUpdateOneRequiredWithoutPaymentsInput | null
  salesman?: SalesmanUpdateOneWithoutPaymentsInput | null
  order?: OrderUpdateOneRequiredWithoutPaymentInput | null
  Invoice?: InvoiceUpdateOneWithoutPaymentInput | null
  rawEvent?: string | null
}
export type PaymentUpdateInputInputObject =
  | Extract<keyof PaymentUpdateInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'Invoice', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface PaymentUpdateManyMutationInput {
  docId?: string | null
  amount?: string | null
  rawEvent?: string | null
}
export type PaymentUpdateManyMutationInputInputObject =
  | Extract<keyof PaymentUpdateManyMutationInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'rawEvent', alias?: string  } 
  
export interface SalesmanCreateInput {
  id?: string | null
  name?: string
  email?: string
  phone?: string
  payments?: PaymentCreateManyWithoutSalesmanInput | null
  invoices?: InvoiceCreateManyWithoutSalesmanInput | null
  orders?: OrderCreateManyWithoutSalesmanInput | null
}
export type SalesmanCreateInputInputObject =
  | Extract<keyof SalesmanCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface SalesmanUpdateInput {
  name?: string | null
  email?: string | null
  phone?: string | null
  payments?: PaymentUpdateManyWithoutSalesmanInput | null
  invoices?: InvoiceUpdateManyWithoutSalesmanInput | null
  orders?: OrderUpdateManyWithoutSalesmanInput | null
}
export type SalesmanUpdateInputInputObject =
  | Extract<keyof SalesmanUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  | { name: 'invoices', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface SalesmanUpdateManyMutationInput {
  name?: string | null
  email?: string | null
  phone?: string | null
}
export type SalesmanUpdateManyMutationInputInputObject =
  | Extract<keyof SalesmanUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  
export interface InvoiceUpdateInput {
  docId?: string | null
  creditTerm?: string | null
  user?: UserUpdateOneRequiredInput | null
  order?: OrderUpdateOneRequiredInput | null
  salesman?: SalesmanUpdateOneRequiredWithoutInvoicesInput | null
  address?: AddressUpdateOneWithoutInvoicesInput | null
  payment?: PaymentUpdateOneWithoutInvoiceInput | null
}
export type InvoiceUpdateInputInputObject =
  | Extract<keyof InvoiceUpdateInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  
export interface InvoiceUpdateManyMutationInput {
  docId?: string | null
  creditTerm?: string | null
}
export type InvoiceUpdateManyMutationInputInputObject =
  | Extract<keyof InvoiceUpdateManyMutationInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'creditTerm', alias?: string  } 
  
export interface ShippingCreateInput {
  id?: string | null
  docId?: string
  dueDate?: string
  status?: string
  invoce?: InvoiceCreateOneInput
  address?: AddressCreateOneWithoutShippingInput
  order?: OrderCreateOneWithoutShippingInput
}
export type ShippingCreateInputInputObject =
  | Extract<keyof ShippingCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'invoce', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface ShippingUpdateInput {
  docId?: string | null
  dueDate?: string | null
  status?: string | null
  invoce?: InvoiceUpdateOneRequiredInput | null
  address?: AddressUpdateOneRequiredWithoutShippingInput | null
  order?: OrderUpdateOneRequiredWithoutShippingInput | null
}
export type ShippingUpdateInputInputObject =
  | Extract<keyof ShippingUpdateInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'invoce', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface ShippingUpdateManyMutationInput {
  docId?: string | null
  dueDate?: string | null
  status?: string | null
}
export type ShippingUpdateManyMutationInputInputObject =
  | Extract<keyof ShippingUpdateManyMutationInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'dueDate', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface CategoryUpdateInput {
  name?: string | null
  productItem?: ProductItemUpdateManyWithoutCategoryInput | null
  category?: CategoryUpdateOneInput | null
}
export type CategoryUpdateInputInputObject =
  | Extract<keyof CategoryUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'productItem', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface CategoryUpdateManyMutationInput {
  name?: string | null
}
export type CategoryUpdateManyMutationInputInputObject =
  | Extract<keyof CategoryUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  
export interface ProductItemUpdateInput {
  name?: string | null
  price?: string | null
  salePrice?: string | null
  brand?: string | null
  unitType?: string | null
  description?: string | null
  MenuDetail?: string | null
  TermDetail?: string | null
  amount?: number | null
  isPublished?: boolean | null
  category?: CategoryUpdateOneRequiredWithoutProductItemInput | null
  shoppingCart?: ShoppingCartUpdateOneInput | null
  order?: OrderUpdateOneInput | null
  image?: string | null
  relatedProduct?: ProductItemUpdateManyInput | null
}
export type ProductItemUpdateInputInputObject =
  | Extract<keyof ProductItemUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'shoppingCart', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'relatedProduct', alias?: string  } 
  
export interface ProductItemUpdateManyMutationInput {
  name?: string | null
  price?: string | null
  salePrice?: string | null
  brand?: string | null
  unitType?: string | null
  description?: string | null
  MenuDetail?: string | null
  TermDetail?: string | null
  amount?: number | null
  isPublished?: boolean | null
  image?: string | null
}
export type ProductItemUpdateManyMutationInputInputObject =
  | Extract<keyof ProductItemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'salePrice', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'unitType', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'MenuDetail', alias?: string  } 
  | { name: 'TermDetail', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'isPublished', alias?: string  } 
  | { name: 'image', alias?: string  } 
  
export interface ShoppingCartItemCreateInput {
  id?: string | null
  key?: string
  product?: ProductItemCreateOneInput
  amount?: number
  ShoppingCart?: ShoppingCartCreateOneWithoutProductItemsInput | null
}
export type ShoppingCartItemCreateInputInputObject =
  | Extract<keyof ShoppingCartItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'ShoppingCart', alias?: string  } 
  
export interface ShoppingCartCreateOneWithoutProductItemsInput {
  create?: ShoppingCartCreateWithoutProductItemsInput | null
  connect?: ShoppingCartWhereUniqueInput | null
}
export type ShoppingCartCreateOneWithoutProductItemsInputInputObject =
  | Extract<keyof ShoppingCartCreateOneWithoutProductItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShoppingCartCreateWithoutProductItemsInput {
  id?: string | null
  total_cost?: number
  customer?: UserCreateOneWithoutShoppingCartInput
}
export type ShoppingCartCreateWithoutProductItemsInputInputObject =
  | Extract<keyof ShoppingCartCreateWithoutProductItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'total_cost', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface ShoppingCartItemUpdateInput {
  key?: string | null
  product?: ProductItemUpdateOneRequiredInput | null
  amount?: number | null
  ShoppingCart?: ShoppingCartUpdateOneWithoutProductItemsInput | null
}
export type ShoppingCartItemUpdateInputInputObject =
  | Extract<keyof ShoppingCartItemUpdateInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'ShoppingCart', alias?: string  } 
  
export interface ShoppingCartUpdateOneWithoutProductItemsInput {
  create?: ShoppingCartCreateWithoutProductItemsInput | null
  update?: ShoppingCartUpdateWithoutProductItemsDataInput | null
  upsert?: ShoppingCartUpsertWithoutProductItemsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: ShoppingCartWhereUniqueInput | null
}
export type ShoppingCartUpdateOneWithoutProductItemsInputInputObject =
  | Extract<keyof ShoppingCartUpdateOneWithoutProductItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ShoppingCartUpdateWithoutProductItemsDataInput {
  total_cost?: number | null
  customer?: UserUpdateOneRequiredWithoutShoppingCartInput | null
}
export type ShoppingCartUpdateWithoutProductItemsDataInputInputObject =
  | Extract<keyof ShoppingCartUpdateWithoutProductItemsDataInput, string>
  | { name: 'total_cost', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface ShoppingCartUpsertWithoutProductItemsInput {
  update?: ShoppingCartUpdateWithoutProductItemsDataInput
  create?: ShoppingCartCreateWithoutProductItemsInput
}
export type ShoppingCartUpsertWithoutProductItemsInputInputObject =
  | Extract<keyof ShoppingCartUpsertWithoutProductItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ShoppingCartItemUpdateManyMutationInput {
  key?: string | null
  amount?: number | null
}
export type ShoppingCartItemUpdateManyMutationInputInputObject =
  | Extract<keyof ShoppingCartItemUpdateManyMutationInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  
export interface ShoppingCartUpdateInput {
  total_cost?: number | null
  productItems?: ShoppingCartItemUpdateManyWithoutShoppingCartInput | null
  customer?: UserUpdateOneRequiredWithoutShoppingCartInput | null
}
export type ShoppingCartUpdateInputInputObject =
  | Extract<keyof ShoppingCartUpdateInput, string>
  | { name: 'total_cost', alias?: string  } 
  | { name: 'productItems', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface ShoppingCartUpdateManyMutationInput {
  total_cost?: number | null
}
export type ShoppingCartUpdateManyMutationInputInputObject =
  | Extract<keyof ShoppingCartUpdateManyMutationInput, string>
  | { name: 'total_cost', alias?: string  } 
  
export interface OrderItemCreateInput {
  id?: string | null
  key?: string
  product?: ProductItemCreateOneInput
  amount?: number
  realPrice?: number
  order?: OrderCreateOneWithoutOrderItemInput
}
export type OrderItemCreateInputInputObject =
  | Extract<keyof OrderItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderCreateOneWithoutOrderItemInput {
  create?: OrderCreateWithoutOrderItemInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderCreateOneWithoutOrderItemInputInputObject =
  | Extract<keyof OrderCreateOneWithoutOrderItemInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutOrderItemInput {
  id?: string | null
  docId?: string | null
  salesman?: SalesmanCreateOneWithoutOrdersInput | null
  payment?: PaymentCreateOneWithoutOrderInput | null
  shipping?: ShippingCreateOneWithoutOrderInput | null
  customer?: UserCreateOneWithoutOrdersInput
  status?: string | null
  quotation?: QuotationCreateOneInput | null
}
export type OrderCreateWithoutOrderItemInputInputObject =
  | Extract<keyof OrderCreateWithoutOrderItemInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'docId', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface OrderItemUpdateInput {
  key?: string | null
  product?: ProductItemUpdateOneRequiredInput | null
  amount?: number | null
  realPrice?: number | null
  order?: OrderUpdateOneRequiredWithoutOrderItemInput | null
}
export type OrderItemUpdateInputInputObject =
  | Extract<keyof OrderItemUpdateInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'product', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderUpdateOneRequiredWithoutOrderItemInput {
  create?: OrderCreateWithoutOrderItemInput | null
  update?: OrderUpdateWithoutOrderItemDataInput | null
  upsert?: OrderUpsertWithoutOrderItemInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderUpdateOneRequiredWithoutOrderItemInputInputObject =
  | Extract<keyof OrderUpdateOneRequiredWithoutOrderItemInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderUpdateWithoutOrderItemDataInput {
  docId?: string | null
  salesman?: SalesmanUpdateOneWithoutOrdersInput | null
  payment?: PaymentUpdateOneWithoutOrderInput | null
  shipping?: ShippingUpdateOneWithoutOrderInput | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  status?: string | null
  quotation?: QuotationUpdateOneInput | null
}
export type OrderUpdateWithoutOrderItemDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutOrderItemDataInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface OrderUpsertWithoutOrderItemInput {
  update?: OrderUpdateWithoutOrderItemDataInput
  create?: OrderCreateWithoutOrderItemInput
}
export type OrderUpsertWithoutOrderItemInputInputObject =
  | Extract<keyof OrderUpsertWithoutOrderItemInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemUpdateManyMutationInput {
  key?: string | null
  amount?: number | null
  realPrice?: number | null
}
export type OrderItemUpdateManyMutationInputInputObject =
  | Extract<keyof OrderItemUpdateManyMutationInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'realPrice', alias?: string  } 
  
export interface OrderUpdateInput {
  docId?: string | null
  orderItem?: OrderItemUpdateManyWithoutOrderInput | null
  salesman?: SalesmanUpdateOneWithoutOrdersInput | null
  payment?: PaymentUpdateOneWithoutOrderInput | null
  shipping?: ShippingUpdateOneWithoutOrderInput | null
  customer?: UserUpdateOneRequiredWithoutOrdersInput | null
  status?: string | null
  quotation?: QuotationUpdateOneInput | null
}
export type OrderUpdateInputInputObject =
  | Extract<keyof OrderUpdateInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'salesman', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'shipping', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'quotation', alias?: string  } 
  
export interface OrderUpdateManyMutationInput {
  docId?: string | null
  status?: string | null
}
export type OrderUpdateManyMutationInputInputObject =
  | Extract<keyof OrderUpdateManyMutationInput, string>
  | { name: 'docId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QuotationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: QuotationWhereInput | null
  AND?: QuotationSubscriptionWhereInput[]
  OR?: QuotationSubscriptionWhereInput[]
  NOT?: QuotationSubscriptionWhereInput[]
}
export type QuotationSubscriptionWhereInputInputObject =
  | Extract<keyof QuotationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface QuotationItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: QuotationItemWhereInput | null
  AND?: QuotationItemSubscriptionWhereInput[]
  OR?: QuotationItemSubscriptionWhereInput[]
  NOT?: QuotationItemSubscriptionWhereInput[]
}
export type QuotationItemSubscriptionWhereInputInputObject =
  | Extract<keyof QuotationItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AddressSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AddressWhereInput | null
  AND?: AddressSubscriptionWhereInput[]
  OR?: AddressSubscriptionWhereInput[]
  NOT?: AddressSubscriptionWhereInput[]
}
export type AddressSubscriptionWhereInputInputObject =
  | Extract<keyof AddressSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PaymentWhereInput | null
  AND?: PaymentSubscriptionWhereInput[]
  OR?: PaymentSubscriptionWhereInput[]
  NOT?: PaymentSubscriptionWhereInput[]
}
export type PaymentSubscriptionWhereInputInputObject =
  | Extract<keyof PaymentSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SalesmanSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SalesmanWhereInput | null
  AND?: SalesmanSubscriptionWhereInput[]
  OR?: SalesmanSubscriptionWhereInput[]
  NOT?: SalesmanSubscriptionWhereInput[]
}
export type SalesmanSubscriptionWhereInputInputObject =
  | Extract<keyof SalesmanSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface InvoiceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: InvoiceWhereInput | null
  AND?: InvoiceSubscriptionWhereInput[]
  OR?: InvoiceSubscriptionWhereInput[]
  NOT?: InvoiceSubscriptionWhereInput[]
}
export type InvoiceSubscriptionWhereInputInputObject =
  | Extract<keyof InvoiceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ShippingSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ShippingWhereInput | null
  AND?: ShippingSubscriptionWhereInput[]
  OR?: ShippingSubscriptionWhereInput[]
  NOT?: ShippingSubscriptionWhereInput[]
}
export type ShippingSubscriptionWhereInputInputObject =
  | Extract<keyof ShippingSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CategorySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CategoryWhereInput | null
  AND?: CategorySubscriptionWhereInput[]
  OR?: CategorySubscriptionWhereInput[]
  NOT?: CategorySubscriptionWhereInput[]
}
export type CategorySubscriptionWhereInputInputObject =
  | Extract<keyof CategorySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProductItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProductItemWhereInput | null
  AND?: ProductItemSubscriptionWhereInput[]
  OR?: ProductItemSubscriptionWhereInput[]
  NOT?: ProductItemSubscriptionWhereInput[]
}
export type ProductItemSubscriptionWhereInputInputObject =
  | Extract<keyof ProductItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ShoppingCartItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ShoppingCartItemWhereInput | null
  AND?: ShoppingCartItemSubscriptionWhereInput[]
  OR?: ShoppingCartItemSubscriptionWhereInput[]
  NOT?: ShoppingCartItemSubscriptionWhereInput[]
}
export type ShoppingCartItemSubscriptionWhereInputInputObject =
  | Extract<keyof ShoppingCartItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ShoppingCartSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ShoppingCartWhereInput | null
  AND?: ShoppingCartSubscriptionWhereInput[]
  OR?: ShoppingCartSubscriptionWhereInput[]
  NOT?: ShoppingCartSubscriptionWhereInput[]
}
export type ShoppingCartSubscriptionWhereInputInputObject =
  | Extract<keyof ShoppingCartSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderItemWhereInput | null
  AND?: OrderItemSubscriptionWhereInput[]
  OR?: OrderItemSubscriptionWhereInput[]
  NOT?: OrderItemSubscriptionWhereInput[]
}
export type OrderItemSubscriptionWhereInputInputObject =
  | Extract<keyof OrderItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderWhereInput | null
  AND?: OrderSubscriptionWhereInput[]
  OR?: OrderSubscriptionWhereInput[]
  NOT?: OrderSubscriptionWhereInput[]
}
export type OrderSubscriptionWhereInputInputObject =
  | Extract<keyof OrderSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type ShoppingCartItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'key_ASC'
  | 'key_DESC'
  | 'amount_ASC'
  | 'amount_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ProductItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'salePrice_ASC'
  | 'salePrice_DESC'
  | 'brand_ASC'
  | 'brand_DESC'
  | 'unitType_ASC'
  | 'unitType_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'MenuDetail_ASC'
  | 'MenuDetail_DESC'
  | 'TermDetail_ASC'
  | 'TermDetail_DESC'
  | 'amount_ASC'
  | 'amount_DESC'
  | 'isPublished_ASC'
  | 'isPublished_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'image_ASC'
  | 'image_DESC'
  
export type OrderItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'key_ASC'
  | 'key_DESC'
  | 'amount_ASC'
  | 'amount_DESC'
  | 'realPrice_ASC'
  | 'realPrice_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PaymentOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'docId_ASC'
  | 'docId_DESC'
  | 'amount_ASC'
  | 'amount_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'rawEvent_ASC'
  | 'rawEvent_DESC'
  
export type InvoiceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'docId_ASC'
  | 'docId_DESC'
  | 'creditTerm_ASC'
  | 'creditTerm_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ShippingOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'docId_ASC'
  | 'docId_DESC'
  | 'dueDate_ASC'
  | 'dueDate_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrderOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'docId_ASC'
  | 'docId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'status_ASC'
  | 'status_DESC'
  
export type QuotationItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'key_ASC'
  | 'key_DESC'
  | 'amount_ASC'
  | 'amount_DESC'
  | 'realPrice_ASC'
  | 'realPrice_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type QuotationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'docId_ASC'
  | 'docId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'fileUrl_ASC'
  | 'fileUrl_DESC'
  | 'status_ASC'
  | 'status_DESC'
  
export type AddressOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'Address_ASC'
  | 'Address_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'runningId_ASC'
  | 'runningId_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'avatar_ASC'
  | 'avatar_DESC'
  | 'activated_ASC'
  | 'activated_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SalesmanOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CategoryOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ShoppingCartOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'total_cost_ASC'
  | 'total_cost_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  