{"version":3,"sources":["components/ProgressBar/ProgressBar.tsx","components/Charts/Chart.tsx","components/Box/Box.style.tsx","components/Box/Box.tsx","components/Widgets/RadialBarChart/RadialBarChart.style.tsx","components/Widgets/RadialBarChart/RadialBarChart.tsx","components/Widgets/LineChart/LineChart.tsx","components/Widgets/ColumnChart/ColumnChart.style.tsx","components/Widgets/ColumnChart/ColumnChart.tsx","components/Widgets/DonutChart/DonutChart.style.tsx","components/Widgets/DonutChart/DonutChart.tsx","components/Widgets/GraphChart/GraphChart.tsx","components/Widgets/GradiantGraphChart/GradiantGraphChart.style.tsx","components/Widgets/GradiantGraphChart/GradiantGraphChart.tsx","components/Widgets/MapWidget/MapWidget.style.tsx","components/Widgets/MapWidget/MapWidget.tsx","components/Widgets/StickerCard/StickerCard.style.tsx","components/Widgets/StickerCard/StickerCard.tsx","containers/Dashboard/Dashboard.tsx"],"names":["ProgressBar","props","Charts","TitleWrapper","styled","padding","display","alignItems","justifyContent","BoxHeading","$theme","typography","fontBold16","fontFamily","primaryFontFamily","color","colors","textDark","lineHeight","margin","BoxWrapper","width","height","flexDirection","backgroundColor","borderRadius","boxShadow","overflow","BoxContentWrapper","flexWrap","BoxTitleWrapper","children","style","BoxTitle","title","Box","BoxContent","ChartLabels","Label","Color","marginRight","flexShrink","Content","Title","font13","textNormal","marginBottom","Text","fontBold21","RadialBarChart","widgetTitle","series","label","helperText","options","plotOptions","radialBar","hollow","size","background","track","show","strokeWidth","opacity","dropShadow","enabled","top","left","blur","dataLabels","states","hover","filter","type","value","stroke","lineCap","labels","Chart","map","item","index","key","LineChart","categories","seriesName","chart","toolbar","curve","xaxis","axisBorder","axisTicks","crosshairs","tickWidth","position","dashArray","fill","tooltip","yaxis","fontSize","grid","borderColor","markers","strokeColor","name","data","ContentWrapper","marginTop","LabelText","font14","SeriesText","BarChart","prefix","totalValue","text","percentage","bar","columnWidth","endingShape","lines","marginLeft","Img","icon","legend","pie","donut","expandOnClick","numberWithCommas","num","toString","replace","GrpahChart","zoom","GradiantGraphChart","topRowTitle","bottomRowData","gradient","opacityFrom","opacityTo","paddingTop","valueText","successValue","overrides","Bar","BarProgress","TopPart","Progressbox","minHeight","ProgressSingle","paddingRight","ProgressBarTitleWrapper","ProgressTitle","fontBold14","ProgressNumber","fontBold12","BottomPart","borderTop","MapLengendBox","minWidth","MapLengendBoxSingle","MapLengendTitle","whiteSpace","MapLengendValue","MapLengendColor","TotalValueBox","MapWidget","totalText","reduce","a","total","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","$value","content","Math","round","fontBold13","right","Card","TopInfo","SubTitle","IconBox","Price","Note","Link","purple400","textDecoration","StickerCard","subtitle","price","indicator","indicatorText","note","link","linkText","href","target","Col","Column","className","Dashboard","fluid","md","lg","sm","xs","GraphChart","DonutChart","ColumnChart"],"mappings":"6HAAA,oBAOeA,IAJK,SAAC,GAAkB,IAAbC,EAAY,oBACpC,OAAO,gBAAC,IAAkBA,K,+FCGbC,EAJA,SAAC,GAAkB,IAAbD,EAAY,oBAC/B,OAAO,kBAAC,IAAUA,I,QCFPE,EAAeC,YAAO,OAAO,iBAAO,CAC/CC,QAAS,OACTC,QAAS,OACTC,WAAY,aACZC,eAAgB,qBAGLC,EAAaL,YAAO,MAAM,gBAAGM,EAAH,EAAGA,OAAH,sBAClCA,EAAOC,WAAWC,WADgB,CAErCC,WAAYH,EAAOC,WAAWG,kBAC9BC,MAAOL,EAAOM,OAAOC,SACrBC,WAAY,MACZC,OAAQ,EAER,4CAA6C,CAC3Cb,QAAS,cAIPc,EAAahB,YAAO,OAAO,iBAAO,CACtCiB,MAAO,OACPC,OAAQ,OACRhB,QAAS,OACTiB,cAAe,SACfC,gBAAiB,UACjBC,aAAc,MACdC,UAAW,kCACXC,SAAU,aAGCC,EAAoBxB,YAAO,OAAO,iBAAO,CACpDiB,MAAO,OACPf,QAAS,OACTuB,SAAU,WAGGT,ICtBFU,EAAsC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9D,OAAO,kBAAC7B,EAAD,CAAc6B,MAAOA,GAAQD,IAGzBE,EAAoC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClD,OAAO,kBAACzB,EAAD,KAAayB,IAGTC,EAAM,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,SACpB,OAAO,kBAAC,EAAD,KAAaA,IAGTK,EAAiC,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACzD,OAAO,kBAACJ,EAAD,CAAmBI,MAAOA,GAAQD,IC3B9BM,EAAcjC,YAAO,OAAO,iBAAO,CAC9CiB,MAAO,OACPhB,QAAS,iBACTC,QAAS,OACTE,eAAgB,eAChBD,WAAY,iBAGD+B,EAAQlC,YAAO,OAAO,iBAAO,CACxCC,QAAS,SACTC,QAAS,OACTE,eAAgB,aAChBD,WAAY,iBAGDgC,EAAQnC,YAAO,QAAQ,iBAAO,CACzCiB,MAAO,OACPC,OAAQ,OACRG,aAAc,MACde,YAAa,OACblC,QAAS,OACTmC,WAAY,QAGDC,EAAUtC,YAAO,OAAO,iBAAO,CAC1CE,QAAS,OACTiB,cAAe,aAGJoB,EAAQvC,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC/BA,EAAOC,WAAWiC,OADa,CAElC/B,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAO6B,WACrBC,aAAc,YAGHC,EAAO3C,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC9BA,EAAOC,WAAWqC,WADY,CAEjCnC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,cCsDRgC,EArFQ,SAAC,GAMZ,IALVC,EAKS,EALTA,YACAC,EAIS,EAJTA,OACAnC,EAGS,EAHTA,OACAoC,EAES,EAFTA,MACAC,EACS,EADTA,WAEMC,EAAU,CACdA,QAAS,CACPtC,OAAQA,EACRuC,YAAa,CACXC,UAAW,CACTC,OAAQ,CACNtC,OAAQ,EACRuC,KAAM,MACNC,WAAY,eAGdC,MAAO,CACLC,MAAM,EACNF,WAAY,UACZG,YAAa,OACbC,QAAS,EACT5C,OAAQ,GACR6C,WAAY,CACVC,SAAS,EACTC,IAAK,EACLC,KAAM,EACNC,KAAM,EACNL,QAAS,KAIbM,WAAY,CACVR,MAAM,KAIZS,OAAQ,CACNC,MAAO,CACLC,OAAQ,CACNC,KAAM,SACNC,MAAO,MAIbC,OAAQ,CACNC,QAAS,SAEXC,OAAQzB,GAEVD,OAAQA,GAGV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUjB,MAAOgB,KAGnB,kBAAC,EAAD,CAAYlB,MAAO,CAAE1B,QAAS,UAC5B,kBAACwE,EAAD,CACExB,QAASA,EAAQA,QACjBH,OAAQG,EAAQH,OAChBsB,KAAK,YACLpD,MAAM,SAGR,kBAACgB,EAAD,KACGe,GACCA,EAAM2B,KAAI,SAACC,EAAMC,GAAP,OACR,kBAAC3C,EAAD,CAAO4C,IAAKD,GACV,kBAAC1C,EAAD,CAAOP,MAAO,CAAER,gBAAiBR,EAAOiE,MACxC,kBAACvC,EAAD,KACE,kBAACC,EAAD,KAAQU,EAAW4B,IACnB,kBAAClC,EAAD,KAAOK,EAAM6B,aC2BhBE,EA9GG,SAAC,GAMP,IALVjC,EAKS,EALTA,YACAC,EAIS,EAJTA,OACApC,EAGS,EAHTA,MACAqE,EAES,EAFTA,WAES,IADTC,WAEM/B,EAAU,CACdA,QAAS,CACPgC,MAAO,CACLb,KAAM,OACNT,WAAY,CACVC,SAAS,EACTlD,MAAOA,EACPmD,IAAK,GACLC,KAAM,EACNC,KAAM,IACNL,QAAS,KAEXwB,QAAS,CACP1B,MAAM,IAGVc,OAAQ,CACNtD,MAAO,EACPmE,MAAO,UAETC,MAAO,CACLL,WAAYA,EACZP,OAAQ,CACNhB,MAAM,GAER6B,WAAY,CACV7B,MAAM,GAER8B,UAAW,CACT9B,MAAM,GAER+B,WAAY,CACV/B,MAAM,EACNxC,MAAO,EACPwE,UAAW,EACXC,SAAU,OACV/B,QAAS,EACTY,OAAQ,CACN5D,MAAO,UACPM,MAAO,EACP0E,UAAW,GAEbC,KAAM,CACJvB,KAAM,QACN1D,MAAO,YAGXkF,QAAS,CACPhC,SAAS,IAGbiC,MAAO,CACLrC,MAAM,EACNgB,OAAQ,CACNhB,MAAM,EACN7B,MAAO,CACLjB,MAAO,UACPoF,SAAU,OACVtF,WAAY,wBAIlBuF,KAAM,CACJC,YAAa,WAEfrF,OAAQD,EACRuF,QAAS,CACP5C,KAAM,EACNK,QAAS,EACT/C,OAAQD,EACRwF,YAAa,OACbzC,YAAa,EACbS,MAAO,CACLb,KAAM,KAIZP,OAAQ,CACN,CACEqD,UAhFG,MADI,GACJ,EAiFHC,KAAMtD,KAKZ,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUjB,MAAOgB,KAGnB,kBAAC,EAAD,CAAYlB,MAAO,CAAE1B,QAAS,UAC5B,kBAACwE,EAAD,CACExB,QAASA,EAAQA,QACjBH,OAAQG,EAAQH,OAChB7B,OAAO,MACPD,MAAM,WCzGHqF,EAAiBtG,YAAO,OAAO,iBAAO,CACjDiB,MAAO,OACPf,QAAS,OACTE,eAAgB,gBAChBD,WAAY,aAEZ,4CAA6C,CAC3CgB,cAAe,cAwBNmB,GApBStC,YAAO,OAAO,iBAAO,CACzCE,QAAS,OACTC,WAAY,aAGOH,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC/BA,EAAOC,WAAWiC,OADa,CAElC/B,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAO6B,gBAGFzC,YAAO,QAAQ,iBAAO,CACzCiB,MAAO,OACPC,OAAQ,OACRG,aAAc,MACde,YAAa,OACblC,QAAS,WAGYF,YAAO,OAAO,iBAAO,CAC1CE,QAAS,OACTiB,cAAe,SAEf,4CAA6C,CAC3CoF,UAAW,aAIFC,EAAYxG,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACnCA,EAAOC,WAAWkG,OADiB,CAEtChG,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,SACrB0F,UAAW,YAGAG,EAAa1G,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACpCA,EAAOC,WAAWqC,WADkB,CAEvCnC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAO,e,QC4FMgG,EAvIE,SAAC,GAUN,IATV7D,EASS,EATTA,YACAC,EAQS,EARTA,OACAnC,EAOS,EAPTA,OACAgG,EAMS,EANTA,OACAC,EAKS,EALTA,WACAC,EAIS,EAJTA,KACApB,EAGS,EAHTA,SACAqB,EAES,EAFTA,WAGM7D,EAAU,CACdA,QAAS,CACPgC,MAAO,CACLC,QAAS,CACP1B,MAAM,IAGVN,YAAa,CACX6D,IAAK,CACHC,YAAa,MACbC,YAAa,SAGjBjD,WAAY,CACVJ,SAAS,GAEXU,OAAQ,CACNd,MAAM,EACNxC,MAAO,GAcT+E,KAAM,CACJC,YAAa,UACbZ,MAAO,CACL8B,MAAO,CACL1D,MAAM,KAIZ7C,OAAQA,EACRyE,MAAO,CACLZ,OAAQ,CACNhB,MAAM,EACN7B,MAAO,CACLhB,OAAQ,UACRmF,SAAU,OACVtF,WAAY,uBAGhB6E,WAAY,CACV7B,MAAM,GAER8B,UAAW,CACT9B,MAAM,GAERuB,WAzDG,EADTA,YA4DIc,MAAO,CACLrC,MAAM,EACNgB,OAAQ,CACNhB,MAAM,EACN7B,MAAO,CACLjB,MAAO,UACPoF,SAAU,OACVtF,WAAY,yBAKpBsC,OAAQ,CACN,CACEqD,KAAM,OACNC,KAAMtD,KAKZ,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAACuD,EAAD,KACE,kBAAC,EAAD,CAAUxE,MAAOgB,IACjB,kBAAC,EAAD,KACE,kBAAC4D,EAAD,KACGE,EACAC,GAEH,kBAACL,EAAD,KACgB,OAAbd,EACC,0BAAM9D,MAAO,CAAEjB,MAAO,YACpB,kBAAC,IAAD,OAEa,SAAb+E,EACF,0BAAM9D,MAAO,CAAEjB,MAAO,YACnB,IACD,kBAAC,IAAD,OAGF,GAEF,0BAAMiB,MAAO,CAAEwF,WAAY,IACzB,0BAAMxF,MAAO,CAAEjB,MAAO,YAAcoG,GADtC,OAGGD,OAOX,kBAAC,EAAD,CAAYlF,MAAO,CAAE1B,QAAS,UAC5B,kBAACwE,EAAD,CACExB,QAASA,EAAQA,QACjBH,OAAQG,EAAQH,OAChB7B,OAAO,MACPD,MAAM,OACNoD,KAAK,WCzIFpC,EAAcjC,YAAO,OAAO,iBAAO,CAC9CiB,MAAO,OACPf,QAAS,OACTE,eAAgB,aAChBD,WAAY,aAGDkH,EAAMrH,YAAO,QAAQ,iBAAO,CACvCiB,MAAO,OACPC,OAAQ,OACRkB,YAAa,OACblC,QAAS,WAGEoC,EAAUtC,YAAO,OAAO,iBAAO,CAC1CE,QAAS,OACTiB,cAAe,aAGJqF,EAAYxG,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACnCA,EAAOC,WAAWiC,OADiB,CAEtC/B,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAO6B,WACrB8D,UAAW,YAGAG,EAAa1G,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACpCA,EAAOC,WAAWqC,WADkB,CAEvCnC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,cCuDR8F,EA7EE,SAAC,GAAmD,IAAjD5D,EAAgD,EAAhDA,OAAQuE,EAAwC,EAAxCA,KAAM7C,EAAkC,EAAlCA,OAAQmC,EAA0B,EAA1BA,OAAQhG,EAAkB,EAAlBA,OAC1CsC,EAAU,CACdA,QAAS,CACPtC,OAAQA,EACRqD,WAAY,CACVJ,SAAS,GAEXY,OAAQA,EACR8C,OAAQ,CACN9D,MAAM,GAERc,OAAQ,CACNd,MAAM,GAERS,OAAQ,CACNC,MAAO,CACLC,OAAQ,CACNC,KAAM,SACNC,MAAO,MAIbnB,YAAa,CACXqE,IAAK,CACHC,MAAO,GACPC,eAAe,KAIrB3E,OAAQA,GAGJ4E,EAAmB,SAAAC,GACvB,OAAOA,EAAIC,WAAWC,QAAQ,wBAAyB,MAGzD,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAACT,EAAD,KAAMC,EAAK,IACX,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAY1F,MAAO,CAAEjB,MAAOC,EAAO,KAChCgG,EACAe,EAAiB5E,EAAO,KAE3B,kBAAC,EAAD,KAAY0B,EAAO,OAKzB,kBAAC,EAAD,CAAY7C,MAAO,CAAE1B,QAAS,UAC5B,kBAACwE,EAAD,CACExB,QAASA,EAAQA,QACjBH,OAAQG,EAAQH,OAEhB9B,MAAM,OACNoD,KAAK,WAIT,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAazC,MAAO,CAAET,cAAe,gBACnC,kBAACkG,EAAD,CAAKzF,MAAO,CAAEQ,YAAa,IAAKgF,WAAY,SAAWE,EAAK,IAC5D,kBAAC,EAAD,CAAS1F,MAAO,CAAEzB,WAAY,aAC5B,kBAAC,EAAD,CAAYyB,MAAO,CAAEjB,MAAOC,EAAO,KAChCgG,EACAe,EAAiB5E,EAAO,KAE3B,kBAAC,EAAD,KAAY0B,EAAO,SCiDhBsD,EA7HI,SAAC,GAOR,IANVjF,EAMS,EANTA,YACAC,EAKS,EALTA,OAEA0B,GAGS,EAJT6C,KAIS,EAHT7C,QAEA7D,GACS,EAFTgG,OAES,EADThG,QAEMsC,EAAU,CACdA,QAAS,CACPgC,MAAO,CACL8C,KAAM,CACJnE,SAAS,GAEXsB,QAAS,CACP1B,MAAM,IAGV7C,OAAQA,EACRqD,WAAY,CACVJ,SAAS,GAEX+B,KAAM,CACJvB,KAAM,SAERE,OAAQ,CACNd,MAAM,EACN2B,MAAO,UAETmC,OAAQ,CACN9D,MAAM,GAER4B,MAAO,CACLhB,KAAM,WACNW,WAAYP,EACZA,OAAQ,CACNhB,MAAM,EACN7B,MAAO,CACLhB,OAAQ,UACRmF,SAAU,OACVtF,WAAY,uBAGhB6E,WAAY,CACV7B,MAAM,GAER8B,UAAW,CACT9B,MAAM,GAER+B,WAAY,CACV/B,MAAM,EACNxC,MAAO,EACPwE,UAAW,EACXC,SAAU,OACV/B,QAAS,EACTY,OAAQ,CACN5D,MAAO,cACPM,MAAO,EACP0E,UAAW,GAEbC,KAAM,CACJvB,KAAM,QACN1D,MAAO,YAGXkF,QAAS,CACPhC,SAAS,IAGbiC,MAAO,CACLrC,MAAM,EACNgB,OAAQ,CACNhB,MAAM,EACN7B,MAAO,CACLjB,MAAO,UACPoF,SAAU,OACVtF,WAAY,wBAIlBuF,KAAM,CACJC,YAAa,UACbZ,MAAO,CACL8B,MAAO,CACL1D,MAAM,KAIZyC,QAAS,CACP5C,KAAM,EACNK,QAAS,EACT/C,OAAQA,EACRuF,YAAa,OACbzC,YAAa,EACbS,MAAO,CACLb,KAAM,KAIZP,OAAQ,CACN,CACEqD,KAAM,GACNC,KAAMtD,KAKZ,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUjB,MAAOgB,KAGnB,kBAAC,EAAD,CAAYlB,MAAO,CAAE1B,QAAS,UAC5B,kBAACwE,EAAD,CACExB,QAASA,EAAQA,QACjBH,OAAQG,EAAQH,OAChB9B,MAAM,OACNoD,KAAK,YC3GF/B,GAbatC,YAAO,OAAO,iBAAO,CAC7CiB,MAAO,OACPf,QAAS,OACTiB,cAAe,aAGEnB,YAAO,QAAQ,iBAAO,CACvCiB,MAAO,OACPC,OAAQ,OACRkB,YAAa,OACblC,QAAS,WAGYF,YAAO,OAAO,iBAAO,CAC1CE,QAAS,OACTiB,cAAe,cAGJqF,EAAYxG,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACnCA,EAAOC,WAAWiC,OADiB,CAEtC/B,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAO6B,gBAGViE,EAAa1G,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACpCA,EAAOC,WAAWqC,WADkB,CAEvCnC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,SACrB0F,UAAW,W,SC8GE0B,EAxIY,SAAC,GAMhB,IALVlF,EAKS,EALTA,OACAmF,EAIS,EAJTA,YACAC,EAGS,EAHTA,cACA1D,EAES,EAFTA,OACA7D,EACS,EADTA,OAEMsC,EAAU,CACdA,QAAS,CACPgC,MAAO,CACLC,QAAS,CACP1B,MAAM,IAGV7C,OAAQA,EACRqD,WAAY,CACVJ,SAAS,GAEX+B,KAAM,CACJvB,KAAM,WACN+D,SAAU,CACRC,YAAa,EACbC,UAAW,KAGf/D,OAAQ,CACNd,MAAM,EACNxC,MAAO,EACPmE,MAAO,SACPxE,OAAQA,GAEV2G,OAAQ,CACN9D,MAAM,GAER4B,MAAO,CACL5B,MAAM,EACNY,KAAM,WACNW,WAAYP,EACZA,OAAQ,CACNhB,MAAM,GAER6B,WAAY,CACV7B,MAAM,GAER8B,UAAW,CACT9B,MAAM,GAER+B,WAAY,CACV/B,MAAM,GAERoC,QAAS,CACPhC,SAAS,IAGbiC,MAAO,CACLrC,MAAM,GAERuC,KAAM,CACJvC,MAAM,GAERyC,QAAS,CACP5C,KAAM,EACNK,QAAS,EACT/C,OAAQ,CAAC,WACTuF,YAAa,OACbzC,YAAa,EACbS,MAAO,CACLb,KAAM,KAIZP,OAAQ,CACN,CACEqD,KAAM,GACNC,KAAMtD,KAKZ,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASnB,MAAO,CAAEwF,WAAY,SAC5B,kBAAC,EAAD,KAAYc,GACZ,kBAAC,EAAD,CAAYtG,MAAO,CAAEjB,MAAOC,EAAO,KAChCuH,EAAc,GAAG7D,MAAQ6D,EAAc,GAAG7D,MAD7C,OAMJ,kBAAC,EAAD,CAAY1C,MAAO,CAAE1B,QAAS,UAC5B,kBAACwE,EAAD,CACExB,QAASA,EAAQA,QACjBH,OAAQG,EAAQH,OAChB9B,MAAM,OACNoD,KAAK,UAIT,kBAAC,EAAD,CACEzC,MAAO,CAAExB,eAAgB,gBAAiBmI,WAAY,MAErDJ,GACCA,EAAcxD,KAAI,SAACC,EAAMC,GAAP,OAChB,kBAAC,EAAD,CAASC,IAAKD,GACZ,kBAAC,EAAD,KAAYD,EAAK5B,OACjB,kBAAC,EAAD,KAAa4B,EAAK4D,WAClB,kBAAC5I,EAAA,EAAD,CACE0E,MAAOM,EAAKN,MACZmE,aAAc,IACdC,UAAW,CACTC,IAAK,CACH/G,MAAO,WACL,MAAO,CACLR,gBAAiB,UACjBgG,WAAY,MACZhF,YAAa,SAInBwG,YAAa,CACXhH,MAAO,WACL,MAAO,CACLR,gBAAiBwD,EAAKjE,mBCxHjCkI,GAPO7I,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC9BA,EAAOC,WAAWqC,WADY,CAEjCnC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,cAGAb,YAAO,OAAO,iBAAO,CAC1CiB,MAAO,OACPf,QAAS,OACTD,QAAS,YACTc,OAAQ,SAER,4CAA6C,CAC3CI,cAAe,eAIN2H,EAAc9I,YAAO,OAAO,iBAAO,CAC9CiB,MAAO,MACP8H,UAAW,QACX7I,QAAS,OACTiB,cAAe,SAEf,4CAA6C,CAC3CF,MAAO,YAIE+H,EAAiBhJ,YAAO,OAAO,iBAAO,CACjDiB,MAAO,OACPf,QAAS,OACTiB,cAAe,SACfuB,aAAc,OACduG,aAAc,OAEd,cAAe,CACbvG,aAAc,SAILwG,EAA0BlJ,YAAO,OAAO,iBAAO,CAC1DiB,MAAO,OACPf,QAAS,OACTC,WAAY,eAGDgJ,EAAgBnJ,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACvCA,EAAOC,WAAW6I,WADqB,CAE1C3I,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,cAGVwI,EAAiBrJ,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACxCA,EAAOC,WAAW+I,WADsB,CAE3C7I,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,SACrBuG,WAAY,YAGDmC,EAAavJ,YAAO,OAAO,iBAAO,CAC7CiB,MAAO,OACPf,QAAS,OACTsJ,UAAW,wBAGAC,EAAgBzJ,YAAO,OAAO,iBAAO,CAChD0J,SAAU,OACVxJ,QAAS,OACTmC,WAAY,IACZpC,QAAS,SACTG,eAAgB,eAEhB,6CAA8C,CAC5CqB,SAAU,OACVR,MAAO,YAIE0I,GAAsB3J,YAAO,OAAO,iBAAO,CACtDiB,MAAO,OACPf,QAAS,OACTiB,cAAe,SACff,eAAgB,gBAChBH,QAAS,YAET,6CAA8C,CAC5CgB,MAAO,WAIE2I,GAAkB5J,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACzCA,EAAOC,WAAWiC,OADuB,CAE5C/B,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,IACZH,MAAOL,EAAOM,OAAO6B,WACrBC,aAAc,OACdxC,QAAS,OACTC,WAAY,SACZ0J,WAAY,cAGDC,GAAkB9J,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBACzCA,EAAOC,WAAWqC,WADuB,CAE5CnC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,IACZH,MAAOL,EAAOM,OAAOC,cAGVkJ,GAAkB/J,YAAO,QAAQ,iBAAO,CACnDiB,MAAO,OACPC,OAAQ,OACRhB,QAAS,eACTmB,aAAc,MACde,YAAa,UAGF4H,GAAgBhK,YAAO,OAAO,cAAGM,OAAH,MAAiB,CAC1DW,MAAO,MACPf,QAAS,OACTiB,cAAe,SACfhB,WAAY,SACZC,eAAgB,SAChBH,QAAS,mBAET,4CAA6C,CAC3CgB,MAAO,OACPsH,WAAY,SCjBD0B,GA9FG,SAAC,GAA8B,IAA5B5D,EAA2B,EAA3BA,KAAM6D,EAAqB,EAArBA,UACnBvC,EAAmB,SAAAC,GACvB,OAAOA,EAAIC,WAAWC,QAAQ,wBAAyB,MAOzD,OACE,kBAAC,EAAD,KACE,kBAACe,EAAD,KACE,kBAACmB,GAAD,KACE,kBAACJ,GAAD,KAAkBM,GAClB,kBAACJ,GAAD,KACGnC,EAAiBtB,EAAK8D,QAAO,SAACC,EAAD,UAAkBA,EAAlB,EAAM9F,QAAuB,MAI/D,kBAACwE,EAAD,KACGzC,EAAK1B,KAAI,SAACC,EAAMC,GAAP,OACR,kBAACmE,EAAD,CAAgBlE,IAAKD,GACnB,kBAACqE,EAAD,KACE,kBAACC,EAAD,KAAgBvE,EAAKwB,MACrB,kBAACiD,EAAD,SACI1B,EAAiB/C,EAAKN,OAD1B,MAIF,kBAAC1E,EAAA,EAAD,CACE0E,OAxBWsD,EAyBThD,EAAKN,MAzBS+F,EA0BdhE,EAAK8D,QAAO,SAACC,EAAD,UAAkBA,EAAlB,EAAM9F,QAAuB,GAzBzC,IAANsD,EAAayC,GA2BT5B,aAAc,IACdC,UAAW,CACTC,IAAK,CACH/G,MAAO,WACL,MAAO,CACLR,gBAAiB,UACjBgG,WAAY,MACZhF,YAAa,MACblB,OAAQ,OACRoJ,oBAAqB,MACrBC,qBAAsB,MACtBC,uBAAwB,MACxBC,wBAAyB,MACzB/E,SAAU,cAIhBkD,YAAa,CACXhH,MAAO,YAAyB,IAAtBtB,EAAqB,EAArBA,OAAQoK,EAAa,EAAbA,OAChB,MAAO,CACLtJ,gBAAiBwD,EAAKjE,MACtB2J,oBAAqB,MACrBC,qBAAsB,MACtBC,uBAAwB,MACxBC,wBAAyB,MACzB,SAAS,aACPE,QAASD,EAAS,EAAT,WAAiBE,KAAKC,MAAMH,GAA5B,MAA0C,IAChDpK,EAAOC,WAAWuK,WAFvB,CAGErK,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,SACrB6E,SAAU,WACV5B,IAAK,OACLiH,MAAO,iBA7DP,IAACnD,EAAKyC,OAwE1B,kBAACd,EAAD,KACE,kBAACE,EAAD,KACGpD,EAAK1B,KAAI,SAACC,EAAMC,GAAP,OACR,kBAAC8E,GAAD,CAAqB7E,IAAKD,GACxB,kBAAC+E,GAAD,KACE,kBAACG,GAAD,CAAiBnI,MAAO,CAAER,gBAAiBwD,EAAKjE,SAC/CiE,EAAKwB,MAER,kBAAC0D,GAAD,KAAkBnC,EAAiB/C,EAAKN,gBCvGzC0G,GAAOhL,YAAO,OAAO,iBAAO,CACvCiB,MAAO,OACPC,OAAQ,OACRhB,QAAS,OACTiB,cAAe,SACflB,QAAS,OACToB,aAAc,MACdD,gBAAiB,cAGN6J,GAAUjL,YAAO,OAAO,iBAAO,CAC1CiB,MAAO,OACPf,QAAS,OACTE,eAAgB,gBAChBsC,aAAc,WAGH3C,GAAeC,YAAO,OAAO,iBAAO,CAC/CiB,MAAO,oBACPf,QAAS,OACTiB,cAAe,aAGJoB,GAAQvC,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC/BA,EAAOC,WAAWC,WADa,CAElCC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,SACrB6B,aAAc,YAGHwI,GAAWlL,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAClCA,EAAOC,WAAWuK,WADgB,CAErCrK,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAO6B,WACrBC,aAAc,WAGHyI,GAAUnL,YAAO,OAAO,cAAGM,OAAH,MAAiB,CACpDW,MAAO,OACPC,OAAQ,OACRhB,QAAS,OACTE,eAAgB,SAChBD,WAAY,aAGDiL,GAAQpL,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC/BA,EAAOC,WAAWqC,WADa,CAElCnC,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZH,MAAOL,EAAOM,OAAOC,SACrB6B,aAAc,YAGHC,GAAO3C,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC9BA,EAAOC,WAAW6I,WADY,CAEjC3I,WAAYH,EAAOC,WAAWG,kBAC9BI,WAAY,MACZ4B,aAAc,YAGH2I,GAAOrL,YAAO,QAAQ,gBAAGM,EAAH,EAAGA,OAAH,sBAC9BA,EAAOC,WAAWkG,OADY,CAEjChG,WAAYH,EAAOC,WAAWG,kBAC9BC,MAAOL,EAAOM,OAAO6B,WACrB3B,WAAY,WAGDwK,GAAOtL,YAAO,KAAK,gBAAGM,EAAH,EAAGA,OAAH,sBAC3BA,EAAOC,WAAWuK,WADS,CAE9BrK,WAAYH,EAAOC,WAAWG,kBAC9BC,MAAOL,EAAOM,OAAO2K,UACrBzK,WAAY,MACZ0K,eAAgB,YCZHC,GAjDK,SAAC,GAUT,IATV3J,EASS,EATTA,MACA4J,EAQS,EARTA,SACApE,EAOS,EAPTA,KACAqE,EAMS,EANTA,MACAC,EAKS,EALTA,UACAC,EAIS,EAJTA,cACAC,EAGS,EAHTA,KACAC,EAES,EAFTA,KACAC,EACS,EADTA,SAEA,OACE,kBAAChB,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAQnJ,GACR,kBAACoJ,GAAD,KAAWQ,IAGb,kBAACP,GAAD,KAAU7D,IAGZ,kBAAC8D,GAAD,KAAQO,GACO,KAAdC,EACe,OAAdA,EACE,kBAAC,GAAD,CAAMhK,MAAO,CAAEjB,MAAO,YACpB,kBAAC,IAAD,CAAYM,MAAM,MAAMC,OAAO,SADjC,IAC4C2K,EAC1C,kBAACR,GAAD,SAAQS,IAEM,SAAdF,EACF,kBAAC,GAAD,CAAMhK,MAAO,CAAEjB,MAAO,YACpB,kBAAC,IAAD,CAAcM,MAAM,MAAMC,OAAO,SADnC,IAC8C2K,EAC5C,kBAACR,GAAD,SAAQS,IAGV,GAGF,GAEQ,KAATC,GACC,kBAACT,GAAD,CAAMW,KAAMF,EAAMG,OAAO,UACtBF,KCrCLG,GAAMnM,YAAOoM,KAAQ,SAAAvM,GAAK,MAAK,CACnC,4CAA6C,CAC3C6C,aAAc,OAEd,cAAe,CACbA,aAAc,IAIlB,4CAA6C,CAC3CA,aAAkC,UAApB7C,EAAMwM,UAAwB,OAAS,SA0N1CC,UAtNG,kBAChB,kBAAC,IAAD,CAAMC,OAAO,GACX,kBAAC,IAAD,KACE,kBAACJ,GAAD,CAAKK,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAAC,EAAD,CACE5J,YAAY,SACZC,OAAQ,CAAC,GAAI,IACbC,MAAO,CAAC,SAAU,UAClBpC,OAAQ,CAAC,UAAW,WACpBqC,WAAY,CAAC,iBAAkB,sBAGnC,kBAACkJ,GAAD,CAAKK,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrB,kBAAC,EAAD,CACE5J,YAAY,gBACZnC,MAAO,CAAC,WACRqE,WAAY,CACV,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEFC,WAAW,kBAEXlC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAKtE,kBAAC,IAAD,KACE,kBAACoJ,GAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIN,UAAU,SACnC,kBAAC,GAAD,CACEvK,MAAM,gBACN4J,SAAS,iBACTpE,KAAM,kBAAC,IAAD,MACNqE,MAAM,UACNC,UAAU,KACVC,cAAc,aACdC,KAAK,qBACLC,KAAK,IACLC,SAAS,kBAGb,kBAACG,GAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIN,UAAU,SACnC,kBAAC,GAAD,CACEvK,MAAM,cACN4J,SAAS,iBACTpE,KAAM,kBAAC,IAAD,MACNqE,MAAM,SACNC,UAAU,OACVC,cAAc,aACdC,KAAK,qBACLC,KAAK,IACLC,SAAS,kBAGb,kBAACG,GAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACrB,kBAAC,GAAD,CACE7K,MAAM,eACN4J,SAAS,iBACTpE,KAAM,kBAAC,KAAD,MACNqE,MAAM,QACNC,UAAU,KACVC,cAAc,cACdC,KAAK,qBACLC,KAAK,IACLC,SAAS,kBAGb,kBAACG,GAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACrB,kBAAC,GAAD,CACE7K,MAAM,iBACN4J,SAAS,iBACTpE,KAAM,kBAAC,IAAD,MACNqE,MAAM,SACNC,UAAU,KACVC,cAAc,cACdC,KAAK,qBACLC,KAAK,IACLC,SAAS,mBAKf,kBAAC,IAAD,KACE,kBAACG,GAAD,CAAKK,GAAI,EAAGC,GAAI,GACd,kBAACG,EAAD,CACE9J,YAAY,0BACZlC,OAAQ,CAAC,WACTmC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC0B,OAAQ,CACN,aACA,aACA,aACA,aACA,aACA,aACA,iBAKN,kBAAC0H,GAAD,CAAKK,GAAI,EAAGC,GAAI,GACd,kBAACI,EAAD,CACE/J,YAAY,SACZC,OAAQ,CAAC,MAAO,MAChB0B,OAAQ,CAAC,iBAAkB,iBAC3B7D,OAAQ,CAAC,UAAW,WACpBqC,WAAY,CAAC,iBAAkB,mBAC/BqE,KAAM,CAAC,kBAAC,IAAD,MAAa,kBAAC,IAAD,OACpBV,OAAO,QAKb,kBAAC,IAAD,KACE,kBAACuF,GAAD,CAAKK,GAAI,GAAIC,GAAI,IACf,kBAACK,EAAD,CACEhK,YAAY,eACZlC,OAAQ,CAAC,WACTgG,OAAO,IACPC,WAAW,WACXnB,SAAS,KACTqB,WAAW,QACXD,KAAK,sBACL/D,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrDiC,WAAY,CACV,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,gBAKR,kBAAC,IAAD,KACE,kBAACmH,GAAD,CAAKK,GAAI,EAAGC,GAAI,GACd,kBAAC,EAAD,CACE7L,OAAQ,CAAC,WACTmC,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC0B,OAAQ,CACN,aACA,aACA,aACA,aACA,aACA,aACA,cAEFyD,YAAY,cACZC,cAAe,CACb,CACEnF,MAAO,mBACPwF,UAAW,SACXlE,MAAO,KACP3D,MAAO,WAET,CACEqC,MAAO,mBACPwF,UAAW,SACXlE,MAAO,KACP3D,MAAO,eAMf,kBAACwL,GAAD,CAAKK,GAAI,EAAGC,GAAI,GACd,kBAAC,GAAD,CACEpG,KAAM,CACJ,CACED,KAAM,eACN9B,MAAO,MACP3D,MAAO,WAET,CACEyF,KAAM,WACN9B,MAAO,MACP3D,MAAO,WAET,CACEyF,KAAM,WACN9B,MAAO,MACP3D,MAAO,WAET,CACEyF,KAAM,cACN9B,MAAO,MACP3D,MAAO,YAGXuJ,UAAU","file":"static/js/23.a0b0503b.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ProgressBar as BWProgressBar } from 'baseui/progress-bar';\n\nconst ProgressBar = ({ ...props }) => {\n  return <BWProgressBar {...props} />;\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst Charts = ({ ...props }) => {\n  return <Chart {...props} />;\n};\n\nexport default Charts;\n","import { styled } from \"baseui\";\n\nexport const TitleWrapper = styled(\"div\", () => ({\n  padding: \"30px\",\n  display: \"flex\",\n  alignItems: \"flex-start\",\n  justifyContent: \"space-betwween\"\n}));\n\nexport const BoxHeading = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.fontBold16,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textDark,\n  lineHeight: \"1.3\",\n  margin: 0,\n\n  \"@media only screen and (max-width: 767px)\": {\n    display: \"block\"\n  }\n}));\n\nconst BoxWrapper = styled(\"div\", () => ({\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  backgroundColor: \"#ffffff\",\n  borderRadius: \"3px\",\n  boxShadow: \"0 21px 36px rgba(0, 0, 0, 0.03)\",\n  overflow: \"hidden\"\n}));\n\nexport const BoxContentWrapper = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  flexWrap: \"wrap\"\n}));\n\nexport default BoxWrapper;\n","import React from 'react';\nimport BoxWrapper, {\n  BoxHeading,\n  TitleWrapper,\n  BoxContentWrapper,\n} from './Box.style';\n\ntype BoxTitleProps = {\n  title: string;\n};\n\ntype BoxProps = {\n  children: React.ReactNode;\n  style?: any;\n};\n\nexport const BoxTitleWrapper: React.FC<BoxProps> = ({ children, style }) => {\n  return <TitleWrapper style={style}>{children}</TitleWrapper>;\n};\n\nexport const BoxTitle: React.FC<BoxTitleProps> = ({ title }) => {\n  return <BoxHeading>{title}</BoxHeading>;\n};\n\nexport const Box = ({ children }: any) => {\n  return <BoxWrapper>{children}</BoxWrapper>;\n};\n\nexport const BoxContent: React.FC<BoxProps> = ({ children, style }) => {\n  return <BoxContentWrapper style={style}>{children}</BoxContentWrapper>;\n};\n","import { styled } from 'baseui';\n\nexport const ChartLabels = styled('div', () => ({\n  width: '100%',\n  padding: '15px 10px 30px',\n  display: 'flex',\n  justifyContent: 'space-around',\n  alignItems: 'flex-start',\n}));\n\nexport const Label = styled('div', () => ({\n  padding: '0 10px',\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'flex-start',\n}));\n\nexport const Color = styled('span', () => ({\n  width: '15px',\n  height: '15px',\n  borderRadius: '50%',\n  marginRight: '10px',\n  display: 'flex',\n  flexShrink: '0',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const Title = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n  marginBottom: '10px',\n}));\n\nexport const Text = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n}));\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitle, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\nimport {\n  ChartLabels,\n  Label,\n  Color,\n  Content,\n  Title,\n  Text\n} from \"./RadialBarChart.style\";\n\nconst RadialBarChart = ({\n  widgetTitle,\n  series,\n  colors,\n  label,\n  helperText\n}: any) => {\n  const options = {\n    options: {\n      colors: colors,\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            margin: 0,\n            size: \"20%\",\n            background: \"transparent\"\n          },\n\n          track: {\n            show: true,\n            background: \"#F2F3FC\",\n            strokeWidth: \"100%\",\n            opacity: 1,\n            margin: 15,\n            dropShadow: {\n              enabled: false,\n              top: 0,\n              left: 0,\n              blur: 3,\n              opacity: 0.5\n            }\n          },\n\n          dataLabels: {\n            show: false\n          }\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: \"darken\",\n            value: 0.8\n          }\n        }\n      },\n      stroke: {\n        lineCap: \"round\"\n      },\n      labels: label\n    },\n    series: series\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <BoxTitle title={widgetTitle} />\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          type=\"radialBar\"\n          width=\"100%\"\n        />\n\n        <ChartLabels>\n          {label &&\n            label.map((item, index) => (\n              <Label key={index}>\n                <Color style={{ backgroundColor: colors[index] }} />\n                <Content>\n                  <Title>{helperText[index]}</Title>\n                  <Text>{label[index]}</Text>\n                </Content>\n              </Label>\n            ))}\n        </ChartLabels>\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default RadialBarChart;\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitle, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\n\nconst LineChart = ({\n  widgetTitle,\n  series,\n  color,\n  categories,\n  seriesName = \"\"\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        type: \"line\",\n        dropShadow: {\n          enabled: true,\n          color: color,\n          top: 18,\n          left: 0,\n          blur: 3.5,\n          opacity: 0.15\n        },\n        toolbar: {\n          show: false\n        }\n      },\n      stroke: {\n        width: 7,\n        curve: \"smooth\"\n      },\n      xaxis: {\n        categories: categories,\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        crosshairs: {\n          show: true,\n          width: 5,\n          tickWidth: 0,\n          position: \"back\",\n          opacity: 1,\n          stroke: {\n            color: \"#b6b6b6\",\n            width: 0,\n            dashArray: 0\n          },\n          fill: {\n            type: \"solid\",\n            color: \"#F2F3FC\"\n          }\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        show: true,\n        labels: {\n          show: true,\n          style: {\n            color: \"#161F6A\",\n            fontSize: \"14px\",\n            fontFamily: \"'Lato', sans-serif\"\n          }\n        }\n      },\n      grid: {\n        borderColor: \"#F7F7F7\"\n      },\n      colors: color,\n      markers: {\n        size: 0,\n        opacity: 1,\n        colors: color,\n        strokeColor: \"#fff\",\n        strokeWidth: 4,\n        hover: {\n          size: 8\n        }\n      }\n    },\n    series: [\n      {\n        name: seriesName,\n        data: series\n      }\n    ]\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <BoxTitle title={widgetTitle} />\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          height=\"350\"\n          width=\"97%\"\n        />\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default LineChart;\n","import { styled } from 'baseui';\n\nexport const ContentWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'flex-start',\n\n  '@media only screen and (max-width: 990px)': {\n    flexDirection: 'column',\n  },\n}));\n\nexport const Legend = styled('div', () => ({\n  display: 'flex',\n  alignItems: 'center',\n}));\n\nexport const Label = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n}));\n\nexport const Color = styled('span', () => ({\n  width: '15px',\n  height: '15px',\n  borderRadius: '50%',\n  marginRight: '15px',\n  display: 'flex',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n\n  '@media only screen and (max-width: 767px)': {\n    marginTop: '20px',\n  },\n}));\n\nexport const LabelText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n  marginTop: '10px',\n}));\n\nexport const SeriesText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: '#00C58D',\n}));\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitle, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\nimport {\n  ContentWrapper,\n  Content,\n  LabelText,\n  SeriesText\n} from \"./ColumnChart.style\";\nimport { ArrowUp, ArrowDown } from \"../../AllSvgIcon\";\n\nconst BarChart = ({\n  widgetTitle,\n  series,\n  colors,\n  prefix,\n  totalValue,\n  text,\n  position,\n  percentage,\n  categories\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: \"65%\",\n          endingShape: \"flat\"\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: false,\n        width: 2\n      },\n      // responsive: [\n      //   {\n      //     breakpoint: 720,\n      //     options: {\n      //       plotOptions: {\n      //         bar: {\n      //           horizontal: true\n      //         }\n      //       }\n      //     }\n      //   }\n      // ],\n      grid: {\n        borderColor: \"#F7F7F7\",\n        xaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      colors: colors,\n      xaxis: {\n        labels: {\n          show: true,\n          style: {\n            colors: \"#161F6A\",\n            fontSize: \"14px\",\n            fontFamily: \"'Lato', sans-serif\"\n          }\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: categories\n      },\n      yaxis: {\n        show: true,\n        labels: {\n          show: true,\n          style: {\n            color: \"#161F6A\",\n            fontSize: \"14px\",\n            fontFamily: \"'Lato', sans-serif\"\n          }\n        }\n      }\n    },\n    series: [\n      {\n        name: \"Sale\",\n        data: series\n      }\n    ]\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <ContentWrapper>\n          <BoxTitle title={widgetTitle} />\n          <Content>\n            <SeriesText>\n              {prefix}\n              {totalValue}\n            </SeriesText>\n            <LabelText>\n              {position === \"up\" ? (\n                <span style={{ color: \"#00C58D\" }}>\n                  <ArrowUp />\n                </span>\n              ) : position === \"down\" ? (\n                <span style={{ color: \"#fc4a71\" }}>\n                  {\" \"}\n                  <ArrowDown />\n                </span>\n              ) : (\n                \"\"\n              )}\n              <span style={{ marginLeft: 5 }}>\n                <span style={{ color: \"#00C58D\" }}>{percentage}</span>\n                &nbsp;\n                {text}\n              </span>\n            </LabelText>\n          </Content>\n        </ContentWrapper>\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          height=\"350\"\n          width=\"100%\"\n          type=\"bar\"\n        />\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default BarChart;\n","import { styled } from 'baseui';\n\nexport const ChartLabels = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n}));\n\nexport const Img = styled('span', () => ({\n  width: '56px',\n  height: '56px',\n  marginRight: '15px',\n  display: 'flex',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const LabelText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n  marginTop: '10px',\n}));\n\nexport const SeriesText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n}));\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\nimport {\n  ChartLabels,\n  Img,\n  Content,\n  LabelText,\n  SeriesText\n} from \"./DonutChart.style\";\n\nconst BarChart = ({ series, icon, labels, prefix, colors }: any) => {\n  const options = {\n    options: {\n      colors: colors,\n      dataLabels: {\n        enabled: false\n      },\n      labels: labels,\n      legend: {\n        show: false\n      },\n      stroke: {\n        show: false\n      },\n      states: {\n        hover: {\n          filter: {\n            type: \"darken\",\n            value: 0.8\n          }\n        }\n      },\n      plotOptions: {\n        pie: {\n          donut: {},\n          expandOnClick: false\n        }\n      }\n    },\n    series: series\n  };\n\n  const numberWithCommas = num => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <ChartLabels>\n          <Img>{icon[0]}</Img>\n          <Content>\n            <SeriesText style={{ color: colors[0] }}>\n              {prefix}\n              {numberWithCommas(series[0])}\n            </SeriesText>\n            <LabelText>{labels[0]}</LabelText>\n          </Content>\n        </ChartLabels>\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          // height=\"350\"\n          width=\"100%\"\n          type=\"donut\"\n        />\n      </BoxContent>\n\n      <BoxTitleWrapper>\n        <ChartLabels style={{ flexDirection: \"row-reverse\" }}>\n          <Img style={{ marginRight: \"0\", marginLeft: \"15px\" }}>{icon[1]}</Img>\n          <Content style={{ alignItems: \"flex-end\" }}>\n            <SeriesText style={{ color: colors[1] }}>\n              {prefix}\n              {numberWithCommas(series[1])}\n            </SeriesText>\n            <LabelText>{labels[1]}</LabelText>\n          </Content>\n        </ChartLabels>\n      </BoxTitleWrapper>\n    </Box>\n  );\n};\n\nexport default BarChart;\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitleWrapper, BoxContent, BoxTitle } from \"../../Box/Box\";\n\nconst GrpahChart = ({\n  widgetTitle,\n  series,\n  icon,\n  labels,\n  prefix,\n  colors\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        zoom: {\n          enabled: false\n        },\n        toolbar: {\n          show: false\n        }\n      },\n      colors: colors,\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"solid\"\n      },\n      stroke: {\n        show: false,\n        curve: \"smooth\"\n      },\n      legend: {\n        show: true\n      },\n      xaxis: {\n        type: \"datetime\",\n        categories: labels,\n        labels: {\n          show: true,\n          style: {\n            colors: \"#161F6A\",\n            fontSize: \"14px\",\n            fontFamily: \"'Lato', sans-serif\"\n          }\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        crosshairs: {\n          show: true,\n          width: 1,\n          tickWidth: 0,\n          position: \"back\",\n          opacity: 1,\n          stroke: {\n            color: \"transparent\",\n            width: 0,\n            dashArray: 0\n          },\n          fill: {\n            type: \"solid\",\n            color: \"#F2F3FC\"\n          }\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        show: true,\n        labels: {\n          show: true,\n          style: {\n            color: \"#161F6A\",\n            fontSize: \"14px\",\n            fontFamily: \"'Lato', sans-serif\"\n          }\n        }\n      },\n      grid: {\n        borderColor: \"#F7F7F7\",\n        xaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        size: 0,\n        opacity: 1,\n        colors: colors,\n        strokeColor: \"#fff\",\n        strokeWidth: 4,\n        hover: {\n          size: 8\n        }\n      }\n    },\n    series: [\n      {\n        name: \"\",\n        data: series\n      }\n    ]\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <BoxTitle title={widgetTitle} />\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          width=\"100%\"\n          type=\"area\"\n        />\n      </BoxContent>\n    </Box>\n  );\n};\n\nexport default GrpahChart;\n","import { styled } from 'baseui';\n\nexport const TopbarInfo = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const Img = styled('span', () => ({\n  width: '56px',\n  height: '56px',\n  marginRight: '15px',\n  display: 'flex',\n}));\n\nexport const Content = styled('div', () => ({\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const LabelText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textNormal,\n}));\n\nexport const SeriesText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n  marginTop: '7px',\n}));\n","import React from \"react\";\nimport Chart from \"../../Charts/Chart\";\nimport { Box, BoxTitleWrapper, BoxContent } from \"../../Box/Box\";\nimport { Content, LabelText, SeriesText } from \"./GradiantGraphChart.style\";\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\n\nconst GradiantGraphChart = ({\n  series,\n  topRowTitle,\n  bottomRowData,\n  labels,\n  colors\n}: any) => {\n  const options = {\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      colors: colors,\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          opacityFrom: 1,\n          opacityTo: 0.7\n        }\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        curve: \"smooth\",\n        colors: colors\n      },\n      legend: {\n        show: true\n      },\n      xaxis: {\n        show: false,\n        type: \"datetime\",\n        categories: labels,\n        labels: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        crosshairs: {\n          show: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        show: false\n      },\n      grid: {\n        show: false\n      },\n      markers: {\n        size: 0,\n        opacity: 1,\n        colors: [\"#18D8BC\"],\n        strokeColor: \"#fff\",\n        strokeWidth: 4,\n        hover: {\n          size: 8\n        }\n      }\n    },\n    series: [\n      {\n        name: \"\",\n        data: series\n      }\n    ]\n  };\n\n  return (\n    <Box>\n      <BoxTitleWrapper>\n        <Content style={{ marginLeft: \"auto\" }}>\n          <LabelText>{topRowTitle}</LabelText>\n          <SeriesText style={{ color: colors[0] }}>\n            {bottomRowData[0].value - bottomRowData[1].value}%\n          </SeriesText>\n        </Content>\n      </BoxTitleWrapper>\n\n      <BoxContent style={{ display: \"block\" }}>\n        <Chart\n          options={options.options}\n          series={options.series}\n          width=\"100%\"\n          type=\"area\"\n        />\n      </BoxContent>\n\n      <BoxTitleWrapper\n        style={{ justifyContent: \"space-between\", paddingTop: \"0\" }}\n      >\n        {bottomRowData &&\n          bottomRowData.map((item, index) => (\n            <Content key={index}>\n              <LabelText>{item.label}</LabelText>\n              <SeriesText>{item.valueText}</SeriesText>\n              <ProgressBar\n                value={item.value}\n                successValue={100}\n                overrides={{\n                  Bar: {\n                    style: () => {\n                      return {\n                        backgroundColor: \"#F2F2F2\",\n                        marginLeft: \"0px\",\n                        marginRight: \"0px\"\n                      };\n                    }\n                  },\n                  BarProgress: {\n                    style: () => {\n                      return {\n                        backgroundColor: item.color\n                      };\n                    }\n                  }\n                }}\n              />\n            </Content>\n          ))}\n      </BoxTitleWrapper>\n    </Box>\n  );\n};\n\nexport default GradiantGraphChart;\n","import { styled } from \"baseui\";\n\nexport const Text = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark\n}));\n\nexport const TopPart = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  padding: \"50px 35px\",\n  margin: \"auto 0\",\n\n  \"@media only screen and (max-width: 600px)\": {\n    flexDirection: \"column\"\n  }\n}));\n\nexport const Progressbox = styled(\"div\", () => ({\n  width: \"60%\",\n  minHeight: \"150px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n\n  \"@media only screen and (max-width: 600px)\": {\n    width: \"100%\"\n  }\n}));\n\nexport const ProgressSingle = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  marginBottom: \"20px\",\n  paddingRight: \"50px\",\n\n  \":last-child\": {\n    marginBottom: \"0\"\n  }\n}));\n\nexport const ProgressBarTitleWrapper = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  alignItems: \"baseline\"\n}));\n\nexport const ProgressTitle = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark\n}));\n\nexport const ProgressNumber = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold12,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark,\n  marginLeft: \"10px\"\n}));\n\nexport const BottomPart = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  borderTop: \"1px solid #E5E9ED\"\n}));\n\nexport const MapLengendBox = styled(\"div\", () => ({\n  minWidth: \"100%\",\n  display: \"flex\",\n  flexShrink: \"0\",\n  padding: \"0 20px\",\n  justifyContent: \"space-around\",\n\n  \"@media only screen and (max-width: 1023px)\": {\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  }\n}));\n\nexport const MapLengendBoxSingle = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  padding: \"35px 15px\",\n\n  \"@media only screen and (max-width: 1023px)\": {\n    width: \"50%\"\n  }\n}));\n\nexport const MapLengendTitle = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1\",\n  color: $theme.colors.textNormal,\n  marginBottom: \"10px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  whiteSpace: \"nowrap\"\n}));\n\nexport const MapLengendValue = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1\",\n  color: $theme.colors.textDark\n}));\n\nexport const MapLengendColor = styled(\"span\", () => ({\n  width: \"10px\",\n  height: \"10px\",\n  display: \"inline-block\",\n  borderRadius: \"5px\",\n  marginRight: \"5px\"\n}));\n\nexport const TotalValueBox = styled(\"div\", ({ $theme }) => ({\n  width: \"40%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  padding: \"50px 30px 50px 0\",\n\n  \"@media only screen and (max-width: 600px)\": {\n    width: \"100%\",\n    paddingTop: \"0\"\n  }\n}));\n","import React from \"react\";\nimport { Box } from \"../../Box/Box\";\n\nimport {\n  TopPart,\n  Progressbox,\n  ProgressSingle,\n  ProgressTitle,\n  MapLengendTitle,\n  MapLengendValue,\n  ProgressBarTitleWrapper,\n  ProgressNumber,\n  TotalValueBox,\n  BottomPart,\n  MapLengendBox,\n  MapLengendBoxSingle,\n  MapLengendColor\n} from \"./MapWidget.style\";\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\n\nconst MapWidget = ({ data, totalText }: any) => {\n  const numberWithCommas = num => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const numberToPercent = (num, total) => {\n    return (num * 100) / total;\n  };\n\n  return (\n    <Box>\n      <TopPart>\n        <TotalValueBox>\n          <MapLengendTitle>{totalText}</MapLengendTitle>\n          <MapLengendValue>\n            {numberWithCommas(data.reduce((a, { value }) => a + value, 0))}\n          </MapLengendValue>\n        </TotalValueBox>\n\n        <Progressbox>\n          {data.map((item, index) => (\n            <ProgressSingle key={index}>\n              <ProgressBarTitleWrapper>\n                <ProgressTitle>{item.name}</ProgressTitle>\n                <ProgressNumber>\n                  ({numberWithCommas(item.value)})\n                </ProgressNumber>\n              </ProgressBarTitleWrapper>\n              <ProgressBar\n                value={numberToPercent(\n                  item.value,\n                  data.reduce((a, { value }) => a + value, 0)\n                )}\n                successValue={100}\n                overrides={{\n                  Bar: {\n                    style: () => {\n                      return {\n                        backgroundColor: \"#F2F2F2\",\n                        marginLeft: \"0px\",\n                        marginRight: \"0px\",\n                        height: \"10px\",\n                        borderTopLeftRadius: \"5px\",\n                        borderTopRightRadius: \"5px\",\n                        borderBottomLeftRadius: \"5px\",\n                        borderBottomRightRadius: \"5px\",\n                        position: \"relative\"\n                      };\n                    }\n                  },\n                  BarProgress: {\n                    style: ({ $theme, $value }) => {\n                      return {\n                        backgroundColor: item.color,\n                        borderTopLeftRadius: \"5px\",\n                        borderTopRightRadius: \"5px\",\n                        borderBottomLeftRadius: \"5px\",\n                        borderBottomRightRadius: \"5px\",\n                        \":after\": {\n                          content: $value > 5 ? `\"${Math.round($value)}%\"` : \"\",\n                          ...$theme.typography.fontBold13,\n                          fontFamily: $theme.typography.primaryFontFamily,\n                          lineHeight: \"1.2\",\n                          color: $theme.colors.textDark,\n                          position: \"absolute\",\n                          top: \"-2px\",\n                          right: \"-40px\"\n                        }\n                      };\n                    }\n                  }\n                }}\n              />\n            </ProgressSingle>\n          ))}\n        </Progressbox>\n      </TopPart>\n      <BottomPart>\n        <MapLengendBox>\n          {data.map((item, index) => (\n            <MapLengendBoxSingle key={index}>\n              <MapLengendTitle>\n                <MapLengendColor style={{ backgroundColor: item.color }} />\n                {item.name}\n              </MapLengendTitle>\n              <MapLengendValue>{numberWithCommas(item.value)}</MapLengendValue>\n            </MapLengendBoxSingle>\n          ))}\n        </MapLengendBox>\n      </BottomPart>\n    </Box>\n  );\n};\n\nexport default MapWidget;\n","import { styled } from \"baseui\";\n\nexport const Card = styled(\"div\", () => ({\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"30px\",\n  borderRadius: \"6px\",\n  backgroundColor: \"#ffffff\"\n}));\n\nexport const TopInfo = styled(\"div\", () => ({\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: \"50px\"\n}));\n\nexport const TitleWrapper = styled(\"div\", () => ({\n  width: \"calc(100% - 60px)\",\n  display: \"flex\",\n  flexDirection: \"column\"\n}));\n\nexport const Title = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold16,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark,\n  marginBottom: \"10px\"\n}));\n\nexport const SubTitle = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textNormal,\n  marginBottom: \"0px\"\n}));\n\nexport const IconBox = styled(\"div\", ({ $theme }) => ({\n  width: \"48px\",\n  height: \"48px\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n}));\n\nexport const Price = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold21,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  color: $theme.colors.textDark,\n  marginBottom: \"10px\"\n}));\n\nexport const Text = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: \"1.2\",\n  marginBottom: \"50px\"\n}));\n\nexport const Note = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textNormal,\n  lineHeight: \"1.2\"\n}));\n\nexport const Link = styled(\"a\", ({ $theme }) => ({\n  ...$theme.typography.fontBold13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.purple400,\n  lineHeight: \"1.2\",\n  textDecoration: \"none\"\n}));\n","import React from \"react\";\nimport {\n  Card,\n  TopInfo,\n  TitleWrapper,\n  Title,\n  SubTitle,\n  IconBox,\n  Price,\n  Note,\n  Text,\n  Link\n} from \"./StickerCard.style\";\nimport { IosArrowUp, IosArrowDown } from \"../../AllSvgIcon\";\n\nconst StickerCard = ({\n  title,\n  subtitle,\n  icon,\n  price,\n  indicator,\n  indicatorText,\n  note,\n  link,\n  linkText\n}: any) => {\n  return (\n    <Card>\n      <TopInfo>\n        <TitleWrapper>\n          <Title>{title}</Title>\n          <SubTitle>{subtitle}</SubTitle>\n        </TitleWrapper>\n\n        <IconBox>{icon}</IconBox>\n      </TopInfo>\n\n      <Price>{price}</Price>\n      {indicator !== \"\" ? (\n        indicator === \"up\" ? (\n          <Text style={{ color: \"#03D3B5\" }}>\n            <IosArrowUp width=\"9px\" height=\"11px\" /> {indicatorText}\n            <Note> {note}</Note>\n          </Text>\n        ) : indicator === \"down\" ? (\n          <Text style={{ color: \"#FC6687\" }}>\n            <IosArrowDown width=\"9px\" height=\"11px\" /> {indicatorText}\n            <Note> {note}</Note>\n          </Text>\n        ) : (\n          \"\"\n        )\n      ) : (\n        \"\"\n      )}\n      {link !== \"\" && (\n        <Link href={link} target=\"_blank\">\n          {linkText}\n        </Link>\n      )}\n    </Card>\n  );\n};\n\nexport default StickerCard;\n","import React from 'react';\nimport { styled } from 'baseui';\nimport { Grid, Row, Col as Column } from '../../components/FlexBox/FlexBox';\nimport RadialBarChart from '../../components/Widgets/RadialBarChart/RadialBarChart';\nimport LineChart from '../../components/Widgets/LineChart/LineChart';\nimport ColumnChart from '../../components/Widgets/ColumnChart/ColumnChart';\nimport DonutChart from '../../components/Widgets/DonutChart/DonutChart';\nimport GraphChart from '../../components/Widgets/GraphChart/GraphChart';\nimport GradiantGraphChart from '../../components/Widgets/GradiantGraphChart/GradiantGraphChart';\nimport MapWidget from '../../components/Widgets/MapWidget/MapWidget';\nimport StickerCard from '../../components/Widgets/StickerCard/StickerCard';\nimport {\n  Revenue,\n  Refund,\n  CoinIcon,\n  CartIconBig,\n  UserIcon,\n  DeliveryIcon,\n} from '../../components/AllSvgIcon';\n\nconst Col = styled(Column, props => ({\n  '@media only screen and (max-width: 574px)': {\n    marginBottom: '30px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n\n  '@media only screen and (max-width: 990px)': {\n    marginBottom: props.className === 'mb-30' ? '30px' : '0',\n  },\n}));\n\nconst Dashboard = () => (\n  <Grid fluid={true}>\n    <Row>\n      <Col md={5} lg={4} sm={6}>\n        <RadialBarChart\n          widgetTitle='Target'\n          series={[43, 75]}\n          label={['$1,342', '$8,908']}\n          colors={['#03D3B5', '#666d92']}\n          helperText={['Weekly Targets', 'Monthly Targets']}\n        />\n      </Col>\n      <Col md={7} lg={8} sm={6}>\n        <LineChart\n          widgetTitle='User Hit Rate'\n          color={['#03D3B5']}\n          categories={[\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n          ]}\n          seriesName='Unique visitors'\n          // series={[4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5]}\n          series={[200, 150, 430, 320, 600, 468, 309, 500, 273, 370, 260, 180]}\n        />\n      </Col>\n    </Row>\n\n    <Row>\n      <Col lg={3} sm={6} xs={12} className='mb-30'>\n        <StickerCard\n          title='Total Revenue'\n          subtitle='(Last 30 Days)'\n          icon={<CoinIcon />}\n          price='$711.66'\n          indicator='up'\n          indicatorText='Revenue up'\n          note='(previous 30 days)'\n          link='#'\n          linkText='Full Details'\n        />\n      </Col>\n      <Col lg={3} sm={6} xs={12} className='mb-30'>\n        <StickerCard\n          title='Total Order'\n          subtitle='(Last 30 Days)'\n          icon={<CartIconBig />}\n          price='88,568'\n          indicator='down'\n          indicatorText='Order down'\n          note='(previous 30 days)'\n          link='#'\n          linkText='Full Details'\n        />\n      </Col>\n      <Col lg={3} sm={6} xs={12}>\n        <StickerCard\n          title='New Customer'\n          subtitle='(Last 30 Days)'\n          icon={<UserIcon />}\n          price='5,678'\n          indicator='up'\n          indicatorText='Customer up'\n          note='(previous 30 days)'\n          link='#'\n          linkText='Full Details'\n        />\n      </Col>\n      <Col lg={3} sm={6} xs={12}>\n        <StickerCard\n          title='Total Delivery'\n          subtitle='(Last 30 Days)'\n          icon={<DeliveryIcon />}\n          price='78,000'\n          indicator='up'\n          indicatorText='Delivery up'\n          note='(previous 30 days)'\n          link='#'\n          linkText='Full Details'\n        />\n      </Col>\n    </Row>\n\n    <Row>\n      <Col md={7} lg={8}>\n        <GraphChart\n          widgetTitle='Sales From Social Media'\n          colors={['#03D3B5']}\n          series={[25, 30, 14, 30, 55, 60, 48]}\n          labels={[\n            '2019-05-12',\n            '2019-05-13',\n            '2019-05-14',\n            '2019-05-15',\n            '2019-05-16',\n            '2019-05-17',\n            '2019-05-18',\n          ]}\n        />\n      </Col>\n\n      <Col md={5} lg={4}>\n        <DonutChart\n          widgetTitle='Target'\n          series={[30634, 6340]}\n          labels={['Todays Revenue', 'Todays Refund']}\n          colors={['#03D3B5', '#666d92']}\n          helperText={['Weekly Targets', 'Monthly Targets']}\n          icon={[<Revenue />, <Refund />]}\n          prefix='$'\n        />\n      </Col>\n    </Row>\n\n    <Row>\n      <Col md={12} lg={12}>\n        <ColumnChart\n          widgetTitle='Sale History'\n          colors={['#03D3B5']}\n          prefix='$'\n          totalValue='1,92,564'\n          position='up'\n          percentage='1.38%'\n          text='More than last year'\n          series={[44, 55, 41, 67, 22, 43, 21, 33, 45, 31, 87, 65]}\n          categories={[\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n          ]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col md={5} lg={4}>\n        <GradiantGraphChart\n          colors={['#03D3B5']}\n          series={[25, 30, 14, 30, 55, 60, 48]}\n          labels={[\n            '2019-05-12',\n            '2019-05-13',\n            '2019-05-14',\n            '2019-05-15',\n            '2019-05-16',\n            '2019-05-17',\n            '2019-05-18',\n          ]}\n          topRowTitle='Performance'\n          bottomRowData={[\n            {\n              label: 'Last Week Profit',\n              valueText: '+29.7%',\n              value: 29.7,\n              color: '#03D3B5',\n            },\n            {\n              label: 'This Week Losses',\n              valueText: '-53.4%',\n              value: 53.4,\n              color: '#FC747A',\n            },\n          ]}\n        />\n      </Col>\n\n      <Col md={7} lg={8}>\n        <MapWidget\n          data={[\n            {\n              name: 'Williamburgs',\n              value: 69922,\n              color: '#2170FF',\n            },\n            {\n              name: 'Brooklyn',\n              value: 41953,\n              color: '#29CAE4',\n            },\n            {\n              name: 'New York',\n              value: 23307,\n              color: '#666D92',\n            },\n            {\n              name: 'Jersey City',\n              value: 20200,\n              color: '#03D3B5',\n            },\n          ]}\n          totalText='Total Client'\n        />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default Dashboard;\n"],"sourceRoot":""}