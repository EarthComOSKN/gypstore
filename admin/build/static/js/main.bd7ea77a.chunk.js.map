{"version":3,"sources":["settings/constants.ts","context/auth.tsx","theme/index.ts","components/InlineLoader/InlineLoader.tsx","routes.tsx","serviceWorker.ts","index.tsx"],"names":["DASHBOARD","PRODUCTS","CATEGORY","LOGIN","ORDERS","CUSTOMERS","COUPONS","SETTINGS","STUFF_MEMBERS","SITE_SETTINGS","CURRENCY","AuthContext","React","createContext","AuthProvider","props","useState","localStorage","getItem","isAuthenticated","makeAuthenticated","Provider","value","authenticate","cb","email","password","setItem","setTimeout","signout","removeItem","children","theme","createTheme","lightThemePrimitives","primaryFontFamily","primary","primary700","name","typography","font11","fontFamily","fontSize","fontWeight","lineHeight","fontBold11","font12","fontBold12","font13","fontBold13","font14","fontBold14","font16","fontBold16","font18","fontBold18","font21","fontBold21","font24","fontBold24","font30","fontBold30","font350","font450","sizing","scale25","borders","borderE6","borderColor","borderStyle","borderWidth","borderEA","colors","primary400","red400","red700","greyE6","textDark","textNormal","borderF1","backgroundF7","lightGreen","warning","blue400","purple400","buttonBorderRadius","Container","styled","display","justifyContent","alignItems","height","width","padding","position","Dots","background","$theme","opacity","borderRadius","transform","margin","animationDuration","animationIterationCount","animationName","from","to","animationDelay","delay","Dot","InLineLoader","memo","color","Products","lazy","AdminLayout","Category","Orders","Settings","SiteSettingForm","StaffMembers","Customers","Coupons","Login","NotFound","PrivateRoute","rest","useContext","render","location","pathname","state","Routes","fallback","exact","path","component","Boolean","window","hostname","match","client","ApolloClient","uri","process","ReactDOM","engine","Styletron","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd7ea77a.chunk.js","sourcesContent":["// **************** ROUTE CONSTANT START **************************\n// General Page Section\nexport const DASHBOARD = '/';\nexport const PRODUCTS = '/products';\nexport const CATEGORY = '/category';\nexport const LOGIN = '/login';\nexport const LOGOUT = '/logout';\nexport const ORDERS = '/orders';\nexport const CUSTOMERS = '/customers';\nexport const COUPONS = '/coupons';\nexport const SETTINGS = '/settings';\nexport const STUFF_MEMBERS = '/staff-members';\nexport const SITE_SETTINGS = '/site-settings';\n// **************** ROUTE CONSTANT END **************************\n\nexport const CURRENCY = '$';\n","import React from 'react';\n\ntype AuthProps = {\n  isAuthenticated: boolean;\n  authenticate: Function;\n  signout: Function;\n};\n\nexport const AuthContext = React.createContext({} as AuthProps);\n\nconst isValidToken = () => {\n  const token = localStorage.getItem('pickbazar_token');\n  // JWT decode & check token validity & expiration.\n  if (token) return true;\n  return false;\n};\n\nconst AuthProvider = (props: any) => {\n  const [isAuthenticated, makeAuthenticated] = React.useState(isValidToken());\n  function authenticate({ email, password }, cb) {\n    makeAuthenticated(true);\n    localStorage.setItem('pickbazar_token', `${email}.${password}`);\n    setTimeout(cb, 100); // fake async\n  }\n  function signout(cb) {\n    makeAuthenticated(false);\n    localStorage.removeItem('pickbazar_token');\n    setTimeout(cb, 100);\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        authenticate,\n        signout,\n      }}\n    >\n      <>{props.children}</>\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import { createTheme, lightThemePrimitives } from \"baseui\";\n\nexport const theme = createTheme(\n  {\n    ...lightThemePrimitives,\n    primaryFontFamily: \"'Lato', sans-serif\",\n    primary: \"#FF8E0A\",\n    primary700: \"#00bd87\"\n  },\n  {\n    name: \"custom-typography\",\n    typography: {\n      primaryFontFamily: \"'Lato', sans-serif\",\n      font11: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"11px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold11: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"11px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font12: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"12px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold12: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"12px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font13: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"13px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold13: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"13px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font14: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"14px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold14: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"14px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font16: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"16px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold16: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"16px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font18: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"18px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold18: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"18px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font21: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"21px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold21: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"21px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font24: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"24px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold24: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"24px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font30: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"30px\",\n        fontWeight: 400,\n        lineHeight: 1.5\n      },\n      fontBold30: {\n        fontFamily: \"'Lato', sans-serif\",\n        fontSize: \"30px\",\n        fontWeight: 700,\n        lineHeight: 1.5\n      },\n      font350: {\n        fontSize: \"14px\",\n        fontWeight: 700,\n        lineHeight: \"24px\"\n      },\n      font450: {\n        fontSize: \"15px\",\n        fontWeight: 700,\n        lineHeight: \"22px\"\n      }\n    },\n    sizing: {\n      scale25: \"25px\"\n    },\n    borders: {\n      borderE6: {\n        borderColor: \"#E6E6E6\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\"\n      },\n      borderEA: {\n        borderColor: \"#eaeaea\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\"\n      }\n    },\n    colors: {\n      primary: \"#FF8E0A\",\n      primary700: \"#FF8E0A\",\n      primary400: \"#FF8E0A\",\n      red400: \"#FC5C63\",\n      red700: \"#FC6687\",\n      greyE6: \"#E6E6E6\",\n      textDark: \"#161F6A\",\n      textNormal: \"#666D92\",\n      borderE6: \"#E6E6E6\",\n      borderF1: \"#f1f1f1\",\n      backgroundF7: \"#f7f7f7\",\n      lightGreen: \"#00d4b5\",\n      warning: \"#f4c243\",\n      blue400: \"#2067fa\",\n      purple400: \"#8A6AFC\"\n    },\n    buttonBorderRadius: \"3px\"\n  }\n);\n","import React, { FC, memo } from \"react\";\nimport { styled } from \"baseui\";\n\nconst Container = styled(\"div\", () => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"500px\",\n  width: \"100%\",\n  padding: \"5%\",\n  position: \"relative\"\n}));\n\nconst Dots = styled(\"div\", props => ({\n  display: \"inline-block\",\n  background: props.$theme.colors.primary,\n  height: \"5px\",\n  width: \"5px\",\n  opacity: 0,\n  borderRadius: \"50%\",\n  transform: \"translateX(-300px)\",\n  margin: \"0 2px 0 2px\",\n  animationDuration: \"4s\",\n  animationIterationCount: \"infinite\",\n  animationName: {\n    from: {\n      transform: \"translateX(0px)\",\n      opacity: \"0.8\"\n    },\n    to: {\n      transform: \"translateX(300px)\",\n      opacity: \"0\"\n    }\n  },\n  animationDelay: props.delay && props.delay\n}));\n\nexport interface InLineLoaderProps {\n  color?: string;\n}\n\nconst Dot = delay => {\n  return <Dots delay={delay} />;\n};\n\nexport const InLineLoader: FC<InLineLoaderProps> = memo(props => {\n  const { color = \"#4092de\" } = props;\n\n  return (\n    <Container color={color}>\n      <Dot delay=\".8s\" />\n      <Dot delay=\".7s\" />\n      <Dot delay=\".6s\" />\n      <Dot delay=\".5s\" />\n      <Dot delay=\".4s\" />\n      <Dot delay=\".3s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".1s\" />\n    </Container>\n  );\n});\n","import React, { useContext, lazy, Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport {\n  LOGIN,\n  PRODUCTS,\n  CATEGORY,\n  DASHBOARD,\n  ORDERS,\n  SETTINGS,\n  CUSTOMERS,\n  COUPONS,\n  STUFF_MEMBERS,\n  SITE_SETTINGS\n} from \"./settings/constants\";\nimport AuthProvider, { AuthContext } from \"./context/auth\";\nimport { InLineLoader } from \"./components/InlineLoader/InlineLoader\";\nconst Products = lazy(() => import(\"./containers/Products/Products\"));\nconst AdminLayout = lazy(() => import(\"./containers/Layout/Layout\"));\nconst Dashboard = lazy(() => import(\"./containers/Dashboard/Dashboard\"));\nconst Category = lazy(() => import(\"./containers/Category/Category\"));\nconst Orders = lazy(() => import(\"./containers/Orders/Orders\"));\nconst Settings = lazy(() => import(\"./containers/Settings/Settings\"));\nconst SiteSettingForm = lazy(() =>\n  import(\"./containers/SiteSettingForm/SiteSettingForm\")\n);\nconst StaffMembers = lazy(() =>\n  import(\"./containers/StaffMembers/StaffMembers\")\n);\nconst Customers = lazy(() => import(\"./containers/Customers/Customers\"));\nconst Coupons = lazy(() => import(\"./containers/Coupons/Coupons\"));\nconst Login = lazy(() => import(\"./containers/Login/Login\"));\nconst NotFound = lazy(() => import(\"./containers/NotFound/NotFound\"));\n\n/**\n *\n *  A wrapper for <Route> that redirects to the login\n * screen if you're not yet authenticated.\n *\n */\n\nfunction PrivateRoute({ children, ...rest }) {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst Routes = () => {\n  return (\n    <AuthProvider>\n      <Suspense fallback={<InLineLoader />}>\n        <Switch>\n          <PrivateRoute exact={true} path={DASHBOARD}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Products />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute exact={true} path={PRODUCTS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Products />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={CATEGORY}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Category />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={ORDERS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Orders />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={CUSTOMERS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Customers />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={COUPONS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Coupons />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={SETTINGS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <Settings />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={STUFF_MEMBERS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <StaffMembers />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <PrivateRoute path={SITE_SETTINGS}>\n            <AdminLayout>\n              <Suspense fallback={<InLineLoader />}>\n                <SiteSettingForm />\n              </Suspense>\n            </AdminLayout>\n          </PrivateRoute>\n          <Route path={LOGIN}>\n            <Login />\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n      </Suspense>\n    </AuthProvider>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider } from 'baseui';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { theme } from './theme';\nimport Routes from './routes';\nimport ApolloClient from 'apollo-boost';\nimport * as serviceWorker from './serviceWorker';\nimport './theme/global.css';\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_URL,\n});\n\nfunction App() {\n  const engine = new Styletron();\n\n  return (\n    <ApolloProvider client={client as any}>\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={theme}>\n          <BrowserRouter>\n            <Routes />\n          </BrowserRouter>\n        </BaseProvider>\n      </StyletronProvider>\n    </ApolloProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}