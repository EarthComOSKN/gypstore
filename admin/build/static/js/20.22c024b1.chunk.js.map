{"version":3,"sources":["components/Input/Input.tsx","components/Select/Select.tsx","components/FormFields/FormFields.tsx","components/DrawerBox/DrawerBox.tsx","containers/DrawerItems/DrawerItems.style.tsx","components/Uploader/Uploader.tsx","components/Textarea/Textarea.tsx","containers/SiteSettingForm/SiteSettingForm.tsx","components/Button/Button.tsx","components/Button/Button.style.tsx"],"names":["Input","props","overrides","style","$theme","color","colors","textDark","typography","fontBold14","getInputFontStyle","getContainerFontStyle","SelectArrow","Popover","Body","zIndex","Placeholder","SingleValue","lineHeight","DropdownListItem","fontSize","fontWeight","OptionContent","$selected","textNormal","DropdownOption","Title","styled","font18","marginTop","marginBottom","textAlign","Label","Msg","fontBold12","red400","marginLeft","FormFields","children","Block","width","display","flexDirection","margin","FormLabel","FormTitle","Error","DrawerBox","height","padding","borderRadius","backgroundColor","Form","backgroundF7","paddingBottom","DrawerTitleWrapper","alignItems","justifyContent","position","DrawerTitle","fontBold18","FieldDetails","font14","ButtonGroup","bottom","right","boxShadow","Text","fontFamily","primaryFontFamily","TextHighlighted","primary","Container","flex","borderWidth","borderColor","borderStyle","outline","transition","cursor","ThumbsContainer","flexWrap","Thumb","borders","borderEA","marginRight","boxSizing","thumbInner","minWidth","overflow","img","Uploader","onChange","imageURL","useState","name","preview","files","setFiles","useDropzone","accept","multiple","onDrop","useCallback","acceptedFiles","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","thumbs","key","src","alt","useEffect","forEach","revokeObjectURL","className","Textarea","options","value","label","SiteSettingsForm","useForm","register","handleSubmit","setValue","category","setCategory","React","description","setDescription","fluid","onSubmit","data","console","log","md","inputRef","required","maxLength","e","target","labelKey","valueKey","placeholder","searchable","type","BaseButton","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Button","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","buttonBorderRadius","SHAPE","pill","round","getBorderRadiiStyles"],"mappings":"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","file":"static/js/20.22c024b1.chunk.js","sourcesContent":["import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CarretDownIcon } from '../AllSvgIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CarretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\nimport { styled } from \"baseui\";\n\nconst Title = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.font18,\n  marginTop: \"0\",\n  marginBottom: \"0\",\n  color: $theme.colors.textDark,\n  textAlign: \"center\"\n}));\n\nconst Label = styled(\"label\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  marginBottom: \"10px\",\n  color: $theme.colors.textDark\n}));\n\nconst Msg = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold12,\n  color: $theme.colors.red400,\n  marginTop: \"5px\",\n  marginLeft: \"auto\"\n}));\n\nexport const FormFields = ({ children }) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: \"20px 0\",\n\n            \":first-child\": {\n              marginTop: 0\n            },\n\n            \":last-child\": {\n              marginBottom: 0\n            },\n\n            \":only-child\": {\n              margin: 0\n            }\n          }\n        }\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport const FormLabel = ({ children }) => {\n  return <Label>{children}</Label>;\n};\n\nexport const FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport const Error = ({ children }) => {\n  return <Msg>{children}</Msg>;\n};\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\n\nconst DrawerBox = ({ overrides, children }: any) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            height: \"auto\",\n            padding: \"30px\",\n            borderRadius: \"3px\",\n            backgroundColor: \"#ffffff\"\n          }\n        },\n        ...overrides\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport default DrawerBox;\n","import { styled } from \"baseui\";\n\nexport const Form = styled(\"form\", ({ $theme }) => ({\n  // minHeight: '100vh',\n  backgroundColor: $theme.colors.backgroundF7,\n  paddingBottom: \"100px\"\n}));\n\nexport const DrawerTitleWrapper = styled(\"div\", ({ $theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  margin: \"-55px 0 30px\",\n  position: \"fixed\"\n}));\n\nexport const DrawerTitle = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  margin: 0,\n  color: $theme.colors.textDark\n}));\n\nexport const FieldDetails = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font14,\n  padding: \"28px 0 15px\",\n  color: $theme.colors.textNormal,\n  display: \"block\",\n\n  \"@media only screen and (max-width: 991px)\": {\n    padding: \"30px 0\"\n  }\n}));\n\nexport const ButtonGroup = styled(\"div\", ({ $theme }) => ({\n  padding: \"30px 60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"fixed\",\n  bottom: \"0\",\n  right: \"0\",\n  width: \"100%\",\n  backgroundColor: \"#ffffff\",\n  boxShadow: \"0 0 3px rgba(0, 0, 0, 0.1)\",\n\n  \"@media only screen and (max-width: 767px)\": {\n    padding: \"20px 30px\"\n  }\n}));\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { styled } from 'baseui';\nimport { UploadIcon } from '../AllSvgIcon';\n\nconst Text = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textDark,\n  marginTop: '15px',\n  textAlign: 'center',\n}));\n\nconst TextHighlighted = styled('span', ({ $theme }) => ({\n  color: $theme.colors.primary,\n  fontWeight: 'bold',\n}));\n\nconst Container = styled('div', ({ props }) => ({\n  flex: '1',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '30px',\n  borderWidth: '2px',\n  borderRadius: '2px',\n  borderColor: '#E6E6E6',\n  borderStyle: 'dashed',\n  backgroundColor: '#ffffff',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border 0.24s ease-in-out',\n  cursor: 'pointer',\n}));\n\nconst ThumbsContainer = styled('aside', () => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: '16px',\n}));\n\nconst Thumb = styled('div', ({ $theme }) => ({\n  ...$theme.borders.borderEA,\n  display: 'inline-flex',\n  borderRadius: '2px',\n  marginBottom: '8px',\n  marginRight: '8px',\n  width: '100px',\n  height: '100px',\n  padding: '4px',\n  boxSizing: 'border-box',\n}));\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden',\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n};\n\nfunction Uploader({ onChange, imageURL }: any) {\n  const [files, setFiles] = useState(\n    imageURL ? [{ name: 'demo', preview: imageURL }] : []\n  );\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    multiple: false,\n    onDrop: useCallback(\n      acceptedFiles => {\n        setFiles(\n          acceptedFiles.map(file =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n        onChange(acceptedFiles);\n      },\n      [onChange]\n    ),\n  });\n\n  const thumbs = files.map(file => (\n    <Thumb key={file.name}>\n      <div style={thumbInner}>\n        <img src={file.preview} style={img} alt={file.name} />\n      </div>\n    </Thumb>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section className=\"container uploader\">\n      <Container {...getRootProps()}>\n        <input {...getInputProps()} />\n        <UploadIcon />\n        <Text>\n          <TextHighlighted>Drag/Upload</TextHighlighted> your image here.\n        </Text>\n      </Container>\n      {thumbs && <ThumbsContainer>{thumbs}</ThumbsContainer>}\n    </section>\n  );\n}\n\nexport default Uploader;\n","import React from 'react';\nimport { Textarea as BaseTextarea, SIZE } from 'baseui/textarea';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nexport const Textarea = ({ ...props }) => {\n  return (\n    <BaseTextarea\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Uploader from \"../../components/Uploader/Uploader\";\nimport Input from \"../../components/Input/Input\";\nimport { Textarea } from \"../../components/Textarea/Textarea\";\nimport Select from \"../../components/Select/Select\";\nimport Button from \"../../components/Button/Button\";\nimport DrawerBox from \"../../components/DrawerBox/DrawerBox\";\nimport { Grid, Row, Col } from \"../../components/FlexBox/FlexBox\";\nimport { Form, FieldDetails } from \"../DrawerItems/DrawerItems.style\";\nimport { FormFields, FormLabel } from \"../../components/FormFields/FormFields\";\n\nconst options = [\n  { value: \"active\", label: \"Active\" },\n  { value: \"maintenance\", label: \"Maintenance\" },\n  { value: \"turn-off\", label: \"Down\" }\n];\ntype Props = {};\nconst SiteSettingsForm: React.FC<Props> = () => {\n  const { register, handleSubmit, setValue } = useForm();\n  const onSubmit = data => console.log(data);\n  const [category, setCategory] = useState([]);\n  const [description, setDescription] = React.useState(\"\");\n  const handleMultiChange = ({ value }) => {\n    setValue(\"reactSelect\", value);\n    setCategory(value);\n  };\n  const handleUploader = files => {\n    setValue(\"reactDropzone\", files);\n  };\n  React.useEffect(() => {\n    register({ name: \"reactSelect\" });\n    register({ name: \"reactDropzone\" });\n  }, [register]);\n  return (\n    <Grid fluid={true}>\n      <Form onSubmit={handleSubmit(onSubmit)} style={{ paddingBottom: 0 }}>\n        <Row>\n          <Col md={4}>\n            <FieldDetails>Upload your site logo here</FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <Uploader onChange={handleUploader} />\n            </DrawerBox>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={4}>\n            <FieldDetails>\n              Add your site description and necessary information from here\n            </FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <FormFields>\n                <FormLabel>Site Name</FormLabel>\n                <Input inputRef={register({ required: true, maxLength: 20 })} />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Site Description</FormLabel>\n                <Textarea\n                  value={description}\n                  onChange={e => setDescription(e.target.value)}\n                />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Status</FormLabel>\n                <Select\n                  options={options}\n                  labelKey=\"label\"\n                  valueKey=\"value\"\n                  placeholder=\"Choose current status\"\n                  value={category}\n                  searchable={false}\n                  onChange={handleMultiChange}\n                  overrides={{\n                    Placeholder: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal\n                        };\n                      }\n                    },\n                    DropdownListItem: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal\n                        };\n                      }\n                    },\n                    OptionContent: {\n                      style: ({ $theme, $selected }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $selected\n                            ? $theme.colors.textDark\n                            : $theme.colors.textNormal\n                        };\n                      }\n                    },\n                    SingleValue: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal\n                        };\n                      }\n                    },\n                    Popover: {\n                      props: {\n                        overrides: {\n                          Body: {\n                            style: { zIndex: 5 }\n                          }\n                        }\n                      }\n                    }\n                  }}\n                />\n              </FormFields>\n\n              <FormFields>\n                <Button\n                  type=\"submit\"\n                  overrides={{\n                    BaseButton: {\n                      style: ({ $theme }) => ({\n                        width: \"50%\",\n                        marginLeft: \"auto\",\n                        borderTopLeftRadius: \"3px\",\n                        borderTopRightRadius: \"3px\",\n                        borderBottomLeftRadius: \"3px\",\n                        borderBottomRightRadius: \"3px\"\n                      })\n                    }\n                  }}\n                >\n                  Submit\n                </Button>\n              </FormFields>\n            </DrawerBox>\n          </Col>\n        </Row>\n      </Form>\n    </Grid>\n  );\n};\n\nexport default SiteSettingsForm;\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n"],"sourceRoot":""}