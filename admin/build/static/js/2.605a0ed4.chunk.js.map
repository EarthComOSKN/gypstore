{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/baseui/esm/table/styled-components.js","../node_modules/baseui/esm/icon/triangle-up.js","../node_modules/baseui/esm/table/constants.js","../node_modules/baseui/esm/table/sortable-head-cell.js","../node_modules/baseui/esm/table-grid/styled-components.js","../../src/data/OperationData.ts","../../src/data/QueryData.ts","../../src/utils/useBaseQuery.ts","../../src/utils/useDeepMemo.ts","../../src/useQuery.ts","../../src/data/MutationData.ts","../../src/useMutation.ts","../../src/data/SubscriptionData.ts","../../src/ssr/RenderPromises.ts"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectSpread2","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","obj","defineProperty","configurable","writable","StyledTableElement","styled","_ref","$theme","borders","border300","backgroundColor","colors","tableBackground","borderTopLeftRadius","radius200","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","display","flexDirection","height","overflowX","displayName","StyledTable","React","props","ref","role","__STYLETRON__","StyledHeadElement","_ref2","$width","tableHeadBackgroundColor","boxShadow","lighting","shadow400","flexGrow","width","StyledHead","StyledHeadCellElement","_ref3","$cursor","typography","font350","borderTop","borderBottom","borderLeft","color","contentPrimary","justifyContent","paddingTop","sizing","scale500","paddingRight","scale600","paddingBottom","paddingLeft","cursor","direction","StyledHeadCell","StyledSortableLabel","_ref4","font250","alignItems","border","padding","mono500","StyledBodyElement","_ref5","overflowY","flex","StyledBody","StyledRowElement","StyledRow","StyledCellElement","_ref6","$striped","font200","tableStripedBackground","scale300","StyledCell","$disabled","$active","tableFilter","_ref7","tableFilterBackground","borderRight","maxHeight","overflow","_ref8","tableFilterHeading","_ref9","tableFilterFooterBackground","scale100","minWidth","_ref10","primary","marginRight","marginLeft","TriangleUp","ThemeContext","Consumer","theme","icons","title","viewBox","omitDollarPrefixedKeys","Icon","d","SORT_DIRECTION","ASC","DESC","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","SortDirectionIcon","TriangleDown","SortableHeadCellFactory","CustomHeadCell","_props$overrides","overrides","fillClickTarget","disabled","_getOverrides2","getOverrides","HeadCell","headCellProps","_getOverrides4","SortableLabel","sortableLabelProps","onClick","onSort","enableHeadClick","children","withStyle","FlexStyledTable","gridTemplateColumns","$gridTemplateColumns","FlexStyledHeadCell","_ref$$sticky","$sticky","position","top","StyledBodyCell","FlexStyledBodyCell","gridColumn","$gridColumn","gridRow","$gridRow","options","context","isMounted","previousOptions","getOptions","setOptions","newOptions","storePrevious","isEqual","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","forceUpdate","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","obs","getCurrentResult","afterExecute","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","treeRenderingInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","previousResult","error","resubscribeToQuery","lastError","getLastError","lastResult","getLastResult","resetLastResults","observableQueryFields","currentResult","partial","errors","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","OperationData","useBaseQuery","tick","updatedOptions","queryDataRef","current","QueryData","queryData","memoFn","useDeepMemo","queryResult","useQuery","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","mutationContext","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","MutationData","initialize","getLoadingResult","shouldResubscribe","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","queryPromises","Map","queryInfoTrie","observable","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","promise","clear","all","varMap","get","has","variablesString","JSON","stringify","info"],"mappings":"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","file":"static/js/2.605a0ed4.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport { styled } from '../styles/index.js';\nvar StyledTableElement = styled('div', function (_ref) {\n  var $theme = _ref.$theme;\n  return _objectSpread2({}, $theme.borders.border300, {\n    backgroundColor: $theme.colors.tableBackground,\n    borderTopLeftRadius: $theme.borders.radius200,\n    borderTopRightRadius: $theme.borders.radius200,\n    borderBottomRightRadius: $theme.borders.radius200,\n    borderBottomLeftRadius: $theme.borders.radius200,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    overflowX: 'auto'\n  });\n}); // eslint-disable-next-line flowtype/no-weak-types\n\nStyledTableElement.displayName = \"StyledTableElement\";\nexport var StyledTable = React.forwardRef(function (props, ref) {\n  return React.createElement(StyledTableElement, _extends({\n    ref: ref,\n    \"data-baseweb\": \"table-custom\",\n    role: \"grid\"\n  }, props)); // eslint-disable-next-line flowtype/no-weak-types\n});\nStyledTable.__STYLETRON__ = StyledTableElement.__STYLETRON__;\nStyledTable.displayName = 'StyledTable';\nvar StyledHeadElement = styled('div', function (_ref2) {\n  var $theme = _ref2.$theme,\n      $width = _ref2.$width;\n  return {\n    backgroundColor: $theme.colors.tableHeadBackgroundColor,\n    boxShadow: $theme.lighting.shadow400,\n    display: 'flex',\n    flexGrow: 0,\n    width: $width ? $width : '100%'\n  };\n}); // eslint-disable-next-line flowtype/no-weak-types\n\nStyledHeadElement.displayName = \"StyledHeadElement\";\nexport var StyledHead = React.forwardRef(function (props, ref) {\n  return React.createElement(StyledHeadElement, _extends({\n    ref: ref,\n    role: \"row\"\n  }, props));\n} // eslint-disable-next-line flowtype/no-weak-types\n);\nStyledHead.__STYLETRON__ = StyledHeadElement.__STYLETRON__;\nStyledHead.displayName = 'StyledHead';\nvar StyledHeadCellElement = styled('div', function (_ref3) {\n  var $theme = _ref3.$theme,\n      $cursor = _ref3.$cursor;\n  return _objectSpread2({}, $theme.typography.font350, {}, $theme.borders.border300, {\n    borderTop: 'none',\n    borderBottom: 'none',\n    borderLeft: 'none',\n    color: $theme.colors.contentPrimary,\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingTop: $theme.sizing.scale500,\n    paddingRight: $theme.sizing.scale600,\n    paddingBottom: $theme.sizing.scale500,\n    paddingLeft: $theme.sizing.scale600,\n    cursor: $cursor ? $cursor : 'inherit',\n    width: '100%',\n    ':last-of-type': _defineProperty({}, $theme.direction === 'rtl' ? 'borderLeft' : 'borderRight', 'none')\n  });\n}); // eslint-disable-next-line flowtype/no-weak-types\n\nStyledHeadCellElement.displayName = \"StyledHeadCellElement\";\nexport var StyledHeadCell = React.forwardRef(function (props, ref) {\n  return React.createElement(StyledHeadCellElement, _extends({\n    ref: ref,\n    role: \"columnheader\"\n  }, props)) // eslint-disable-next-line flowtype/no-weak-types\n  ;\n});\nStyledHeadCell.__STYLETRON__ = StyledHeadCellElement.__STYLETRON__;\nStyledHeadCell.displayName = 'StyledHeadCell';\nexport var StyledSortableLabel = styled('button', function (_ref4) {\n  var $theme = _ref4.$theme;\n  return _objectSpread2({}, $theme.typography.font250, {\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: $theme.colors.contentPrimary,\n    display: 'flex',\n    padding: 0,\n    ':hover:enabled': {\n      cursor: 'pointer'\n    },\n    ':disabled': {\n      color: $theme.colors.mono500\n    }\n  });\n});\nStyledSortableLabel.displayName = \"StyledSortableLabel\";\nvar StyledBodyElement = styled('div', function (_ref5) {\n  var $width = _ref5.$width;\n  return {\n    width: $width ? $width : '100%',\n    overflowX: 'hidden',\n    overflowY: 'overlay',\n    flex: 1\n  };\n}); // eslint-disable-next-line flowtype/no-weak-types\n\nStyledBodyElement.displayName = \"StyledBodyElement\";\nexport var StyledBody = React.forwardRef(function (props, ref) {\n  return React.createElement(StyledBodyElement, _extends({\n    ref: ref,\n    role: \"rowgroup\"\n  }, props));\n} // eslint-disable-next-line flowtype/no-weak-types\n);\nStyledBody.__STYLETRON__ = StyledBodyElement.__STYLETRON__;\nStyledBody.displayName = 'StyledBody';\nvar StyledRowElement = styled('div', {\n  display: 'flex',\n  alignItems: 'center'\n}); // eslint-disable-next-line flowtype/no-weak-types\n\nStyledRowElement.displayName = \"StyledRowElement\";\nexport var StyledRow = React.forwardRef(function (props, ref) {\n  return React.createElement(StyledRowElement, _extends({\n    ref: ref,\n    role: \"row\"\n  }, props)) // eslint-disable-next-line flowtype/no-weak-types\n  ;\n});\nStyledRow.__STYLETRON__ = StyledRowElement.__STYLETRON__;\nStyledRow.displayName = 'StyledRow';\nvar StyledCellElement = styled('div', function (_ref6) {\n  var $theme = _ref6.$theme,\n      $striped = _ref6.$striped;\n  return _objectSpread2({}, $theme.typography.font200, {\n    backgroundColor: $striped ? $theme.colors.tableStripedBackground : null,\n    color: $theme.colors.contentPrimary,\n    display: 'flex',\n    flex: 1,\n    paddingTop: $theme.sizing.scale300,\n    paddingRight: $theme.sizing.scale600,\n    paddingBottom: $theme.sizing.scale300,\n    paddingLeft: $theme.sizing.scale600\n  });\n}); // eslint-disable-next-line flowtype/no-weak-types\n\nStyledCellElement.displayName = \"StyledCellElement\";\nexport var StyledCell = React.forwardRef(function (props, ref) {\n  return React.createElement(StyledCellElement, _extends({\n    ref: ref,\n    role: \"gridcell\"\n  }, props));\n} // eslint-disable-next-line flowtype/no-weak-types\n);\nStyledCell.__STYLETRON__ = StyledCellElement.__STYLETRON__;\nStyledCell.displayName = 'StyledCell';\nexport var StyledFilterButton = styled('button', function (props) {\n  function getIconColor() {\n    if (props.$disabled) {\n      return props.$theme.colors.mono500;\n    }\n\n    if (props.$active) {\n      return props.$theme.colors.contentPrimary;\n    }\n\n    return props.$theme.colors.tableFilter;\n  }\n\n  function getIconHoverColor() {\n    if (props.$disabled || props.$active) {\n      return null;\n    }\n\n    return props.$theme.colors.contentPrimary;\n  }\n\n  return {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: getIconColor(),\n    cursor: props.$disabled ? null : 'pointer',\n    paddingTop: 'none',\n    paddingRight: 'none',\n    paddingBottom: 'none',\n    paddingLeft: 'none',\n    ':hover': {\n      color: getIconHoverColor()\n    }\n  };\n});\nStyledFilterButton.displayName = \"StyledFilterButton\";\nexport var StyledFilterContent = styled('div', function (_ref7) {\n  var $theme = _ref7.$theme;\n  return _objectSpread2({}, $theme.borders.border300, {\n    backgroundColor: $theme.colors.tableFilterBackground,\n    borderRight: 'none',\n    borderLeft: 'none',\n    maxHeight: '196px',\n    paddingRight: $theme.sizing.scale600,\n    paddingLeft: $theme.sizing.scale600,\n    overflow: 'auto'\n  });\n});\nStyledFilterContent.displayName = \"StyledFilterContent\";\nexport var StyledFilterHeading = styled('div', function (_ref8) {\n  var $theme = _ref8.$theme;\n  return _objectSpread2({}, $theme.typography.font250, {\n    color: $theme.colors.tableFilterHeading,\n    paddingTop: $theme.sizing.scale500,\n    paddingRight: $theme.sizing.scale600,\n    paddingBottom: $theme.sizing.scale500,\n    paddingLeft: $theme.sizing.scale600\n  });\n});\nStyledFilterHeading.displayName = \"StyledFilterHeading\";\nexport var StyledFilterFooter = styled('div', function (_ref9) {\n  var $theme = _ref9.$theme;\n  return {\n    backgroundColor: $theme.colors.tableFilterFooterBackground,\n    paddingTop: $theme.sizing.scale300,\n    paddingRight: $theme.sizing.scale100,\n    paddingBottom: $theme.sizing.scale300,\n    paddingLeft: $theme.sizing.scale100,\n    display: 'flex',\n    justifyContent: 'space-between',\n    minWidth: '216px'\n  };\n});\nStyledFilterFooter.displayName = \"StyledFilterFooter\";\nexport var StyledAction = styled('button', function (_ref10) {\n  var $theme = _ref10.$theme;\n  return {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: $theme.colors.primary,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    marginRight: $theme.sizing.scale100,\n    marginLeft: $theme.sizing.scale100,\n    ':hover:enabled': {\n      cursor: 'pointer'\n    }\n  };\n});\nStyledAction.displayName = \"StyledAction\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n// BASEUI-GENERATED-REACT-ICON\n// DO NOT EDIT THIS FILE DIRECTLY, SEE README.md\nimport * as React from 'react';\nimport Icon from './icon.js';\nimport omitDollarPrefixedKeys from './omit-dollar-prefixed-keys.js';\nimport { ThemeContext } from '../styles/theme-provider.js';\nexport default function TriangleUp(props) {\n  return React.createElement(ThemeContext.Consumer, null, function (theme) {\n    return theme.icons && theme.icons.TriangleUp ? React.createElement(theme.icons.TriangleUp, _extends({\n      title: \"Triangle Up\",\n      viewBox: \"0 0 24 24\"\n    }, omitDollarPrefixedKeys(props))) : React.createElement(Icon, _extends({\n      title: \"Triangle Up\",\n      viewBox: \"0 0 24 24\"\n    }, props), React.createElement(\"path\", {\n      d: \"M12.7071 8.70711L17.1464 13.1464C17.4614 13.4614 17.2383 14 16.7929 14L7.20711 14C6.76165 14 6.53857 13.4614 6.85355 13.1464L11.2929 8.70711C11.6834 8.31658 12.3166 8.31658 12.7071 8.70711Z\"\n    }));\n  });\n}","/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nexport var SORT_DIRECTION = Object.freeze({\n  ASC: 'ASC',\n  DESC: 'DESC'\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport { getOverrides } from '../helpers/overrides.js';\nimport TriangleDown from '../icon/triangle-down.js';\nimport TriangleUp from '../icon/triangle-up.js';\nimport { SORT_DIRECTION } from './constants.js';\nimport { StyledHeadCell, StyledSortableLabel } from './styled-components.js';\n\nfunction SortDirectionIcon(_ref) {\n  var direction = _ref.direction;\n\n  switch (direction) {\n    case SORT_DIRECTION.ASC:\n      return React.createElement(TriangleDown, null);\n\n    case SORT_DIRECTION.DESC:\n      return React.createElement(TriangleUp, null);\n\n    default:\n      return null;\n  }\n}\n\nexport var SortableHeadCellFactory = function SortableHeadCellFactory() {\n  var CustomHeadCell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : StyledHeadCell;\n  return function SortableHeadCell(props) {\n    var _props$overrides = props.overrides,\n        overrides = _props$overrides === void 0 ? {} : _props$overrides,\n        fillClickTarget = props.fillClickTarget,\n        disabled = props.disabled;\n\n    var _getOverrides = getOverrides(overrides.HeadCell, CustomHeadCell),\n        _getOverrides2 = _slicedToArray(_getOverrides, 2),\n        HeadCell = _getOverrides2[0],\n        headCellProps = _getOverrides2[1];\n\n    var _getOverrides3 = getOverrides(overrides.SortableLabel, StyledSortableLabel),\n        _getOverrides4 = _slicedToArray(_getOverrides3, 2),\n        SortableLabel = _getOverrides4[0],\n        sortableLabelProps = _getOverrides4[1];\n\n    var onClick = function onClick() {\n      props.onSort && props.onSort();\n    };\n\n    var enableHeadClick = fillClickTarget && !disabled;\n    return React.createElement(HeadCell, _extends({\n      role: \"columnheader\"\n    }, headCellProps, {\n      $cursor: enableHeadClick ? 'pointer' : undefined,\n      onClick: enableHeadClick ? onClick : undefined\n    }), React.createElement(SortableLabel, _extends({\n      \"aria-label\": \"sorts table by \".concat(props.title, \" column\"),\n      disabled: disabled,\n      onClick: !fillClickTarget ? onClick : undefined\n    }, sortableLabelProps), React.createElement(SortDirectionIcon, {\n      direction: props.direction\n    }), props.title), props.children);\n  };\n};\nexport default SortableHeadCellFactory();","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport { withStyle } from '../styles/index.js';\nimport { StyledTable as FlexStyledTable, StyledHeadCell as FlexStyledHeadCell, StyledCell as FlexStyledBodyCell, SORT_DIRECTION, SortableHeadCellFactory } from '../table/index.js';\nvar StyledTableElement = withStyle(FlexStyledTable, function (props) {\n  return {\n    display: 'grid',\n    gridTemplateColumns: props.$gridTemplateColumns,\n    flexDirection: 'unset'\n  };\n}); // eslint-disable-next-line flowtype/no-weak-types\n\nStyledTableElement.displayName = \"StyledTableElement\";\nexport var StyledTable = React.forwardRef(function (props, ref) {\n  return (//$FlowFixMe\n    React.createElement(StyledTableElement, _extends({\n      ref: ref,\n      \"data-baseweb\": \"table-grid\",\n      role: \"grid\"\n    }, props))\n  ); // eslint-disable-next-line flowtype/no-weak-types\n});\nStyledTable.__STYLETRON__ = StyledTableElement.__STYLETRON__;\nStyledTable.displayName = 'StyledTable';\nexport var StyledHeadCell = withStyle(FlexStyledHeadCell, function (_ref) {\n  var _ref$$sticky = _ref.$sticky,\n      $sticky = _ref$$sticky === void 0 ? true : _ref$$sticky,\n      $theme = _ref.$theme;\n  return {\n    backgroundColor: $theme.colors.tableHeadBackgroundColor,\n    boxShadow: $theme.lighting.shadow400,\n    position: $sticky ? 'sticky' : null,\n    top: $sticky ? 0 : null,\n    width: 'unset'\n  };\n});\nStyledHeadCell.displayName = \"StyledHeadCell\";\nexport var StyledBodyCell = withStyle(FlexStyledBodyCell, function (props) {\n  return {\n    display: 'block',\n    flex: 'unset',\n    gridColumn: props.$gridColumn || null,\n    gridRow: props.$gridRow || null\n  };\n});\nStyledBodyCell.displayName = \"StyledBodyCell\";\nexport var SortableHeadCell = SortableHeadCellFactory(StyledHeadCell);\nexport { SORT_DIRECTION };","import { ApolloClient } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport {\n  ApolloContextValue,\n  parser,\n  DocumentType,\n  operationName\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { CommonOptions } from '../types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: ApolloContextValue = {};\n  public client: ApolloClient<object> | undefined;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: ApolloContextValue) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !isEqual(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import {\n  ApolloQueryResult,\n  ApolloError,\n  NetworkStatus,\n  FetchMoreOptions,\n  FetchMoreQueryOptions,\n  UpdateQueryOptions,\n  SubscribeToMoreOptions\n} from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  QueryResult,\n  ObservableQueryFields\n} from '@apollo/react-common';\n\nimport {\n  QueryPreviousData,\n  QueryOptions,\n  QueryCurrentObservable,\n  QueryTuple,\n  QueryLazyOptions\n} from '../types';\nimport { OperationData } from './OperationData';\n\nexport class QueryData<TData, TVariables> extends OperationData {\n  private previousData: QueryPreviousData<TData, TVariables> = {};\n  private currentObservable: QueryCurrentObservable<TData, TVariables> = {};\n  private forceUpdate: any;\n\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n\n  constructor({\n    options,\n    context,\n    forceUpdate\n  }: {\n    options: QueryOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    forceUpdate: any;\n  }) {\n    super(options, context);\n    this.forceUpdate = forceUpdate;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    if (this.isMounted) this.startQuerySubscription();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          } as QueryResult<TData, TVariables>\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<ApolloQueryResult<any>> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n\n    // currentObservable.query is already assigned the registered SSR observable in initializeObservableQuery.\n    const obs = this.currentObservable.query!;\n    const currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n\n      // When the component is done rendering stored query errors, we'll\n      // remove those errors from the `ObservableQuery` query store, so they\n      // aren't re-displayed on subsequent (potentially error free)\n      // requests/responses.\n      setTimeout(() => {\n        this.currentObservable.query &&\n          this.currentObservable.query.resetQueryStoreErrors();\n      });\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      };\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.forceUpdate();\n  };\n\n  private getExecuteResult = (): QueryResult<TData, TVariables> => {\n    const result = this.getQueryResult();\n    this.startQuerySubscription();\n    return result;\n  };\n\n  private getExecuteSsrResult() {\n    const treeRenderingInitiated = this.context && this.context.renderPromises;\n    const ssrDisabled = this.getOptions().ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (treeRenderingInitiated || fetchDisabled)) {\n      return ssrLoading;\n    }\n\n    let result;\n    if (treeRenderingInitiated) {\n      result =\n        this.context.renderPromises!.addQueryPromise(\n          this,\n          this.getExecuteResult\n        ) || ssrLoading;\n    }\n\n    return result;\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.context &&\n      this.context.renderPromises &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n      metadata: { reactComponent: { displayName } }\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.context && this.context.renderPromises) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable.query) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previousData.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: null\n      };\n      this.currentObservable.query = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.context && this.context.renderPromises) {\n        this.context.renderPromises.registerSSRObservable(\n          this.currentObservable.query,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: null\n    };\n\n    if (\n      !isEqual(\n        newObservableQueryOptions,\n        this.previousData.observableQueryOptions\n      )\n    ) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .query!.setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  private startQuerySubscription() {\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n\n    const obsQuery = this.currentObservable.query!;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previousData.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          isEqual(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        this.forceUpdate();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previousData.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !isEqual(error, this.previousData.error)\n        ) {\n          this.previousData.error = error;\n          this.forceUpdate();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const lastError = this.currentObservable.query!.getLastError();\n    const lastResult = this.currentObservable.query!.getLastResult();\n    this.currentObservable.query!.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query!, {\n      lastError,\n      lastResult\n    });\n  }\n\n  private getQueryResult(): QueryResult<TData, TVariables> {\n    let result: any = this.observableQueryFields();\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      };\n    } else {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.query!.getCurrentResult();\n      const { loading, partial, networkStatus, errors } = currentResult;\n      let { error, data } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        const previousData =\n          this.previousData.result && this.previousData.result.data;\n        result.data =\n          previousData && data\n            ? {\n                ...previousData,\n                ...data\n              }\n            : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query!.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.query!.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          !data &&\n          partial &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading =\n      (this.previousData.result && this.previousData.result.loading) || false;\n    this.previousData.result = result;\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    const obsQuery = this.currentObservable.query;\n    if (!obsQuery) return;\n\n    const { data, loading, error } = obsQuery.getCurrentResult();\n\n    if (!loading) {\n      const { query, variables, onCompleted, onError } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previousData.loading &&\n        isEqual(this.previousOptions.query, query) &&\n        isEqual(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n\n  private obsRefetch = (variables?: TVariables) =>\n    this.currentObservable.query!.refetch(variables);\n\n  private obsFetchMore = <K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable.query!.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable.query!.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable.query!.subscribeToMore(options);\n\n  private observableQueryFields() {\n    const observable = this.currentObservable.query!;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import { useContext, useEffect, useReducer, useRef } from 'react';\nimport {\n  getApolloContext,\n  OperationVariables,\n  QueryResult\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions, QueryOptions, QueryTuple } from '../types';\nimport { QueryData } from '../data/QueryData';\nimport { useDeepMemo } from './useDeepMemo';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n\n  if (!queryDataRef.current) {\n    queryDataRef.current = new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryOptions<TData, TVariables>,\n      context,\n      forceUpdate\n    });\n  }\n\n  const queryData = queryDataRef.current;\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: { ...updatedOptions, onError: undefined, onCompleted: undefined },\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data\n  ]);\n\n  useEffect(() => {\n    return () => queryData.cleanup();\n  }, []);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal as isEqual } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import { OperationVariables, QueryResult } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions } from './types';\nimport { useBaseQuery } from './utils/useBaseQuery';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import { ApolloError } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  OperationVariables,\n  ExecutionResult,\n  MutationFunctionOptions,\n  MutationResult\n} from '@apollo/react-common';\n\nimport { MutationOptions, MutationTuple } from '../types';\nimport { OperationData } from './OperationData';\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables\n> extends OperationData {\n  private mostRecentMutationId: number;\n  private result: MutationResult<TData>;\n  private previousResult?: MutationResult<TData>;\n  private setResult: (result: MutationResult<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    result: MutationResult<TData>;\n    setResult: (result: MutationResult<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResult<TData>) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result] as MutationTuple<TData, TVariables>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables\n    > = {} as MutationFunctionOptions<TData, TVariables>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: ExecutionResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        this.onMutationError(error, mutationId);\n        if (!this.getOptions().onError) throw error;\n      });\n  };\n\n  private mutate(\n    mutationFunctionOptions: MutationFunctionOptions<TData, TVariables>\n  ) {\n    const {\n      mutation,\n      variables,\n      optimisticResponse,\n      update,\n      context: mutationContext = {},\n      awaitRefetchQueries = false,\n      fetchPolicy\n    } = this.getOptions();\n    const mutateOptions = { ...mutationFunctionOptions };\n\n    const mutateVariables = Object.assign(\n      {},\n      variables,\n      mutateOptions.variables\n    );\n    delete mutateOptions.variables;\n\n    return this.refreshClient().client.mutate({\n      mutation,\n      optimisticResponse,\n      refetchQueries:\n        mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries,\n      update,\n      context: mutationContext,\n      fetchPolicy,\n      variables: mutateVariables,\n      ...mutateOptions\n    });\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: ExecutionResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    const { onError } = this.getOptions();\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResult<TData>) {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !isEqual(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  }\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext, OperationVariables } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { MutationHookOptions, MutationTuple } from './types';\nimport { MutationData } from './data/MutationData';\n\nexport function useMutation<TData = any, TVariables = OperationVariables>(\n  mutation: DocumentNode,\n  options?: MutationHookOptions<TData, TVariables>\n): MutationTuple<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","import { equal as isEqual } from '@wry/equality';\nimport { ApolloContextValue, SubscriptionResult } from '@apollo/react-common';\n\nimport { OperationData } from './OperationData';\nimport { SubscriptionCurrentObservable, SubscriptionOptions } from '../types';\n\nexport class SubscriptionData<\n  TData = any,\n  TVariables = any\n> extends OperationData<SubscriptionOptions<TData, TVariables>> {\n  private setResult: any;\n  private currentObservable: SubscriptionCurrentObservable = {};\n\n  constructor({\n    options,\n    context,\n    setResult\n  }: {\n    options: SubscriptionOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    setResult: any;\n  }) {\n    super(options, context);\n    this.setResult = setResult;\n    this.initialize(options);\n  }\n\n  public execute(result: SubscriptionResult<TData>) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    let currentResult = result;\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    let { shouldResubscribe } = this.getOptions();\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (\n      shouldResubscribe !== false &&\n      this.previousOptions &&\n      Object.keys(this.previousOptions).length > 0 &&\n      (this.previousOptions.subscription !== this.getOptions().subscription ||\n        !isEqual(this.previousOptions.variables, this.getOptions().variables) ||\n        this.previousOptions.skip !== this.getOptions().skip)\n    ) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n\n    this.previousOptions = this.getOptions();\n    return { ...currentResult, variables: this.getOptions().variables };\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n  }\n\n  public cleanup() {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  }\n\n  private initialize(options: SubscriptionOptions<TData, TVariables>) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  }\n\n  private startSubscription() {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query!.subscribe(\n      {\n        next: this.updateCurrentData.bind(this),\n        error: this.updateError.bind(this),\n        complete: this.completeSubscription.bind(this)\n      }\n    );\n  }\n\n  private getLoadingResult() {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  }\n\n  private updateResult(result: SubscriptionResult) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  }\n\n  private updateCurrentData(result: SubscriptionResult<TData>) {\n    const { onSubscriptionData } = this.getOptions();\n\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  }\n\n  private updateError(error: any) {\n    this.updateResult({\n      error,\n      loading: false\n    });\n  }\n\n  private completeSubscription() {\n    const { onSubscriptionComplete } = this.getOptions();\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  }\n\n  private endSubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n}\n","import { ObservableQuery } from 'apollo-client';\nimport { QueryOptions } from '../types';\nimport { DocumentNode } from 'graphql';\nimport { QueryData } from '../data/QueryData';\n\ntype QueryInfo = {\n  seen: boolean;\n  observable: ObservableQuery<any, any> | null;\n};\n\nfunction makeDefaultQueryInfo(): QueryInfo {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nexport class RenderPromises {\n  // Map from Query component instances to pending fetchData promises.\n  private queryPromises = new Map<QueryOptions<any, any>, Promise<any>>();\n\n  // Two-layered map from (query document, stringified variables) to QueryInfo\n  // objects. These QueryInfo objects are intended to survive through the whole\n  // getMarkupFromTree process, whereas specific Query instances do not survive\n  // beyond a single call to renderToStaticMarkup.\n  private queryInfoTrie = new Map<DocumentNode, Map<string, QueryInfo>>();\n\n  // Registers the server side rendered observable.\n  public registerSSRObservable<TData, TVariables>(\n    observable: ObservableQuery<any, TVariables>,\n    props: QueryOptions<TData, TVariables>\n  ) {\n    this.lookupQueryInfo(props).observable = observable;\n  }\n\n  // Get's the cached observable that matches the SSR Query instances query and variables.\n  public getSSRObservable<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ) {\n    return this.lookupQueryInfo(props).observable;\n  }\n\n  public addQueryPromise<TData, TVariables>(\n    queryInstance: QueryData<TData, TVariables>,\n    finish: () => React.ReactNode\n  ): React.ReactNode {\n    const info = this.lookupQueryInfo(queryInstance.getOptions());\n    if (!info.seen) {\n      this.queryPromises.set(\n        queryInstance.getOptions(),\n        new Promise(resolve => {\n          resolve(queryInstance.fetchData());\n        })\n      );\n      // Render null to abandon this subtree for this rendering, so that we\n      // can wait for the data to arrive.\n      return null;\n    }\n    return finish();\n  }\n\n  public hasPromises() {\n    return this.queryPromises.size > 0;\n  }\n\n  public consumeAndAwaitPromises() {\n    const promises: Promise<any>[] = [];\n    this.queryPromises.forEach((promise, queryInstance) => {\n      // Make sure we never try to call fetchData for this query document and\n      // these variables again. Since the queryInstance objects change with\n      // every rendering, deduplicating them by query and variables is the\n      // best we can do. If a different Query component happens to have the\n      // same query document and variables, it will be immediately rendered\n      // by calling finish() in addQueryPromise, which could result in the\n      // rendering of an unwanted loading state, but that's not nearly as bad\n      // as getting stuck in an infinite rendering loop because we kept calling\n      // queryInstance.fetchData for the same Query component indefinitely.\n      this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  }\n\n  private lookupQueryInfo<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ): QueryInfo {\n    const { queryInfoTrie } = this;\n    const { query, variables } = props;\n    const varMap = queryInfoTrie.get(query) || new Map<string, QueryInfo>();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    const variablesString = JSON.stringify(variables);\n    const info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  }\n}\n"],"sourceRoot":""}