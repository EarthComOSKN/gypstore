{"version":3,"file":"static/webpack/static/development/pages/_app.js.a88598e0c712cc44c6be.hot-update.js","sources":["webpack:///./src/apollo-client.ts"],"sourcesContent":["import { ApolloClient, ApolloLink, InMemoryCache, HttpLink } from 'apollo-boost'\nimport fetch from 'isomorphic-unfetch'\n\nimport { createHttpLink } from 'apollo-link-http'\nconst uri =\n  process.env.NODE_ENV !== 'production'\n    ? 'http://localhost:4000'\n    : 'http://13.229.249.128:4000/'\n\nconst httpLink = createHttpLink({ uri, fetch: !process.browser && fetch })\n\nconst authLink = new ApolloLink((operation, forward) => {\n  // Retrieve the authorization token from local storage.\n  const token = localStorage.getItem('userToken')\n\n  // Use the setContext method to set the HTTP headers.\n  operation.setContext({\n    headers: {\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  })\n\n  // Call the next link in the middleware chain.\n  return forward(operation)\n})\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink), // Chain it with the HttpLink\n  cache: new InMemoryCache(),\n})\n\nexport default client\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AADA;AACA;AAMA;AACA;AAEA;AACA;AAAA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}