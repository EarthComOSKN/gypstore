{"version":3,"file":"static/webpack/static/development/pages/category/[cid].js.29b0a0fe4d72f3dc0054.hot-update.js","sources":["webpack:///./src/features/product/ProductList.tsx"],"sourcesContent":["import { useQuery } from '@apollo/react-hooks'\nimport { GET_PRODUCT } from './gql'\nimport styled from '@emotion/styled'\nimport { Card } from 'antd'\nimport _ from 'lodash'\n\nconst { Meta } = Card\n\nconst ProductListContainer = styled.div`\n  width: 100%;\n  min-height: 40vh;\n`\n\nconst ProductContainer = styled.div`\n  padding: 2rem 4rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n`\n\nconst CoverImg = styled.img`\n  padding: 1rem 3.5rem;\n`\nconst NoProduct = styled.h2`\n  text-align: center;\n  background: gray;\n  justify-self: center;\n  padding: 1rem 1.5rem;\n  width: 100%;\n`\n\ntype Props = {\n  category?: string\n}\n\nexport const ProductList = (props: Props) => {\n  const { category = '' } = props\n  const { data, loading } = useQuery(GET_PRODUCT, {\n    variables: { pName: category },\n  })\n  if (loading) return <div>'Loading...'</div>\n  const productItems = data.productItems as ProductItem[]\n  console.log(data)\n  return (\n    <ProductListContainer>\n      <h1>{category}</h1>\n      <ProductContainer>\n        {_.isEmpty(productItems) && (\n          <NoProduct>ไม่มีรายการสินค้าประเภทนี้ในขณะนี้</NoProduct>\n        )}\n        {productItems.map(p => {\n          return (\n            <a href={`/product/${p.id}`}>\n              <Card\n                hoverable\n                style={{ width: 270, margin: '0.5rem' }}\n                cover={<CoverImg alt=\"example\" src=\"/assets/pd1.png\" />}\n              >\n                <h4>{p.name}</h4>\n                <h5>{p.description}</h5>\n                <p>\n                  {p.price} / {p.unitType}\n                </p>\n              </Card>\n            </a>\n          )\n        })}\n      </ProductContainer>\n    </ProductListContainer>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AAQA;AAGA;AAYA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AADA;AAFA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAIA;;;;A","sourceRoot":""}