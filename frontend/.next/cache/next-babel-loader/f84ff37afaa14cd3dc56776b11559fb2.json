{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductInformation.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 15rem;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: #ff8e0a;\\n  width: 100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  & > h4 {\\n    margin-bottom: 2rem;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Button, Icon, message } from 'antd';\nimport styled from '@emotion/styled';\nimport { useState } from 'react';\nimport { AmountInput } from '../../component/AmountInput';\nimport { GET_ME } from '../navigation/gql';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { ADD_PRODUCT_TO_CART } from './gql';\nvar Container = styled.div(_templateObject());\nvar AddCartButton = styled(Button)(_templateObject2());\nvar StyledAmountInput = styled(AmountInput)(_templateObject3());\nexport var ProductInformation = function ProductInformation(props) {\n  var _me$shoppingCart;\n\n  var product = props.product;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(1),\n      amount = _useState2[0],\n      setAmount = _useState2[1];\n\n  var _useQuery = useQuery(GET_ME),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var me = data === null || data === void 0 ? void 0 : data.me;\n\n  var _useMutation = useMutation(ADD_PRODUCT_TO_CART),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addProductToCard = _useMutation2[0];\n\n  if (loading) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Loading ...\");\n  var name = product.name,\n      description = product.description,\n      brand = product.brand,\n      productAmount = product.amount,\n      unitType = product.unitType;\n  var shid = me === null || me === void 0 ? void 0 : (_me$shoppingCart = me.shoppingCart) === null || _me$shoppingCart === void 0 ? void 0 : _me$shoppingCart.id;\n\n  var addToCart = function addToCart() {\n    return _regeneratorRuntime.async(function addToCart$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(addProductToCard({\n              variables: {\n                pid: product.id,\n                amount: amount,\n                shid: shid,\n                key: \"\".concat(product.id).concat(shid)\n              }\n            }));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            message.error(\"\".concat(_context.t0));\n\n          case 9:\n            _context.prev = 9;\n            setLoading(false);\n            return _context.finish(9);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6, 9, 12]]);\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, name), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, description), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, brand), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, productAmount, \" \", unitType)), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\u0E08\\u0E31\\u0E14\\u0E2A\\u0E48\\u0E07\\u0E44\\u0E14\\u0E49\\u0E20\\u0E32\\u0E22\\u0E43\\u0E19 1-3 \\u0E27\\u0E31\\u0E19\\u0E17\\u0E33\\u0E01\\u0E32\\u0E23\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E17\\u0E35\\u0E48\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23 (\", unitType, \")\"), __jsx(StyledAmountInput, {\n    amount: amount,\n    onChange: setAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(AddCartButton, {\n    disabled: isLoading,\n    onClick: addToCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Icon, {\n    type: \"shopping-cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E44\\u0E1B\\u0E22\\u0E31\\u0E07\\u0E23\\u0E16\\u0E40\\u0E02\\u0E47\\u0E19\"));\n};","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductInformation.tsx"],"names":["Button","Icon","message","styled","useState","AmountInput","GET_ME","useQuery","useMutation","ADD_PRODUCT_TO_CART","Container","div","AddCartButton","StyledAmountInput","ProductInformation","props","product","isLoading","setLoading","amount","setAmount","data","loading","me","addProductToCard","name","description","brand","productAmount","unitType","shid","shoppingCart","id","addToCart","variables","pid","key","error"],"mappings":"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","sourcesContent":["import { Button, Icon, message } from 'antd'\nimport styled from '@emotion/styled'\nimport { useState } from 'react'\nimport { AmountInput } from '../../component/AmountInput'\nimport { GET_ME } from '../navigation/gql'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { ADD_PRODUCT_TO_CART } from './gql'\n\nconst Container = styled.div`\n  font-size: 16px;\n  & > h4 {\n    margin-bottom: 2rem;\n  }\n`\n\nconst AddCartButton = styled(Button)`\n  background-color: #ff8e0a;\n  width: 100%;\n`\n\nconst StyledAmountInput = styled(AmountInput)`\n  width: 15rem;\n`\n\ntype Props = {\n  product: ProductItem\n}\n\nexport const ProductInformation = (props: Props) => {\n  const { product } = props\n  const [isLoading, setLoading] = useState(false)\n  const [amount, setAmount] = useState(1)\n  const { data, loading } = useQuery(GET_ME)\n  const me = data?.me as User\n  const [addProductToCard] = useMutation(ADD_PRODUCT_TO_CART)\n  if (loading) return <div>Loading ...</div>\n  const { name, description, brand, amount: productAmount, unitType } = product\n  const shid = me?.shoppingCart?.id\n\n  const addToCart = async () => {\n    setLoading(true)\n    try {\n      await addProductToCard({\n        variables: {\n          pid: product.id,\n          amount,\n          shid,\n          key: `${product.id}${shid}`,\n        },\n      })\n    } catch (error) {\n      message.error(`${error}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Container>\n      <h3>{name}</h3>\n      <ul>\n        <li>{description}</li>\n        <li>{brand}</li>\n        <li>\n          {productAmount} {unitType}\n        </li>\n      </ul>\n      <p>จัดส่งได้ภายใน 1-3 วันทำการ</p>\n      <p>จำนวนที่ต้องการ ({unitType})</p>\n      <StyledAmountInput amount={amount} onChange={setAmount} />\n      <AddCartButton disabled={isLoading} onClick={addToCart}>\n        <Icon type=\"shopping-cart\" />\n        เพิ่มไปยังรถเข็น\n      </AddCartButton>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}