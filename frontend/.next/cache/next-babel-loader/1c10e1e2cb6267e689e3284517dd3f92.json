{"ast":null,"code":"var _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignUp.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon } from \"antd\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"./gql\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 4rem;\n  max-width: 25rem;\n  margin: auto;\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nfunction SignUp(props) {\n  const {\n    getFieldDecorator\n  } = props.form;\n  const {\n    0: confirmDirty,\n    1: setConfirmDirty\n  } = useState(false);\n  const [register] = useMutation(REGISTER);\n\n  const createUser = async () => {\n    try {\n      const res = await register({\n        variables: {\n          name: \"Earth\",\n          type: \"Admin\",\n          email: \"mrearth@gmail.com\",\n          password: \"test\",\n          phone: \"0931354239\"\n        }\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleConfirmBlur = e => {\n    const {\n      value\n    } = e.target;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    const {\n      form\n    } = this.props;\n\n    if (value && confirmDirty) {\n      form.validateFields([\"\"], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    const {\n      form\n    } = this.props;\n\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"กรุณากรอกรหัสผ่านให้ตรงกัน\");\n    } else {\n      callback();\n    }\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"), __jsx(\"button\", {\n    onClick: () => createUser(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"test\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\xA0\", __jsx(Tooltip, {\n      title: \"\\u0E2D\\u0E22\\u0E32\\u0E01\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E23\\u0E32\\u0E40\\u0E23\\u0E35\\u0E22\\u0E01\\u0E04\\u0E38\\u0E13\\u0E27\\u0E48\\u0E32\\u0E2D\\u0E30\\u0E44\\u0E23?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"question-circle-o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, getFieldDecorator(\"nickname\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่ชื่อที่แสดง\",\n      whitespace: true\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      type: \"email\",\n      message: \"อีเมลไม่ถูกต้อง\"\n    }, {\n      required: true,\n      message: \"กรุณาระบุอีเมล\"\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาระบุรหัสผ่าน\"\n    }, {\n      validator: validateToNextPassword\n    }]\n  })(__jsx(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, getFieldDecorator(\"confirm\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาระบุยืนยันรหัสผ่าน\"\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })(__jsx(Input.Password, {\n    onBlur: handleConfirmBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E40\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E42\\u0E17\\u0E23\\u0E28\\u0E31\\u0E1E\\u0E17\\u0E4C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, getFieldDecorator(\"phone\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่เบอร์ติดต่อ\"\n    }]\n  })(__jsx(Input, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"))));\n}\n\nexport default Form.create()(SignUp);","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignUp.tsx"],"names":["styled","Button","Form","Input","Tooltip","Icon","useState","useMutation","REGISTER","Container","div","SignUp","props","getFieldDecorator","form","confirmDirty","setConfirmDirty","register","createUser","res","variables","name","type","email","password","phone","console","log","error","handleConfirmBlur","e","value","target","validateToNextPassword","rule","callback","validateFields","force","compareToFirstPassword","getFieldValue","handleSubmit","rules","required","message","whitespace","validator","width","create"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,IAAvC,QAAmD,MAAnD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAI;;;;;;;;;;;;;;;CAA7B;;AAiBA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,KAAK,CAACE,IAApC;AAEA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,QAAD,IAAaV,WAAW,CAACC,QAAD,CAA9B;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMF,QAAQ,CAAC;AACzBG,QAAAA,SAAS,EAAE;AACTC,UAAAA,IAAI,EAAE,OADG;AAETC,UAAAA,IAAI,EAAE,OAFG;AAGTC,UAAAA,KAAK,EAAE,mBAHE;AAITC,UAAAA,QAAQ,EAAE,MAJD;AAKTC,UAAAA,KAAK,EAAE;AALE;AADc,OAAD,CAA1B;AASAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACD,KAXD,CAWE,OAAOS,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GAfD;;AAiBA,QAAMC,iBAAiB,GAAGC,CAAC,IAAI;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACA;AACEhB,MAAAA,eAAe,CAACD,YAAY,IAAI,CAAC,CAACgB,KAAnB,CAAf;AACD;AACF,GALD;;AAOA,QAAME,sBAAsB,GAAG,CAACC,IAAD,EAAOH,KAAP,EAAcI,QAAd,KAA2B;AACxD,UAAM;AAAErB,MAAAA;AAAF,QAAW,KAAKF,KAAtB;;AACA,QAAImB,KAAK,IAAIhB,YAAb,EAA2B;AACzBD,MAAAA,IAAI,CAACsB,cAAL,CAAoB,CAAC,EAAD,CAApB,EAA0B;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA1B;AACD;;AACDF,IAAAA,QAAQ;AACT,GAND;;AAQA,QAAMG,sBAAsB,GAAG,CAACJ,IAAD,EAAOH,KAAP,EAAcI,QAAd,KAA2B;AACxD,UAAM;AAAErB,MAAAA;AAAF,QAAW,KAAKF,KAAtB;;AACA,QAAImB,KAAK,IAAIA,KAAK,KAAKjB,IAAI,CAACyB,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACrDJ,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ;AACT;AACF,GAPD;;AASA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMjB,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEsB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAC,yJAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG3B,iBAAiB,CAAC,UAAD,EAAa;AAC7B4B,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE,qBAFX;AAGEC,MAAAA,UAAU,EAAE;AAHd,KADK;AADsB,GAAb,CAAjB,CAQE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAVH,CADF,EAqBE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/B,iBAAiB,CAAC,OAAD,EAAU;AAC1B4B,IAAAA,KAAK,EAAE,CACL;AACEnB,MAAAA,IAAI,EAAE,OADR;AAEEqB,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KALK;AADmB,GAAV,CAAjB,CAWE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADH,CArBF,EAmCE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9B,iBAAiB,CAAC,UAAD,EAAa;AAC7B4B,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACEE,MAAAA,SAAS,EAAEZ;AADb,KALK;AADsB,GAAb,CAAjB,CAUE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADH,CAnCF,EAgDE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,sFAAjB;AAAkC,IAAA,WAAW,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,iBAAiB,CAAC,SAAD,EAAY;AAC5B4B,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACEE,MAAAA,SAAS,EAAEP;AADb,KALK;AADqB,GAAZ,CAAjB,CAUE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,MAAM,EAAET,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADH,CAhDF,EA6DE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,gFAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,iBAAiB,CAAC,OAAD,EAAU;AAC1B4B,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADmB,GAAV,CAAjB,CAEE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADH,CA7DF,EAkEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,CAlEF,CAJF,CADF;AA+ED;;AAED,eAAe5C,IAAI,CAAC6C,MAAL,GAAcpC,MAAd,CAAf","sourcesContent":["// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon } from \"antd\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"./gql\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 4rem;\n  max-width: 25rem;\n  margin: auto;\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nfunction SignUp(props) {\n  const { getFieldDecorator } = props.form;\n\n  const [confirmDirty, setConfirmDirty] = useState(false);\n  const [register] = useMutation(REGISTER);\n\n  const createUser = async () => {\n    try {\n      const res = await register({\n        variables: {\n          name: \"Earth\",\n          type: \"Admin\",\n          email: \"mrearth@gmail.com\",\n          password: \"test\",\n          phone: \"0931354239\"\n        }\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleConfirmBlur = e => {\n    const { value } = e.target;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && confirmDirty) {\n      form.validateFields([\"\"], { force: true });\n    }\n    callback();\n  };\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"กรุณากรอกรหัสผ่านให้ตรงกัน\");\n    } else {\n      callback();\n    }\n  };\n\n  return (\n    <Container>\n      <h1>ลงทะเบียน</h1>\n      <button onClick={() => createUser()}>test</button>\n\n      <Form onSubmit={handleSubmit}>\n        <Form.Item\n          label={\n            <span>\n              ชื่อ&nbsp;\n              <Tooltip title=\"อยากให้เราเรียกคุณว่าอะไร?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator(\"nickname\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาใส่ชื่อที่แสดง\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"อีเมล\">\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"อีเมลไม่ถูกต้อง\"\n              },\n              {\n                required: true,\n                message: \"กรุณาระบุอีเมล\"\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"รหัสผ่าน\">\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาระบุรหัสผ่าน\"\n              },\n              {\n                validator: validateToNextPassword\n              }\n            ]\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"ยืนยันรหัสผ่าน\" hasFeedback>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาระบุยืนยันรหัสผ่าน\"\n              },\n              {\n                validator: compareToFirstPassword\n              }\n            ]\n          })(<Input.Password onBlur={handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item label=\"เบอร์โทรศัพท์\">\n          {getFieldDecorator(\"phone\", {\n            rules: [{ required: true, message: \"กรุณาใส่เบอร์ติดต่อ\" }]\n          })(<Input style={{ width: \"100%\" }} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            ลงทะเบียน\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Form.create()(SignUp);\n"]},"metadata":{},"sourceType":"module"}