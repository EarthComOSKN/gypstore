{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($pid: ID, $amount: Number, $shid: ID,amount: $Int) {\\n    updateShoppingCart(\\n      where: { id: $$shid }\\n      data: {\\n        productItems: {\\n          upsert: {\\n            where: { key: $shid+$pid }\\n            create: {\\n              key: \\\"ck6gfsmop00i4073170gno0ykck6g0tu2s007a0731toft9idy\\\"\\n              product: { connect: { id: \\\"ck6g0tu2s007a0731toft9idy\\\" } }\\n              amount: 100\\n            }\\n            update: {\\n              product: { connect: { id: \\\"ck6g0tu2s007a0731toft9idy\\\" } }\\n              amount: 110\\n            }\\n          }\\n        }\\n      }\\n    ) {\\n      id\\n      productItems {\\n        product {\\n          name\\n        }\\n        amount\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID) {\\n    productItem(where: { id: $id }) {\\n      id\\n      name\\n      price\\n      brand\\n      unitType\\n      description\\n      amount\\n      MenuDetail\\n      category {\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($pName: String) {\\n    productItems(where: { category: { name: $pName } }) {\\n      id\\n      name\\n      price\\n      brand\\n      unitType\\n      description\\n      MenuDetail\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nexport var GET_PRODUCT = gql(_templateObject());\nexport var GET_PRODUCT_DETAIL = gql(_templateObject2());\nexport var ADD_PRODUCT_TO_CART = gql(_templateObject3());","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/gql.ts"],"names":["gql","GET_PRODUCT","GET_PRODUCT_DETAIL","ADD_PRODUCT_TO_CART"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,IAAMC,WAAW,GAAGD,GAAH,mBAAjB;AAcP,OAAO,IAAME,kBAAkB,GAAGF,GAAH,oBAAxB;AAkBP,OAAO,IAAMG,mBAAmB,GAAGH,GAAH,oBAAzB","sourcesContent":["import { gql } from 'apollo-boost'\n\nexport const GET_PRODUCT = gql`\n  query($pName: String) {\n    productItems(where: { category: { name: $pName } }) {\n      id\n      name\n      price\n      brand\n      unitType\n      description\n      MenuDetail\n    }\n  }\n`\n\nexport const GET_PRODUCT_DETAIL = gql`\n  query($id: ID) {\n    productItem(where: { id: $id }) {\n      id\n      name\n      price\n      brand\n      unitType\n      description\n      amount\n      MenuDetail\n      category {\n        name\n      }\n    }\n  }\n`\n\nexport const ADD_PRODUCT_TO_CART = gql`\n  mutation($pid: ID, $amount: Number, $shid: ID,amount: $Int) {\n    updateShoppingCart(\n      where: { id: $$shid }\n      data: {\n        productItems: {\n          upsert: {\n            where: { key: $shid+$pid }\n            create: {\n              key: \"ck6gfsmop00i4073170gno0ykck6g0tu2s007a0731toft9idy\"\n              product: { connect: { id: \"ck6g0tu2s007a0731toft9idy\" } }\n              amount: 100\n            }\n            update: {\n              product: { connect: { id: \"ck6g0tu2s007a0731toft9idy\" } }\n              amount: 110\n            }\n          }\n        }\n      }\n    ) {\n      id\n      productItems {\n        product {\n          name\n        }\n        amount\n      }\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}