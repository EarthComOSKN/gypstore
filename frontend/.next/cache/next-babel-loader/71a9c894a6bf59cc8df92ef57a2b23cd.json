{"ast":null,"code":"var _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignIn.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Icon, Input, Button, message } from \"antd\";\nimport styled from \"@emotion/styled\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN } from \"./gql\";\nimport { useRouter } from \"next/router\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 4rem;\n  max-width: 25rem;\n  margin: auto;\n  h1 {\n    margin-bottom: 45px;\n  }\n\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\nconst LoginForgot = styled.div`\n  float: right;\n  a {\n    color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\nconst LoginButton = styled.div`\n  a {\n    width: 100%;\n  }\n`;\n\nconst SignIn = props => {\n  const [login] = useMutation(LOGIN);\n  const router = useRouter();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const {\n          email,\n          password\n        } = values;\n\n        try {\n          var _res$data, _res$data$login;\n\n          const res = await login({\n            variables: {\n              email,\n              password\n            }\n          });\n          const token = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$login = _res$data.login) === null || _res$data$login === void 0 ? void 0 : _res$data$login.token;\n          localStorage.setItem(\"userToken\", token);\n          message.success(\"Login success\");\n          router.push(\"/\");\n        } catch (error) {\n          message.error(`${error}`);\n        }\n      }\n    });\n  };\n\n  const {\n    getFieldDecorator\n  } = props.form;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่อีเมล\"\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"user\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }),\n    placeholder: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่รหัสผ่าน\"\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"lock\",\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, getFieldDecorator(\"remember\", {\n    valuePropName: \"checked\",\n    initialValue: true\n  }), __jsx(LoginForgot, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u0E04\\u0E38\\u0E13\\u0E25\\u0E37\\u0E21\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\\u0E43\\u0E0A\\u0E48\\u0E44\\u0E2B\\u0E21?\")), __jsx(LoginButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\")))));\n};\n\nexport default Form.create()(SignIn);","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignIn.tsx"],"names":["Form","Icon","Input","Button","message","styled","useMutation","LOGIN","useRouter","Container","div","LoginForgot","LoginButton","SignIn","props","login","router","handleSubmit","e","preventDefault","form","validateFields","err","values","email","password","res","variables","token","data","localStorage","setItem","success","push","error","getFieldDecorator","rules","required","color","valuePropName","initialValue","create"],"mappings":"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","sourcesContent":["import { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport styled from \"@emotion/styled\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN } from \"./gql\";\nimport { useRouter } from \"next/router\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 4rem;\n  max-width: 25rem;\n  margin: auto;\n  h1 {\n    margin-bottom: 45px;\n  }\n\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nconst LoginForgot = styled.div`\n  float: right;\n  a {\n    color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nconst LoginButton = styled.div`\n  a {\n    width: 100%;\n  }\n`;\n\nconst SignIn = props => {\n  const [login] = useMutation(LOGIN);\n  const router = useRouter();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const { email, password } = values;\n        try {\n          const res = await login({\n            variables: {\n              email,\n              password\n            }\n          });\n          const token = res?.data?.login?.token;\n          localStorage.setItem(\"userToken\", token);\n          message.success(\"Login success\");\n          router.push(\"/\");\n        } catch (error) {\n          message.error(`${error}`);\n        }\n      }\n    });\n  };\n\n  const { getFieldDecorator } = props.form;\n\n  return (\n    <Container>\n      <h1>เข้าสู่ระบบ</h1>\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator(\"email\", {\n            rules: [{ required: true, message: \"กรุณาใส่อีเมล\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"อีเมล\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"กรุณาใส่รหัสผ่าน\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"รหัสผ่าน\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator(\"remember\", {\n            valuePropName: \"checked\",\n            initialValue: true\n          })}\n          <LoginForgot>\n            <a href=\"\">คุณลืมรหัสผ่านใช่ไหม?</a>\n          </LoginForgot>\n          <LoginButton>\n            <Button type=\"primary\" htmlType=\"submit\">\n              เข้าสู่ระบบ\n            </Button>\n          </LoginButton>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Form.create()(SignIn);\n"]},"metadata":{},"sourceType":"module"}