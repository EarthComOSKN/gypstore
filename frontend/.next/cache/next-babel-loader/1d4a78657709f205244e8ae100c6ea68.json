{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductAmountInput.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  cursor: pointer;\\n  background-color: white;\\n  :hover {\\n    background-color: rgb(238, 237, 233);\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 2rem 0;\\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\\n  display: grid;\\n  width: 100%;\\n  grid-template-columns: 1fr 3fr 1fr;\\n  height: 2rem;\\n  grid-gap: 1px;\\n  background-color: black;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from '@emotion/styled';\nvar Container = styled.div(_templateObject());\nvar ChangeButton = styled.div(_templateObject2());\nexport var ProductAmountInput = function ProductAmountInput(props) {\n  var onChange = props.onChange,\n      amount = props.amount,\n      restProps = _objectWithoutProperties(props, [\"onChange\", \"amount\"]);\n\n  return __jsx(Container, _extends({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(ChangeButton, {\n    onClick: function onClick() {\n      return onChange(amount - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"-\"), __jsx(ChangeButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, amount), __jsx(ChangeButton, {\n    onClick: function onClick() {\n      return onChange(amount + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"+\"));\n};","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductAmountInput.tsx"],"names":["styled","Container","div","ChangeButton","ProductAmountInput","props","onChange","amount","restProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,mBAAf;AAWA,IAAMC,YAAY,GAAGH,MAAM,CAACE,GAAV,oBAAlB;AAgBA,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAkB;AAAA,MAC1CC,QAD0C,GACPD,KADO,CAC1CC,QAD0C;AAAA,MAChCC,MADgC,GACPF,KADO,CAChCE,MADgC;AAAA,MACrBC,SADqB,4BACPH,KADO;;AAElD,SACE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE;AAAA,aAAMF,QAAQ,CAACC,MAAM,GAAG,CAAV,CAAd;AAAA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,MAAf,CAFF,EAGE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACC,MAAM,GAAG,CAAV,CAAd;AAAA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF;AAOD,CATM","sourcesContent":["import styled from '@emotion/styled'\n\nconst Container = styled.div`\n  margin: 2rem 0;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 3fr 1fr;\n  height: 2rem;\n  grid-gap: 1px;\n  background-color: black;\n`\n\nconst ChangeButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: white;\n  :hover {\n    background-color: rgb(238, 237, 233);\n  }\n`\n\ntype Props = {\n  onChange: (e) => void\n  amount: number\n}\n\nexport const ProductAmountInput = (props: Props) => {\n  const { onChange, amount, ...restProps } = props\n  return (\n    <Container {...restProps}>\n      <ChangeButton onClick={() => onChange(amount - 1)}>-</ChangeButton>\n      <ChangeButton>{amount}</ChangeButton>\n      <ChangeButton onClick={() => onChange(amount + 1)}>+</ChangeButton>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}