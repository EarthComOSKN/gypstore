{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignUp.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 380px;\\n  margin: 30px 0px;\\n  align-items: center;\\n  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { Form, Input, Select, AutoComplete } from \"antd\";\nvar Container = styled.div(_templateObject()); // const title = styled.div`\n//   margin: 10px 0;\n// `;\n// const [inputs, setInputs] = useState({ \n//   displayName: '',\n//   email: '',\n//   password: '',\n//   confirmPassword: ''}\n// );\n// const handleChange = (event) => {\n//   const { name, value } = event.target;\n//   setInputs(inputs => ({ ...inputs, [name]: value}));\n// };\n\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option; // const websiteOptions = autoCompleteResult.map(website => (\n//   <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n// ));\n\nvar handleConfirmBlur = function handleConfirmBlur(e) {};\n\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nvar tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction SignUp(props) {\n  var getFieldDecorator = props.form.getFieldDecorator;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), __jsx(Form.Item, {\n    label: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Input.Password, {\n    onBlur: handleConfirmBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))));\n}\n\nexport default Form.create()(SignUp);","map":{"version":3,"sources":["/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignUp.tsx"],"names":["styled","Form","Input","Select","AutoComplete","Container","div","Option","AutoCompleteOption","handleConfirmBlur","e","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","SignUp","props","getFieldDecorator","form","rules","type","message","required","create"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAEEC,IAFF,EAGEC,KAHF,EAOEC,MAPF,EAWEC,YAXF,QAWuB,MAXvB;AAcA,IAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV,mBAAf,C,CASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;IAEQC,M,GAAWJ,M,CAAXI,M;AACR,IAAMC,kBAAkB,GAAGJ,YAAY,CAACG,MAAxC,C,CAGA;AACA;AACA;;AAEA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,CAAC,EAAI,CAE9B,CAFD;;AAIA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADI;AAERC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFI,GADS;AAKnBE,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADM;AAEVC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFM;AALO,CAAvB;AAUE,IAAMG,kBAAkB,GAAG;AACzBD,EAAAA,UAAU,EAAE;AACVH,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAE,EADJ;AAEFI,MAAAA,MAAM,EAAE;AAFN,KADM;AAKVH,IAAAA,EAAE,EAAE;AACFD,MAAAA,IAAI,EAAE,EADJ;AAEFI,MAAAA,MAAM,EAAE;AAFN;AALM;AADa,CAA3B;;AAaF,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,MACbC,iBADa,GACSD,KAAK,CAACE,IADf,CACbD,iBADa;AAGrB,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuCE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,iBAAiB,CAAC,OAAD,EAAU;AACxBE,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEED,MAAAA,OAAO,EAAE;AAFX,KALK;AADiB,GAAV,CAAjB,CAWE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADH,CADF,EAeE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfF,EAkBE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,sFAAjB;AAAkC,IAAA,WAAW,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,MAAM,EAAEhB,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlBF,CAvCF,CADF;AAgED;;AAED,eAAeR,IAAI,CAAC0B,MAAL,GAAcR,MAAd,CAAf","sourcesContent":["// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { \n  Button, \n  Form, \n  Input, \n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  AutoComplete, } from \"antd\";\nimport { useState } from \"react\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n  margin: 30px 0px;\n  align-items: center;\n  \n`;\n\n// const title = styled.div`\n//   margin: 10px 0;\n// `;\n\n// const [inputs, setInputs] = useState({ \n//   displayName: '',\n//   email: '',\n//   password: '',\n//   confirmPassword: ''}\n// );\n\n// const handleChange = (event) => {\n//   const { name, value } = event.target;\n\n//   setInputs(inputs => ({ ...inputs, [name]: value}));\n// };\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\n\n// const websiteOptions = autoCompleteResult.map(website => (\n//   <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n// ));\n\nconst handleConfirmBlur = e => {\n  \n};\n\nconst formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n\nfunction SignUp(props) {\n  const { getFieldDecorator } = props.form;\n\n  return (\n    <Container>\n      {/* <h2 className='title'>ฉันยังไม่เป็นสมาชิก</h2>\n      <span>สมัครสมาชิกด้วยอีเมล</span>\n      <form>\n        <FormInput\n          type='text'\n          name='displayName'\n          value={inputs.displayName}\n          onChange={this.handleChange}\n          label={'Display Name'}\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={inputs.email}\n          onChange={handleChange}\n          label={'Email'}\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={inputs.password}\n          onChange={handleChange}\n          label={'Password'}\n          required\n        />  \n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={inputs.confirmPassword}\n          onChange={handleChange}\n          label={'Confirm Password'}\n          required\n        />\n        <Button>SIGN UP</Button>\n      </form> */}\n\n      <Form>\n        <Form.Item label=\"อีเมล\">\n          {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"รหัสผ่าน\">\n          {(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"ยืนยันรหัสผ่าน\" hasFeedback>\n          {(<Input.Password onBlur={handleConfirmBlur} />)}\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Form.create()(SignUp);"]},"metadata":{},"sourceType":"module"}