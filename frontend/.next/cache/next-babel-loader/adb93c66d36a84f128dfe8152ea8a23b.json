{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductAmountInput.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from '@emotion/styled';\nconst Container = styled.div`\n  margin: 2rem 0;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n  display: grid;\n  width: 15rem;\n  grid-template-columns: 1fr 3fr 1fr;\n  grid-gap: 1px;\n  background-color: black;\n`;\nconst ChangeButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  cursor: pointer;\n  background-color: white;\n  :hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\nexport const ProductAmountInput = props => {\n  const {\n    onChange,\n    amount\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"onChange\", \"amount\"]);\n\n  return __jsx(Container, _extends({}, restProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(ChangeButton, {\n    onClick: () => onChange(amount - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"-\"), __jsx(ChangeButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, amount), __jsx(ChangeButton, {\n    onClick: () => onChange(amount + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"+\"));\n};","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductAmountInput.tsx"],"names":["styled","Container","div","ChangeButton","ProductAmountInput","props","onChange","amount","restProps"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;;;;;;;;CAA7B;AAUA,MAAMC,YAAY,GAAGH,MAAM,CAACE,GAAI;;;;;;;;;CAAhC;AAgBA,OAAO,MAAME,kBAAkB,GAAIC,KAAD,IAAkB;AAClD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqCF,KAA3C;AAAA,QAA6BG,SAA7B,4BAA2CH,KAA3C;;AACA,SACE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAACC,MAAM,GAAG,CAAV,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,MAAf,CAFF,EAGE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACC,MAAM,GAAG,CAAV,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF;AAOD,CATM","sourcesContent":["import styled from '@emotion/styled'\n\nconst Container = styled.div`\n  margin: 2rem 0;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\n  display: grid;\n  width: 15rem;\n  grid-template-columns: 1fr 3fr 1fr;\n  grid-gap: 1px;\n  background-color: black;\n`\n\nconst ChangeButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  cursor: pointer;\n  background-color: white;\n  :hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`\n\ntype Props = {\n  onChange: (e) => void\n  amount: number\n}\n\nexport const ProductAmountInput = (props: Props) => {\n  const { onChange, amount, ...restProps } = props\n  return (\n    <Container {...restProps}>\n      <ChangeButton onClick={() => onChange(amount - 1)}>-</ChangeButton>\n      <ChangeButton>{amount}</ChangeButton>\n      <ChangeButton onClick={() => onChange(amount + 1)}>+</ChangeButton>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}