{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignUp.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 30%;\\n  margin: 30px 0px;\\n  align-items: center;\\n  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon } from \"antd\";\nimport { useState } from \"react\";\nvar Container = styled.div(_templateObject()); // const title = styled.div`\n//   margin: 10px 0;\n// `;\n// const [inputs, setInputs] = useState({ \n//   displayName: '',\n//   email: '',\n//   password: '',\n//   confirmPassword: ''}\n// );\n// const handleChange = (event) => {\n//   const { name, value } = event.target;\n//   setInputs(inputs => ({ ...inputs, [name]: value}));\n// };\n\nfunction SignUp(props) {\n  var _this = this;\n\n  var getFieldDecorator = props.form.getFieldDecorator;\n\n  var _useState = useState(false),\n      confirmDirty = _useState[0],\n      setConfirmDirty = _useState[1];\n\n  var _useState2 = useState([]),\n      autoCompleteResult = _useState2[0],\n      setAutoCompleteResult = _useState2[1];\n\n  var formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 16\n      }\n    }\n  };\n  var tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 20,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 8\n      }\n    }\n  };\n\n  var handleConfirmBlur = function handleConfirmBlur(e) {\n    var value = e.target.value;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n    ;\n  };\n\n  var validateToNextPassword = function validateToNextPassword(rule, value, callback) {\n    var form = _this.props.form;\n\n    if (value && confirmDirty) {\n      form.validateFields([''], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  var compareToFirstPassword = function compareToFirstPassword(rule, value, callback) {\n    var form = _this.props.form;\n\n    if (value && value !== form.getFieldValue('password')) {\n      callback('กรุณากรอกรหัสผ่านให้ตรงกัน');\n    } else {\n      callback();\n    }\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\xA0\", __jsx(Tooltip, {\n      title: \"\\u0E2D\\u0E22\\u0E32\\u0E01\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E23\\u0E32\\u0E40\\u0E23\\u0E35\\u0E22\\u0E01\\u0E04\\u0E38\\u0E13\\u0E27\\u0E48\\u0E32\\u0E2D\\u0E30\\u0E44\\u0E23?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"question-circle-o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, getFieldDecorator('nickname', {\n    rules: [{\n      required: true,\n      message: 'กรุณาใส่ชื่อที่แสดง',\n      whitespace: true\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'อีเมลไม่ถูกต้อง'\n    }, {\n      required: true,\n      message: 'กรุณาระบุอีเมล'\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'กรุณาระบุรหัสผ่าน'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })(__jsx(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'กรุณาระบุยืนยันรหัสผ่าน'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })(__jsx(Input.Password, {\n    onBlur: handleConfirmBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E40\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E42\\u0E17\\u0E23\\u0E28\\u0E31\\u0E1E\\u0E17\\u0E4C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, getFieldDecorator('phone', {\n    rules: [{\n      required: true,\n      message: 'กรุณาใส่เบอร์ติดต่อ'\n    }]\n  })(__jsx(Input, {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }))), __jsx(Form.Item, _extends({}, tailFormItemLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"))));\n}\n\nexport default Form.create()(SignUp);","map":{"version":3,"sources":["/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignUp.tsx"],"names":["styled","Button","Form","Input","Tooltip","Icon","useState","Container","div","SignUp","props","getFieldDecorator","form","confirmDirty","setConfirmDirty","autoCompleteResult","setAutoCompleteResult","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","handleConfirmBlur","e","value","target","validateToNextPassword","rule","callback","validateFields","force","compareToFirstPassword","getFieldValue","rules","required","message","whitespace","type","validator","width","create"],"mappings":"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","sourcesContent":["// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { \n  Button, \n  Form, \n  Input, \n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  AutoComplete, } from \"antd\";\nimport { useState } from \"react\";\nimport FormItem from \"antd/lib/form/FormItem\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: 30px 0px;\n  align-items: center;\n  \n`;\n\n// const title = styled.div`\n//   margin: 10px 0;\n// `;\n\n// const [inputs, setInputs] = useState({ \n//   displayName: '',\n//   email: '',\n//   password: '',\n//   confirmPassword: ''}\n// );\n\n// const handleChange = (event) => {\n//   const { name, value } = event.target;\n\n//   setInputs(inputs => ({ ...inputs, [name]: value}));\n// };\n\nfunction SignUp(props) {\n  const { getFieldDecorator } = props.form;\n\n  const [confirmDirty, setConfirmDirty] = useState(false);\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  \n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 20,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n  };\n\n  const handleConfirmBlur = e => {\n    const { value } = e.target;\n    {setConfirmDirty(confirmDirty || !!value)};\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && confirmDirty) {\n      form.validateFields([''], { force: true });\n    }\n    callback();\n  };\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('กรุณากรอกรหัสผ่านให้ตรงกัน');\n    } else {\n      callback();\n    }\n  };\n\n  return (\n    <Container>\n      {/* <h2 className='title'>ฉันยังไม่เป็นสมาชิก</h2>\n      <span>สมัครสมาชิกด้วยอีเมล</span>\n      <form>\n        <FormInput\n          type='text'\n          name='displayName'\n          value={inputs.displayName}\n          onChange={this.handleChange}\n          label={'Display Name'}\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={inputs.email}\n          onChange={handleChange}\n          label={'Email'}\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={inputs.password}\n          onChange={handleChange}\n          label={'Password'}\n          required\n        />  \n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={inputs.confirmPassword}\n          onChange={handleChange}\n          label={'Confirm Password'}\n          required\n        />\n        <Button>SIGN UP</Button>\n      </form> */}\n\n      <Form>\n        <Form.Item\n          label={\n            <span>\n              ชื่อ&nbsp;\n              <Tooltip title=\"อยากให้เราเรียกคุณว่าอะไร?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('nickname', {\n            rules: [{ required: true, message: 'กรุณาใส่ชื่อที่แสดง', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"อีเมล\">\n          {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'อีเมลไม่ถูกต้อง',\n                },\n                {\n                  required: true,\n                  message: 'กรุณาระบุอีเมล',\n                },\n              ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"รหัสผ่าน\">\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'กรุณาระบุรหัสผ่าน',\n              },\n              {\n                validator: validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"ยืนยันรหัสผ่าน\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'กรุณาระบุยืนยันรหัสผ่าน',\n              },\n              {\n                validator: compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item label=\"เบอร์โทรศัพท์\">\n          {getFieldDecorator('phone', {\n            rules: [{ required: true, message: 'กรุณาใส่เบอร์ติดต่อ' }],\n          })(<Input style={{ width: '100%' }} />)}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            ลงทะเบียน\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Form.create()(SignUp);"]},"metadata":{},"sourceType":"module"}