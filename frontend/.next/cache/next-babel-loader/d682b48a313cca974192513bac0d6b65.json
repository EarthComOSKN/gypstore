{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignUp.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 80%;\\n  padding-top: 4rem;\\n  max-width: 25rem;\\n  margin: auto;\\n  .ant-btn-primary {\\n    background-color: #ff8e0a;\\n    border-color: #ff8e0a;\\n    &:hover {\\n      background-color: #ffa53b;\\n      border-color: #ffa53b;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon, message } from \"antd\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"./gql\";\nimport { useRouter } from \"next/router\";\nvar Container = styled.div(_templateObject());\n\nfunction SignUp(props) {\n  var _props$form = props.form,\n      getFieldDecorator = _props$form.getFieldDecorator,\n      validateFields = _props$form.validateFields;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      confirmDirty = _useState[0],\n      setConfirmDirty = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useMutation = useMutation(REGISTER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      register = _useMutation2[0];\n\n  var createUser = function createUser(_ref) {\n    var nickname, email, password, phone, _res$data, res, _ref2, token;\n\n    return _regeneratorRuntime.async(function createUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            nickname = _ref.nickname, email = _ref.email, password = _ref.password, phone = _ref.phone;\n            _context.prev = 1;\n            setLoading(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(register({\n              variables: {\n                name: nickname,\n                type: \"Admin\",\n                email: email,\n                password: password,\n                phone: phone\n              }\n            }));\n\n          case 5:\n            res = _context.sent;\n            _ref2 = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.register, token = _ref2.token;\n            localStorage.setItem(\"userToken\", token);\n            router.push(\"/\");\n            message.success(\"Register Completed\");\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            message.error(\"\".concat(_context.t0));\n\n          case 15:\n            _context.prev = 15;\n            setLoading(false);\n            return _context.finish(15);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12, 15, 18]]);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            e.preventDefault();\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(validateFields(function _callee(err, values) {\n              return _regeneratorRuntime.async(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (err) {\n                        _context2.next = 5;\n                        break;\n                      }\n\n                      _context2.next = 3;\n                      return _regeneratorRuntime.awrap(createUser(values));\n\n                    case 3:\n                      _context2.next = 6;\n                      break;\n\n                    case 5:\n                      console.log(\"eeeee\", err);\n\n                    case 6:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              });\n            }));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n\n  var handleConfirmBlur = function handleConfirmBlur(e) {\n    var value = e.target.value;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n  }; // const validateToNextPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   if (value && confirmDirty) {\n  //     form.validateFields([\"\"], { force: true });\n  //   }\n  //   callback();\n  // };\n  // const compareToFirstPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   console.log(value);\n  //   if (value && value !== form.getFieldValue(\"password\")) {\n  //     callback(\"กรุณากรอกรหัสผ่านให้ตรงกัน\");\n  //   } else {\n  //     callback();\n  //   }\n  // };\n\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\xA0\", __jsx(Tooltip, {\n      title: \"\\u0E2D\\u0E22\\u0E32\\u0E01\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E23\\u0E32\\u0E40\\u0E23\\u0E35\\u0E22\\u0E01\\u0E04\\u0E38\\u0E13\\u0E27\\u0E48\\u0E32\\u0E2D\\u0E30\\u0E44\\u0E23?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"question-circle-o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, getFieldDecorator(\"nickname\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่ชื่อที่แสดง\",\n      whitespace: true\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      type: \"email\",\n      message: \"อีเมลไม่ถูกต้อง\"\n    }, {\n      required: true,\n      message: \"กรุณาระบุอีเมล\"\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาระบุรหัสผ่าน\"\n    }]\n  })(__jsx(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, getFieldDecorator(\"confirm\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาระบุยืนยันรหัสผ่าน\"\n    }]\n  })(__jsx(Input.Password, {\n    onBlur: handleConfirmBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E40\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E42\\u0E17\\u0E23\\u0E28\\u0E31\\u0E1E\\u0E17\\u0E4C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, getFieldDecorator(\"phone\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่เบอร์ติดต่อ\"\n    }]\n  })(__jsx(Input, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(Button, {\n    disabled: loading,\n    type: \"primary\",\n    htmlType: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"))));\n}\n\nexport default Form.create()(SignUp);","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignUp.tsx"],"names":["styled","Button","Form","Input","Tooltip","Icon","message","useState","useMutation","REGISTER","useRouter","Container","div","SignUp","props","form","getFieldDecorator","validateFields","router","confirmDirty","setConfirmDirty","loading","setLoading","register","createUser","nickname","email","password","phone","variables","name","type","res","data","token","localStorage","setItem","push","success","error","handleSubmit","e","preventDefault","err","values","console","log","handleConfirmBlur","value","target","rules","required","whitespace","width","create"],"mappings":"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","sourcesContent":["import styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon, message } from \"antd\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"./gql\";\nimport { useRouter } from \"next/router\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 4rem;\n  max-width: 25rem;\n  margin: auto;\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nfunction SignUp(props) {\n  const { getFieldDecorator, validateFields } = props.form;\n  const router = useRouter();\n  const [confirmDirty, setConfirmDirty] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [register] = useMutation(REGISTER);\n\n  const createUser = async ({ nickname, email, password, phone }) => {\n    try {\n      setLoading(true);\n      const res = await register({\n        variables: {\n          name: nickname,\n          type: \"Admin\",\n          email,\n          password,\n          phone\n        }\n      });\n      const { token } = res?.data?.register;\n      localStorage.setItem(\"userToken\", token);\n      router.push(\"/\");\n      message.success(\"Register Completed\");\n    } catch (error) {\n      message.error(`${error}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await validateFields(async (err, values) => {\n      if (!err) {\n        await createUser(values);\n      } else console.log(\"eeeee\", err);\n    });\n  };\n\n  const handleConfirmBlur = e => {\n    const { value } = e.target;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n  };\n\n  // const validateToNextPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   if (value && confirmDirty) {\n  //     form.validateFields([\"\"], { force: true });\n  //   }\n  //   callback();\n  // };\n\n  // const compareToFirstPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   console.log(value);\n  //   if (value && value !== form.getFieldValue(\"password\")) {\n  //     callback(\"กรุณากรอกรหัสผ่านให้ตรงกัน\");\n  //   } else {\n  //     callback();\n  //   }\n  // };\n\n  return (\n    <Container>\n      <h1>ลงทะเบียน</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Item\n          label={\n            <span>\n              ชื่อ&nbsp;\n              <Tooltip title=\"อยากให้เราเรียกคุณว่าอะไร?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator(\"nickname\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาใส่ชื่อที่แสดง\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"อีเมล\">\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"อีเมลไม่ถูกต้อง\"\n              },\n              {\n                required: true,\n                message: \"กรุณาระบุอีเมล\"\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"รหัสผ่าน\">\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาระบุรหัสผ่าน\"\n              }\n            ]\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"ยืนยันรหัสผ่าน\" hasFeedback>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาระบุยืนยันรหัสผ่าน\"\n              }\n            ]\n          })(<Input.Password onBlur={handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item label=\"เบอร์โทรศัพท์\">\n          {getFieldDecorator(\"phone\", {\n            rules: [{ required: true, message: \"กรุณาใส่เบอร์ติดต่อ\" }]\n          })(<Input style={{ width: \"100%\" }} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            disabled={loading}\n            type=\"primary\"\n            htmlType=\"submit\"\n            onClick={handleSubmit}\n          >\n            ลงทะเบียน\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Form.create()(SignUp);\n"]},"metadata":{},"sourceType":"module"}