{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/component/SignUp.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon } from \"antd\";\nimport { useState } from \"react\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: 30px 50px;\n\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nfunction SignUp(props) {\n  const {\n    getFieldDecorator\n  } = props.form;\n  const {\n    0: confirmDirty,\n    1: setConfirmDirty\n  } = useState(false);\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 16,\n        offset: 6\n      }\n    }\n  };\n\n  const handleConfirmBlur = e => {\n    const {\n      value\n    } = e.target;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n    ;\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    const {\n      form\n    } = this.props;\n\n    if (value && confirmDirty) {\n      form.validateFields([''], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    const {\n      form\n    } = this.props;\n\n    if (value && value !== form.getFieldValue('password')) {\n      callback('กรุณากรอกรหัสผ่านให้ตรงกัน');\n    } else {\n      callback();\n    }\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"), __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\xA0\", __jsx(Tooltip, {\n      title: \"\\u0E2D\\u0E22\\u0E32\\u0E01\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E23\\u0E32\\u0E40\\u0E23\\u0E35\\u0E22\\u0E01\\u0E04\\u0E38\\u0E13\\u0E27\\u0E48\\u0E32\\u0E2D\\u0E30\\u0E44\\u0E23?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"question-circle-o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, getFieldDecorator('nickname', {\n    rules: [{\n      required: true,\n      message: 'กรุณาใส่ชื่อที่แสดง',\n      whitespace: true\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'อีเมลไม่ถูกต้อง'\n    }, {\n      required: true,\n      message: 'กรุณาระบุอีเมล'\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'กรุณาระบุรหัสผ่าน'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })(__jsx(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'กรุณาระบุยืนยันรหัสผ่าน'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })(__jsx(Input.Password, {\n    onBlur: handleConfirmBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E40\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E42\\u0E17\\u0E23\\u0E28\\u0E31\\u0E1E\\u0E17\\u0E4C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, getFieldDecorator('phone', {\n    rules: [{\n      required: true,\n      message: 'กรุณาใส่เบอร์ติดต่อ'\n    }]\n  })(__jsx(Input, {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), __jsx(Form.Item, _extends({}, tailFormItemLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"))));\n}\n\nexport default Form.create()(SignUp);","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/component/SignUp.tsx"],"names":["styled","Button","Form","Input","Tooltip","Icon","useState","Container","div","SignUp","props","getFieldDecorator","form","confirmDirty","setConfirmDirty","tailFormItemLayout","wrapperCol","xs","span","offset","sm","handleConfirmBlur","e","value","target","validateToNextPassword","rule","callback","validateFields","force","compareToFirstPassword","getFieldValue","rules","required","message","whitespace","type","validator","width","create"],"mappings":"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","sourcesContent":["import styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon, } from \"antd\";\nimport { useState } from \"react\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: 30px 50px;\n\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nfunction SignUp(props) {\n  const { getFieldDecorator } = props.form;\n\n  const [confirmDirty, setConfirmDirty] = useState(false);\n  \n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 6,\n      },\n    },\n  };\n\n  const handleConfirmBlur = e => {\n    const { value } = e.target;\n    {setConfirmDirty(confirmDirty || !!value)};\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && confirmDirty) {\n      form.validateFields([''], { force: true });\n    }\n    callback();\n  };\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('กรุณากรอกรหัสผ่านให้ตรงกัน');\n    } else {\n      callback();\n    }\n  };\n\n  return (\n    <Container>\n      <h1>ลงทะเบียน</h1>\n      <Form>\n        <Form.Item\n          label={\n            <span>\n              ชื่อ&nbsp;\n              <Tooltip title=\"อยากให้เราเรียกคุณว่าอะไร?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('nickname', {\n            rules: [{ required: true, message: 'กรุณาใส่ชื่อที่แสดง', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"อีเมล\">\n          {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'อีเมลไม่ถูกต้อง',\n                },\n                {\n                  required: true,\n                  message: 'กรุณาระบุอีเมล',\n                },\n              ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"รหัสผ่าน\">\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'กรุณาระบุรหัสผ่าน',\n              },\n              {\n                validator: validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"ยืนยันรหัสผ่าน\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'กรุณาระบุยืนยันรหัสผ่าน',\n              },\n              {\n                validator: compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item label=\"เบอร์โทรศัพท์\">\n          {getFieldDecorator('phone', {\n            rules: [{ required: true, message: 'กรุณาใส่เบอร์ติดต่อ' }],\n          })(<Input style={{ width: '100%' }} />)}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            ลงทะเบียน\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Form.create()(SignUp);"]},"metadata":{},"sourceType":"module"}