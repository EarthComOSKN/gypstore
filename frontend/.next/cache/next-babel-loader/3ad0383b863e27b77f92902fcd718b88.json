{"ast":null,"code":"var _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PRODUCT } from './gql';\nimport styled from '@emotion/styled';\nimport { Card } from 'antd';\nconst {\n  Meta\n} = Card;\nconst ProductContainer = styled.div`\n  padding: 2rem 4rem;\n  display: flex;\n`;\nexport const ProductList = props => {\n  const {\n    category = ''\n  } = props;\n  const {\n    data,\n    loading\n  } = useQuery(GET_PRODUCT, {\n    variables: {\n      pName: category\n    }\n  });\n  if (loading) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"'Loading...'\");\n  const productItems = data.productItems;\n  console.log(data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, category), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, productItems.map(p => {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, p.name);\n  })), __jsx(ProductContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Card, {\n    hoverable: true,\n    cover: __jsx(\"img\", {\n      alt: \"example\",\n      src: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Meta, {\n    title: \"Europe Street beat\",\n    description: \"www.instagram.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/product/ProductList.tsx"],"names":["useQuery","GET_PRODUCT","styled","Card","Meta","ProductContainer","div","ProductList","props","category","data","loading","variables","pName","productItems","console","log","map","p","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWD,IAAjB;AAEA,MAAME,gBAAgB,GAAGH,MAAM,CAACI,GAAI;;;CAApC;AASA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAkB;AAC3C,QAAM;AAAEC,IAAAA,QAAQ,GAAG;AAAb,MAAoBD,KAA1B;AACA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBX,QAAQ,CAACC,WAAD,EAAc;AAC9CW,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAEJ;AAAT;AADmC,GAAd,CAAlC;AAGA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAMG,YAAY,GAAGJ,IAAI,CAACI,YAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,QAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,YAAY,CAACG,GAAb,CAAiBC,CAAC,IAAI;AACrB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,CAAC,CAACC,IAAP,CAAP;AACD,GAFA,CADH,CAFF,EAOE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EACH;AACE,MAAA,GAAG,EAAC,SADN;AAEE,MAAA,GAAG,EAAC,4DAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,oBAAZ;AAAiC,IAAA,WAAW,EAAC,mBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CAPF,CADF;AAuBD,CA/BM","sourcesContent":["import { useQuery } from '@apollo/react-hooks'\nimport { GET_PRODUCT } from './gql'\nimport styled from '@emotion/styled'\nimport { Card } from 'antd'\n\nconst { Meta } = Card\n\nconst ProductContainer = styled.div`\n  padding: 2rem 4rem;\n  display: flex;\n`\n\ntype Props = {\n  category?: string\n}\n\nexport const ProductList = (props: Props) => {\n  const { category = '' } = props\n  const { data, loading } = useQuery(GET_PRODUCT, {\n    variables: { pName: category },\n  })\n  if (loading) return <div>'Loading...'</div>\n  const productItems = data.productItems as ProductItem[]\n  console.log(data)\n  return (\n    <div>\n      <h1>{category}</h1>\n      <ul>\n        {productItems.map(p => {\n          return <li>{p.name}</li>\n        })}\n      </ul>\n      <ProductContainer>\n        <Card\n          hoverable\n          cover={\n            <img\n              alt=\"example\"\n              src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n            />\n          }\n        >\n          <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n        </Card>\n      </ProductContainer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}