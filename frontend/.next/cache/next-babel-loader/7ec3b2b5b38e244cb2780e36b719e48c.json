{"ast":null,"code":"import { ApolloClient, ApolloLink, InMemoryCache } from 'apollo-boost';\nimport fetch from 'isomorphic-unfetch';\nimport { createHttpLink } from 'apollo-link-http';\nvar uri = false ? 'http://localhost:4000' : 'http://34.87.61.160:4000/';\nvar httpLink = createHttpLink({\n  uri: uri,\n  fetch: !true && fetch\n});\nvar authLink = new ApolloLink(function (operation, forward) {\n  // Retrieve the authorization token from local storage.\n  var token = localStorage.getItem('userToken'); // Use the setContext method to set the HTTP headers.\n\n  operation.setContext({\n    headers: {\n      authorization: token ? \"Bearer \".concat(token) : ''\n    }\n  }); // Call the next link in the middleware chain.\n\n  return forward(operation);\n});\nvar client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  // Chain it with the HttpLink\n  cache: new InMemoryCache()\n});\nexport default client;","map":null,"metadata":{},"sourceType":"module"}