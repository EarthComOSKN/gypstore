{"ast":null,"code":"var _jsxFileName = \"/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignUp.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { Form, Input, Select, AutoComplete } from \"antd\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n`;\nconst title = styled.div`\n  margin: 10px 0;\n`; // const [inputs, setInputs] = useState({ \n//   displayName: '',\n//   email: '',\n//   password: '',\n//   confirmPassword: ''}\n// );\n// const handleChange = (event) => {\n//   const { name, value } = event.target;\n//   setInputs(inputs => ({ ...inputs, [name]: value}));\n// };\n\nconst {\n  Option\n} = Select;\nconst AutoCompleteOption = AutoComplete.Option; // const websiteOptions = autoCompleteResult.map(website => (\n//   <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n// ));\n\nexport const SignUp = () => {\n  const {\n    getFieldDecorator\n  } = this.props.form;\n  const {\n    autoCompleteResult\n  } = this.state;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'โปรดระบุอีเมลที่ถูกต้อง'\n    }, {\n      required: true,\n      message: 'โปรดระบุอีเมล'\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignUp.tsx"],"names":["styled","Form","Input","Select","AutoComplete","Container","div","title","Option","AutoCompleteOption","SignUp","getFieldDecorator","props","form","autoCompleteResult","state","rules","type","message","required"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAEEC,IAFF,EAGEC,KAHF,EAOEC,MAPF,EAWEC,YAXF,QAWuB,MAXvB;AAcA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;;;;CAA7B;AAMA,MAAMC,KAAK,GAAGP,MAAM,CAACM,GAAI;;CAAzB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA,MAAM;AAAEE,EAAAA;AAAF,IAAaL,MAAnB;AACA,MAAMM,kBAAkB,GAAGL,YAAY,CAACI,MAAxC,C,CAGA;AACA;AACA;;AAGA,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAwB,KAAKC,KAAL,CAAWC,IAAzC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAyB,KAAKC,KAApC;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuCE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAAC,OAAD,EAAU;AACxBK,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEED,MAAAA,OAAO,EAAE;AAFX,KALK;AADiB,GAAV,CAAjB,CAWI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADH,CADF,CAvCF,CADF;AA0DD,CA9DM","sourcesContent":["// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { \n  Button, \n  Form, \n  Input, \n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  AutoComplete, } from \"antd\";\nimport { useState } from \"react\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n`;\n\nconst title = styled.div`\n  margin: 10px 0;\n`;\n\n// const [inputs, setInputs] = useState({ \n//   displayName: '',\n//   email: '',\n//   password: '',\n//   confirmPassword: ''}\n// );\n\n// const handleChange = (event) => {\n//   const { name, value } = event.target;\n\n//   setInputs(inputs => ({ ...inputs, [name]: value}));\n// };\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\n\n// const websiteOptions = autoCompleteResult.map(website => (\n//   <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n// ));\n\n\nexport const SignUp = () => {\n  const { getFieldDecorator } = this.props.form;\n  const { autoCompleteResult } = this.state;\n  \n  return (\n    <Container>\n      {/* <h2 className='title'>ฉันยังไม่เป็นสมาชิก</h2>\n      <span>สมัครสมาชิกด้วยอีเมล</span>\n      <form>\n        <FormInput\n          type='text'\n          name='displayName'\n          value={inputs.displayName}\n          onChange={this.handleChange}\n          label={'Display Name'}\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={inputs.email}\n          onChange={handleChange}\n          label={'Email'}\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={inputs.password}\n          onChange={handleChange}\n          label={'Password'}\n          required\n        />  \n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={inputs.confirmPassword}\n          onChange={handleChange}\n          label={'Confirm Password'}\n          required\n        />\n        <Button>SIGN UP</Button>\n      </form> */}\n\n      <Form>\n        <Form.Item label=\"อีเมล\">\n          {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'โปรดระบุอีเมลที่ถูกต้อง',\n                },\n                {\n                  required: true,\n                  message: 'โปรดระบุอีเมล',\n                },\n              ],\n            })(<Input />)}\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n};"]},"metadata":{},"sourceType":"module"}