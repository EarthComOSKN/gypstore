{"ast":null,"code":"var _jsxFileName = \"/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignUp.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon } from \"antd\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"./gql\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 4rem;\n  max-width: 25rem;\n  margin: auto;\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nfunction SignUp(props) {\n  const {\n    getFieldDecorator,\n    validateFields\n  } = props.form;\n  const {\n    0: confirmDirty,\n    1: setConfirmDirty\n  } = useState(false);\n  const [register] = useMutation(REGISTER);\n\n  const createUser = async ({\n    nickname,\n    email,\n    password,\n    phone\n  }) => {\n    try {\n      const res = await register({\n        variables: {\n          name: nickname,\n          type: \"Admin\",\n          email,\n          password,\n          phone\n        }\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await validateFields(async (err, values) => {\n      if (!err) {\n        await createUser(values);\n      } else console.log(\"eeeee\", err);\n    });\n  };\n\n  const handleConfirmBlur = e => {\n    const {\n      value\n    } = e.target;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n  }; // const validateToNextPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   if (value && confirmDirty) {\n  //     form.validateFields([\"\"], { force: true });\n  //   }\n  //   callback();\n  // };\n  // const compareToFirstPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   console.log(value);\n  //   if (value && value !== form.getFieldValue(\"password\")) {\n  //     callback(\"กรุณากรอกรหัสผ่านให้ตรงกัน\");\n  //   } else {\n  //     callback();\n  //   }\n  // };\n\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    label: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\xA0\", __jsx(Tooltip, {\n      title: \"\\u0E2D\\u0E22\\u0E32\\u0E01\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E23\\u0E32\\u0E40\\u0E23\\u0E35\\u0E22\\u0E01\\u0E04\\u0E38\\u0E13\\u0E27\\u0E48\\u0E32\\u0E2D\\u0E30\\u0E44\\u0E23?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"question-circle-o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, getFieldDecorator(\"nickname\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่ชื่อที่แสดง\",\n      whitespace: true\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      type: \"email\",\n      message: \"อีเมลไม่ถูกต้อง\"\n    }, {\n      required: true,\n      message: \"กรุณาระบุอีเมล\"\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, getFieldDecorator(\"password\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาระบุรหัสผ่าน\"\n    }]\n  })(__jsx(Input.Password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    hasFeedback: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, getFieldDecorator(\"confirm\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาระบุยืนยันรหัสผ่าน\"\n    }]\n  })(__jsx(Input.Password, {\n    onBlur: handleConfirmBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"\\u0E40\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E42\\u0E17\\u0E23\\u0E28\\u0E31\\u0E1E\\u0E17\\u0E4C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, getFieldDecorator(\"phone\", {\n    rules: [{\n      required: true,\n      message: \"กรุณาใส่เบอร์ติดต่อ\"\n    }]\n  })(__jsx(Input, {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\u0E25\\u0E07\\u0E17\\u0E30\\u0E40\\u0E1A\\u0E35\\u0E22\\u0E19\"))));\n}\n\nexport default Form.create()(SignUp);","map":{"version":3,"sources":["/Users/nutchanonploypray/work/gypstore/frontend/src/features/register/SignUp.tsx"],"names":["styled","Button","Form","Input","Tooltip","Icon","useState","useMutation","REGISTER","Container","div","SignUp","props","getFieldDecorator","validateFields","form","confirmDirty","setConfirmDirty","register","createUser","nickname","email","password","phone","res","variables","name","type","console","log","error","handleSubmit","e","preventDefault","err","values","handleConfirmBlur","value","target","rules","required","message","whitespace","width","create"],"mappings":"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","sourcesContent":["// import { FormInput } from \"../component/FormInput\"\nimport styled from \"@emotion/styled\";\nimport { Button, Form, Input, Tooltip, Icon } from \"antd\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { REGISTER } from \"./gql\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  padding-top: 4rem;\n  max-width: 25rem;\n  margin: auto;\n  .ant-btn-primary {\n    background-color: #ff8e0a;\n    border-color: #ff8e0a;\n    &:hover {\n      background-color: #ffa53b;\n      border-color: #ffa53b;\n    }\n  }\n`;\n\nfunction SignUp(props) {\n  const { getFieldDecorator, validateFields } = props.form;\n\n  const [confirmDirty, setConfirmDirty] = useState(false);\n  const [register] = useMutation(REGISTER);\n\n  const createUser = async ({ nickname, email, password, phone }) => {\n    try {\n      const res = await register({\n        variables: {\n          name: nickname,\n          type: \"Admin\",\n          email,\n          password,\n          phone\n        }\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await validateFields(async (err, values) => {\n      if (!err) {\n        await createUser(values);\n      } else console.log(\"eeeee\", err);\n    });\n  };\n\n  const handleConfirmBlur = e => {\n    const { value } = e.target;\n    {\n      setConfirmDirty(confirmDirty || !!value);\n    }\n  };\n\n  // const validateToNextPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   if (value && confirmDirty) {\n  //     form.validateFields([\"\"], { force: true });\n  //   }\n  //   callback();\n  // };\n\n  // const compareToFirstPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   console.log(value);\n  //   if (value && value !== form.getFieldValue(\"password\")) {\n  //     callback(\"กรุณากรอกรหัสผ่านให้ตรงกัน\");\n  //   } else {\n  //     callback();\n  //   }\n  // };\n\n  return (\n    <Container>\n      <h1>ลงทะเบียน</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Item\n          label={\n            <span>\n              ชื่อ&nbsp;\n              <Tooltip title=\"อยากให้เราเรียกคุณว่าอะไร?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator(\"nickname\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาใส่ชื่อที่แสดง\",\n                whitespace: true\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"อีเมล\">\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"อีเมลไม่ถูกต้อง\"\n              },\n              {\n                required: true,\n                message: \"กรุณาระบุอีเมล\"\n              }\n            ]\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"รหัสผ่าน\">\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาระบุรหัสผ่าน\"\n              }\n            ]\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"ยืนยันรหัสผ่าน\" hasFeedback>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"กรุณาระบุยืนยันรหัสผ่าน\"\n              }\n            ]\n          })(<Input.Password onBlur={handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item label=\"เบอร์โทรศัพท์\">\n          {getFieldDecorator(\"phone\", {\n            rules: [{ required: true, message: \"กรุณาใส่เบอร์ติดต่อ\" }]\n          })(<Input style={{ width: \"100%\" }} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n            ลงทะเบียน\n          </Button>\n        </Form.Item>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Form.create()(SignUp);\n"]},"metadata":{},"sourceType":"module"}