{"ast":null,"code":"var _jsxFileName = \"/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignIn.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport styled from \"@emotion/styled\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: 30px 0px;\n  align-items: left;\n`;\n\nfunction SignIn(props) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  const {\n    getFieldDecorator\n  } = props.form;\n  return __jsx(Form, {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, getFieldDecorator('username', {\n    rules: [{\n      required: true,\n      message: 'กรุณาใส่อีเมล'\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }),\n    placeholder: \"\\u0E2D\\u0E35\\u0E40\\u0E21\\u0E25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'กรุณาใส่รหัสผ่าน'\n    }]\n  })(__jsx(Input, {\n    prefix: __jsx(Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, getFieldDecorator('remember', {\n    valuePropName: 'checked',\n    initialValue: true\n  })(__jsx(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Remember me\")), __jsx(\"a\", {\n    className: \"login-form-forgot\",\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Forgot password\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Log in\"), \"Or \", __jsx(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"register now!\")));\n}\n\nexport default Form.create()(SignIn);","map":{"version":3,"sources":["/Users/puwong/Developer/senior/gypstore/frontend/src/component/SignIn.tsx"],"names":["Form","Icon","Input","Button","Checkbox","styled","Container","div","SignIn","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","getFieldDecorator","rules","required","message","color","valuePropName","initialValue","create"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,MAApD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;;;;;;CAA7B;;AAQA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKH,KAAL,CAAWI,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9C,UAAI,CAACD,GAAL,EAAU;AACRE,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD;AACF,KAJD;AAKD,GAPD;;AASA,QAAM;AAAEG,IAAAA;AAAF,MAAwBV,KAAK,CAACI,IAApC;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAA8B,IAAA,SAAS,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,iBAAiB,CAAC,UAAD,EAAa;AAC7BC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADsB,GAAb,CAAjB,CAGC,MAAC,KAAD;AACE,IAAA,MAAM,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEE,IAAA,WAAW,EAAC,gCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADH,CADF,EAWE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAAC,UAAD,EAAa;AAC7BC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADsB,GAAb,CAAjB,CAGC,MAAC,KAAD;AACE,IAAA,MAAM,EAAE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,kDAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADH,CAXF,EAsBE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAAC,UAAD,EAAa;AAC7BK,IAAAA,aAAa,EAAE,SADc;AAE7BC,IAAAA,YAAY,EAAE;AAFe,GAAb,CAAjB,CAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADH,EAKE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAiC,IAAA,IAAI,EAAC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAQE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,SAWK;AAAG,IAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXL,CAtBF,CADF;AAsCD;;AAED,eAAezB,IAAI,CAAC0B,MAAL,GAAclB,MAAd,CAAf","sourcesContent":["import { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  margin: 30px 0px;\n  align-items: left;\n`;\n\nfunction SignIn(props) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  const { getFieldDecorator } = props.form;\n\n  return(\n    <Form onSubmit={handleSubmit} className=\"login-form\">\n      <Form.Item>\n        {getFieldDecorator('username', {\n          rules: [{ required: true, message: 'กรุณาใส่อีเมล' }],\n        })(\n          <Input\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"อีเมล\"\n          />,\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('password', {\n          rules: [{ required: true, message: 'กรุณาใส่รหัสผ่าน' }],\n        })(\n          <Input\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            type=\"password\"\n            placeholder=\"รหัสผ่าน\"\n          />,\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('remember', {\n          valuePropName: 'checked',\n          initialValue: true,\n        })(<Checkbox>Remember me</Checkbox>)}\n        <a className=\"login-form-forgot\" href=\"\">\n          Forgot password\n        </a>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n        Or <a href=\"\">register now!</a>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default Form.create()(SignIn);"]},"metadata":{},"sourceType":"module"}